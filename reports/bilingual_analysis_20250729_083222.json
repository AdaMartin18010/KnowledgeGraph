{
  "timestamp": "2025-07-29T08:32:22.235155",
  "total_files": 10,
  "average_bilingual_ratio": 0.29665320753837965,
  "results": [
    {
      "file_path": "docs\\01-knowledge-representation\\README.md",
      "total_lines": 640,
      "bilingual_lines": 140,
      "bilingual_ratio": 0.21875,
      "section_bilingual_ratio": 0.7254901960784313,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.05625,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "知识表示",
          "english_text": "Knowledge Representation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "知识表示是知识图谱中的核心概念 指将人类知识转化为计算机可处理的形式化结构 它通过数学符号 逻辑关系和语义映射 将复杂的现实世界知识抽象为可计算 可推理的数学模型 为知识图谱的构建 存储 查询和推理提供理论基础",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Knowledge representation is a core concept in knowledge graphs referring to the transformation of human knowledge into formal structures that computers can process It uses mathematical symbols logical relationships and semantic mappings to abstract complex real world knowledge into computable and inferable mathematical models providing theoretical foundations for knowledge graph construction storage querying and reasoning",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 符号主义时期 基于逻辑和规则的知识表示",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 连接主义时期 基于神经网络的知识表示",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 混合主义时期 至今 符号与统计相结合的知识表示",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "形式化 基于数学符号的严格定义",
          "english_text": "Formal Based on mathematical symbols for strict definition",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "可计算性 支持算法处理和推理",
          "english_text": "Computable Support algorithmic processing and reasoning",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "语义性 保持知识的语义含义",
          "english_text": "Semantic Maintain semantic meaning of knowledge",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "可扩展性 支持知识的动态增长",
          "english_text": "Extensible Support dynamic growth of knowledge",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "K C R A I",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "概念集合",
          "english_text": "C Concept Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "关系集合",
          "english_text": "R Relation Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "属性集合",
          "english_text": "A Attribute Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "实例集合",
          "english_text": "I Instance Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 49,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "知识表示系统 是一个四元组 其中概念集合 定义知识的基本单元 关系集合 描述概念间的逻辑关系 属性集合 定义概念的特征属性 实例集合 提供具体的知识实例",
          "english_text": "K C R A I",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 52,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 54,
          "chinese_text": "定理 知识表示完备性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "如果知识表示系统 是完备的 且概念集合 是正确表达的 则对于任何知识实体 如果 在 的范围内 则 能够表示 满足",
          "english_text": "K C E EC KE E K",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 57,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 59,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 60,
          "chinese_text": "设知识表示系统 是完备的",
          "english_text": "K",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 61,
          "chinese_text": "对于任意知识实体 如果概念集合 是正确表达的",
          "english_text": "E C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 62,
          "chinese_text": "且 在 的范围内 即",
          "english_text": "EC E C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 63,
          "chinese_text": "根据完备性定义 如果实体存在 则系统能够表示",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 64,
          "chinese_text": "因此 能够表示 满足",
          "english_text": "KE E K",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 65,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 67,
          "chinese_text": "定理 知识表示一致性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 68,
          "chinese_text": "如果知识表示系统 是一致的 且关系集合 是逻辑正确的 则对于任何概念对 如果存在关系 则 也成立",
          "english_text": "K R C C R C C R C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 70,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 72,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 73,
          "chinese_text": "设知识表示系统 是一致的",
          "english_text": "K",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 74,
          "chinese_text": "对于概念对 如果存在关系",
          "english_text": "C C R C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 75,
          "chinese_text": "根据一致性定义 关系必须满足逻辑一致性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 76,
          "chinese_text": "因此 也成立",
          "english_text": "R C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 77,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 79,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 81,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 83,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 84,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 85,
          "chinese_text": "知识实体 概念抽象",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 86,
          "chinese_text": "关系建模",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 87,
          "chinese_text": "属性定义",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 88,
          "chinese_text": "实例化",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "概念层次",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 91,
          "chinese_text": "概念分类",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 92,
          "chinese_text": "概念约束",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "继承关系",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 95,
          "chinese_text": "组合关系",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 96,
          "chinese_text": "关联关系",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "属性类型",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 99,
          "chinese_text": "属性约束",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 100,
          "chinese_text": "属性继承",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 101,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 103,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 105,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 107,
          "chinese_text": "优势 形式化严格性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 109,
          "chinese_text": "中文 知识表示基于严格的数学定义 确保逻辑的一致性和完备性",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 110,
          "chinese_text": "",
          "english_text": "English Knowledge representation is based on strict mathematical definitions ensuring logical consistency and completeness",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 112,
          "chinese_text": "优势 可计算性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 114,
          "chinese_text": "中文 通过形式化表示 知识可以被计算机自动处理和推理",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 115,
          "chinese_text": "",
          "english_text": "English Through formal representation knowledge can be automatically processed and reasoned by computers",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 117,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 119,
          "chinese_text": "局限性 表达能力",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 121,
          "chinese_text": "中文 形式化表示可能无法完全捕捉人类知识的复杂性和模糊性",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 122,
          "chinese_text": "",
          "english_text": "English Formal representation may not fully capture the complexity and ambiguity of human knowledge",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 124,
          "chinese_text": "局限性 可扩展性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 126,
          "chinese_text": "中文 大规模知识表示面临计算复杂度和存储效率的挑战",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 127,
          "chinese_text": "",
          "english_text": "English Large scale knowledge representation faces challenges in computational complexity and storage efficiency",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 129,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 131,
          "chinese_text": "争议点 符号主义 连接主义",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 133,
          "chinese_text": "支持观点 符号主义提供清晰的逻辑推理和可解释性",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 134,
          "chinese_text": "反对观点 连接主义能够处理复杂的非线性关系",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 135,
          "chinese_text": "中立分析 混合方法结合了两种范式的优势 可能是最佳选择",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 139,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 141,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 143,
          "chinese_text": "知识抽取算法",
          "english_text": "Knowledge Extraction Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 145,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 146,
          "chinese_text": "实现示例",
          "english_text": "Rust",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 147,
          "chinese_text": "",
          "english_text": "use std collections HashMap HashSet",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 148,
          "chinese_text": "",
          "english_text": "use std sync Arc Mutex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 150,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 151,
          "chinese_text": "",
          "english_text": "pub struct Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 153,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 154,
          "chinese_text": "",
          "english_text": "pub description String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 155,
          "chinese_text": "",
          "english_text": "pub attributes HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 156,
          "chinese_text": "",
          "english_text": "pub parent concepts HashSet String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 157,
          "chinese_text": "",
          "english_text": "pub child concepts HashSet String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 158,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 161,
          "chinese_text": "",
          "english_text": "pub struct Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 162,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 163,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 164,
          "chinese_text": "",
          "english_text": "pub source concept String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 165,
          "chinese_text": "",
          "english_text": "pub target concept String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 166,
          "chinese_text": "",
          "english_text": "pub relation type RelationType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "pub properties HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 168,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 170,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "",
          "english_text": "pub enum RelationType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 172,
          "chinese_text": "",
          "english_text": "Inheritance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 173,
          "chinese_text": "",
          "english_text": "Composition",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 174,
          "chinese_text": "",
          "english_text": "Association",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 175,
          "chinese_text": "",
          "english_text": "Dependency",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 176,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "pub struct Attribute",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 180,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 182,
          "chinese_text": "",
          "english_text": "pub data type DataType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 183,
          "chinese_text": "",
          "english_text": "pub constraints Vec Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 184,
          "chinese_text": "",
          "english_text": "pub default value Option String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 185,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 187,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "pub enum DataType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 189,
          "chinese_text": "",
          "english_text": "String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 190,
          "chinese_text": "",
          "english_text": "Integer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 191,
          "chinese_text": "",
          "english_text": "Float",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 192,
          "chinese_text": "",
          "english_text": "Boolean",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 193,
          "chinese_text": "",
          "english_text": "DateTime",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "Custom String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 197,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "pub struct Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 199,
          "chinese_text": "",
          "english_text": "pub constraint type ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 200,
          "chinese_text": "",
          "english_text": "pub value String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 203,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "",
          "english_text": "pub enum ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "Required",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "",
          "english_text": "Unique",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 207,
          "chinese_text": "",
          "english_text": "Range",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "Pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "pub struct Instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 213,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "",
          "english_text": "pub concept id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 215,
          "chinese_text": "",
          "english_text": "pub attributes HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 216,
          "chinese_text": "",
          "english_text": "pub relations Vec Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 220,
          "chinese_text": "",
          "english_text": "pub struct KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "",
          "english_text": "pub concepts HashMap String Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "",
          "english_text": "pub relations HashMap String Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 223,
          "chinese_text": "",
          "english_text": "pub attributes HashMap String Attribute",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 224,
          "chinese_text": "",
          "english_text": "pub instances HashMap String Instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 225,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 227,
          "chinese_text": "",
          "english_text": "impl KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 228,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 229,
          "chinese_text": "",
          "english_text": "KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 230,
          "chinese_text": "",
          "english_text": "concepts HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "relations HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 232,
          "chinese_text": "",
          "english_text": "attributes HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 233,
          "chinese_text": "",
          "english_text": "instances HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 235,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 237,
          "chinese_text": "",
          "english_text": "pub fn add concept mut self concept Concept Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "验证概念的唯一性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "if self concepts contains key concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "return Err format Concept already exists concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 241,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 243,
          "chinese_text": "验证父概念的存在性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 244,
          "chinese_text": "",
          "english_text": "for parent id in concept parent concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 245,
          "chinese_text": "",
          "english_text": "if self concepts contains key parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 246,
          "chinese_text": "",
          "english_text": "return Err format Parent concept does not exist parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 250,
          "chinese_text": "",
          "english_text": "self concepts insert concept id clone concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 251,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "",
          "english_text": "pub fn add relation mut self relation Relation Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "验证关系端点的存在性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 256,
          "chinese_text": "",
          "english_text": "if self concepts contains key relation source concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "return Err format Source concept does not exist relation source concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 259,
          "chinese_text": "",
          "english_text": "if self concepts contains key relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "",
          "english_text": "return Err format Target concept does not exist relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 261,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 263,
          "chinese_text": "验证关系的一致性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "if relation source concept relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 265,
          "chinese_text": "",
          "english_text": "return Err Self relation is not allowed to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 268,
          "chinese_text": "",
          "english_text": "self relations insert relation id clone relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 270,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 272,
          "chinese_text": "",
          "english_text": "pub fn add instance mut self instance Instance Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 273,
          "chinese_text": "验证实例所属概念的存在性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 274,
          "chinese_text": "",
          "english_text": "if self concepts contains key instance concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "return Err format Concept does not exist instance concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 276,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 278,
          "chinese_text": "验证实例属性的有效性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "let concept self concepts instance concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "",
          "english_text": "for attr name attr value in instance attributes",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 281,
          "chinese_text": "",
          "english_text": "if concept attributes contains key attr name",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "return Err format Attribute is not defined for concept attr name instance concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 283,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 284,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 286,
          "chinese_text": "",
          "english_text": "self instances insert instance id clone instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "pub fn query concept self concept id str Option Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 291,
          "chinese_text": "",
          "english_text": "self concepts get concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 294,
          "chinese_text": "",
          "english_text": "pub fn query instances self concept id str Vec Instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 295,
          "chinese_text": "",
          "english_text": "self instances values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "filter instance instance concept id concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 298,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "",
          "english_text": "pub fn query relations self concept id str Vec Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "self relations values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "",
          "english_text": "filter relation relation source concept concept id relation target concept concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 304,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "pub fn validate consistency self ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 307,
          "chinese_text": "",
          "english_text": "let mut result ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "",
          "english_text": "is consistent true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "errors Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "",
          "english_text": "warnings Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 311,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "检查概念层次的一致性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 314,
          "chinese_text": "",
          "english_text": "for concept in self concepts values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "for parent id in concept parent concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 316,
          "chinese_text": "",
          "english_text": "if self concepts contains key parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "",
          "english_text": "result errors push format Concept references non existent parent concept id parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 318,
          "chinese_text": "",
          "english_text": "result is consistent false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "检查关系的一致性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 324,
          "chinese_text": "",
          "english_text": "for relation in self relations values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 325,
          "chinese_text": "",
          "english_text": "if self concepts contains key relation source concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "result errors push format Relation references non existent source concept relation id relation source concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 327,
          "chinese_text": "",
          "english_text": "result is consistent false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 329,
          "chinese_text": "",
          "english_text": "if self concepts contains key relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "result errors push format Relation references non existent target concept relation id relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 331,
          "chinese_text": "",
          "english_text": "result is consistent false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 333,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "检查实例的一致性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 336,
          "chinese_text": "",
          "english_text": "for instance in self instances values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "if self concepts contains key instance concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "result errors push format Instance references non existent concept instance id instance concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 339,
          "chinese_text": "",
          "english_text": "result is consistent false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 344,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 346,
          "chinese_text": "",
          "english_text": "pub fn infer relations self Vec Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 347,
          "chinese_text": "",
          "english_text": "let mut inferred relations Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 349,
          "chinese_text": "基于继承关系推断关系",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 350,
          "chinese_text": "",
          "english_text": "for concept in self concepts values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 351,
          "chinese_text": "",
          "english_text": "for parent id in concept parent concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 352,
          "chinese_text": "",
          "english_text": "if let Some parent self concepts get parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 353,
          "chinese_text": "推断继承关系",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 354,
          "chinese_text": "",
          "english_text": "let inherited relation Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "",
          "english_text": "id format inherited concept id parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "name inherits from to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "source concept concept id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 358,
          "chinese_text": "",
          "english_text": "target concept parent id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 359,
          "chinese_text": "",
          "english_text": "relation type RelationType Inheritance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 360,
          "chinese_text": "",
          "english_text": "properties HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 361,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 362,
          "chinese_text": "",
          "english_text": "inferred relations push inherited relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 367,
          "chinese_text": "",
          "english_text": "inferred relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 368,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 369,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 371,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 372,
          "chinese_text": "",
          "english_text": "pub struct ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 373,
          "chinese_text": "",
          "english_text": "pub is consistent bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 374,
          "chinese_text": "",
          "english_text": "pub errors Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 375,
          "chinese_text": "",
          "english_text": "pub warnings Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 376,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 377,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "实现示例",
          "english_text": "Haskell",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "module KnowledgeRepresentation where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 384,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 385,
          "chinese_text": "",
          "english_text": "import Data Set Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 386,
          "chinese_text": "",
          "english_text": "import qualified Data Set as Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 387,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 388,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "data RelationType Inheritance Composition Association Dependency",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 391,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "data DataType StringType IntegerType FloatType BooleanType DateTimeType CustomType Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 396,
          "chinese_text": "",
          "english_text": "data ConstraintType Required Unique Range Pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "data Concept Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "conceptId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "conceptName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 402,
          "chinese_text": "",
          "english_text": "conceptDescription Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 403,
          "chinese_text": "",
          "english_text": "conceptAttributes Map Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 404,
          "chinese_text": "",
          "english_text": "conceptParentConcepts Set Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 405,
          "chinese_text": "",
          "english_text": "conceptChildConcepts Set Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 408,
          "chinese_text": "",
          "english_text": "data Relation Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "",
          "english_text": "relationId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "relationName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "relationSourceConcept Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 412,
          "chinese_text": "",
          "english_text": "relationTargetConcept Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "",
          "english_text": "relationType RelationType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "relationProperties Map Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 415,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "data Attribute Attribute",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 418,
          "chinese_text": "",
          "english_text": "attributeId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "",
          "english_text": "attributeName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 420,
          "chinese_text": "",
          "english_text": "attributeDataType DataType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 421,
          "chinese_text": "",
          "english_text": "attributeConstraints Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 422,
          "chinese_text": "",
          "english_text": "attributeDefaultValue Maybe Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 423,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 425,
          "chinese_text": "",
          "english_text": "data Constraint Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 426,
          "chinese_text": "",
          "english_text": "constraintType ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 427,
          "chinese_text": "",
          "english_text": "constraintValue Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "",
          "english_text": "data Instance Instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "instanceId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 432,
          "chinese_text": "",
          "english_text": "instanceConceptId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "",
          "english_text": "instanceAttributes Map Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "instanceRelations Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 437,
          "chinese_text": "",
          "english_text": "data KnowledgeRepresentation KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 438,
          "chinese_text": "",
          "english_text": "krConcepts Map Text Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 439,
          "chinese_text": "",
          "english_text": "krRelations Map Text Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 440,
          "chinese_text": "",
          "english_text": "krAttributes Map Text Attribute",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 441,
          "chinese_text": "",
          "english_text": "krInstances Map Text Instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 442,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 444,
          "chinese_text": "",
          "english_text": "emptyKnowledgeRepresentation KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "emptyKnowledgeRepresentation KnowledgeRepresentation Map empty Map empty Map empty Map empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 447,
          "chinese_text": "",
          "english_text": "addConcept KnowledgeRepresentation Concept Either Text KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "",
          "english_text": "addConcept kr concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 449,
          "chinese_text": "",
          "english_text": "let conceptId conceptId concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 450,
          "chinese_text": "",
          "english_text": "concepts krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 451,
          "chinese_text": "",
          "english_text": "in if Map member conceptId concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 452,
          "chinese_text": "",
          "english_text": "then Left T concat Concept conceptId already exists",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 453,
          "chinese_text": "",
          "english_text": "else Right kr krConcepts Map insert conceptId concept concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 455,
          "chinese_text": "",
          "english_text": "addRelation KnowledgeRepresentation Relation Either Text KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 456,
          "chinese_text": "",
          "english_text": "addRelation kr relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 457,
          "chinese_text": "",
          "english_text": "let sourceConcept relationSourceConcept relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 458,
          "chinese_text": "",
          "english_text": "targetConcept relationTargetConcept relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 459,
          "chinese_text": "",
          "english_text": "concepts krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 460,
          "chinese_text": "",
          "english_text": "in if not Map member sourceConcept concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "",
          "english_text": "then Left T concat Source concept sourceConcept does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 462,
          "chinese_text": "",
          "english_text": "else if not Map member targetConcept concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 463,
          "chinese_text": "",
          "english_text": "then Left T concat Target concept targetConcept does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 464,
          "chinese_text": "",
          "english_text": "else if sourceConcept targetConcept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 465,
          "chinese_text": "",
          "english_text": "then Left Self relation is not allowed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 466,
          "chinese_text": "",
          "english_text": "else Right kr krRelations Map insert relationId relation relation krRelations kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 468,
          "chinese_text": "",
          "english_text": "addInstance KnowledgeRepresentation Instance Either Text KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 469,
          "chinese_text": "",
          "english_text": "addInstance kr instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 470,
          "chinese_text": "",
          "english_text": "let conceptId instanceConceptId instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "",
          "english_text": "concepts krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 472,
          "chinese_text": "",
          "english_text": "in if not Map member conceptId concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "",
          "english_text": "then Left T concat Concept conceptId does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 474,
          "chinese_text": "",
          "english_text": "else Right kr krInstances Map insert instanceId instance instance krInstances kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 476,
          "chinese_text": "",
          "english_text": "queryConcept KnowledgeRepresentation Text Maybe Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 477,
          "chinese_text": "",
          "english_text": "queryConcept kr conceptId Map lookup conceptId krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 479,
          "chinese_text": "",
          "english_text": "queryInstances KnowledgeRepresentation Text Instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 480,
          "chinese_text": "",
          "english_text": "queryInstances kr conceptId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 481,
          "chinese_text": "",
          "english_text": "let instances Map elems krInstances kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 482,
          "chinese_text": "",
          "english_text": "in filter instance instanceConceptId instance conceptId instances",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 484,
          "chinese_text": "",
          "english_text": "queryRelations KnowledgeRepresentation Text Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 485,
          "chinese_text": "",
          "english_text": "queryRelations kr conceptId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 486,
          "chinese_text": "",
          "english_text": "let relations Map elems krRelations kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 487,
          "chinese_text": "",
          "english_text": "in filter relation relationSourceConcept relation conceptId relationTargetConcept relation conceptId relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 489,
          "chinese_text": "",
          "english_text": "validateConsistency KnowledgeRepresentation ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 490,
          "chinese_text": "",
          "english_text": "validateConsistency kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 491,
          "chinese_text": "",
          "english_text": "let conceptErrors validateConceptConsistency kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 492,
          "chinese_text": "",
          "english_text": "relationErrors validateRelationConsistency kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 493,
          "chinese_text": "",
          "english_text": "instanceErrors validateInstanceConsistency kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 494,
          "chinese_text": "",
          "english_text": "allErrors conceptErrors relationErrors instanceErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 495,
          "chinese_text": "",
          "english_text": "in ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 496,
          "chinese_text": "",
          "english_text": "consistencyIsConsistent null allErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 497,
          "chinese_text": "",
          "english_text": "consistencyErrors allErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 498,
          "chinese_text": "",
          "english_text": "consistencyWarnings",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 499,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 501,
          "chinese_text": "",
          "english_text": "validateConceptConsistency KnowledgeRepresentation Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 502,
          "chinese_text": "",
          "english_text": "validateConceptConsistency kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 503,
          "chinese_text": "",
          "english_text": "let concepts Map elems krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 504,
          "chinese_text": "",
          "english_text": "conceptIds Map keysSet krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 505,
          "chinese_text": "",
          "english_text": "errors concatMap concept validateConcept concept conceptIds concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 506,
          "chinese_text": "",
          "english_text": "in errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 508,
          "chinese_text": "",
          "english_text": "validateConcept Concept Set Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 509,
          "chinese_text": "",
          "english_text": "validateConcept concept conceptIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 510,
          "chinese_text": "",
          "english_text": "let parentErrors concatMap parentId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 511,
          "chinese_text": "",
          "english_text": "if Set member parentId conceptIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 512,
          "chinese_text": "",
          "english_text": "then",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 513,
          "chinese_text": "",
          "english_text": "else T concat Concept conceptId concept references non existent parent parentId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 514,
          "chinese_text": "",
          "english_text": "Set toList conceptParentConcepts concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 515,
          "chinese_text": "",
          "english_text": "in parentErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 517,
          "chinese_text": "",
          "english_text": "validateRelationConsistency KnowledgeRepresentation Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 518,
          "chinese_text": "",
          "english_text": "validateRelationConsistency kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 519,
          "chinese_text": "",
          "english_text": "let relations Map elems krRelations kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 520,
          "chinese_text": "",
          "english_text": "conceptIds Map keysSet krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 521,
          "chinese_text": "",
          "english_text": "errors concatMap relation validateRelation relation conceptIds relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 522,
          "chinese_text": "",
          "english_text": "in errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 524,
          "chinese_text": "",
          "english_text": "validateRelation Relation Set Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 525,
          "chinese_text": "",
          "english_text": "validateRelation relation conceptIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 526,
          "chinese_text": "",
          "english_text": "let sourceExists Set member relationSourceConcept relation conceptIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 527,
          "chinese_text": "",
          "english_text": "targetExists Set member relationTargetConcept relation conceptIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 528,
          "chinese_text": "",
          "english_text": "errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 529,
          "chinese_text": "",
          "english_text": "errors if not sourceExists",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 530,
          "chinese_text": "",
          "english_text": "then T concat Relation relationId relation references non existent source concept relationSourceConcept relation errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 531,
          "chinese_text": "",
          "english_text": "else errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 532,
          "chinese_text": "",
          "english_text": "errors if not targetExists",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 533,
          "chinese_text": "",
          "english_text": "then T concat Relation relationId relation references non existent target concept relationTargetConcept relation errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 534,
          "chinese_text": "",
          "english_text": "else errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 535,
          "chinese_text": "",
          "english_text": "in errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 537,
          "chinese_text": "",
          "english_text": "validateInstanceConsistency KnowledgeRepresentation Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 538,
          "chinese_text": "",
          "english_text": "validateInstanceConsistency kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 539,
          "chinese_text": "",
          "english_text": "let instances Map elems krInstances kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 540,
          "chinese_text": "",
          "english_text": "conceptIds Map keysSet krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 541,
          "chinese_text": "",
          "english_text": "errors concatMap instance validateInstance instance conceptIds instances",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 542,
          "chinese_text": "",
          "english_text": "in errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 544,
          "chinese_text": "",
          "english_text": "validateInstance Instance Set Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 545,
          "chinese_text": "",
          "english_text": "validateInstance instance conceptIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 546,
          "chinese_text": "",
          "english_text": "if Set member instanceConceptId instance conceptIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 547,
          "chinese_text": "",
          "english_text": "then",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 548,
          "chinese_text": "",
          "english_text": "else T concat Instance instanceId instance references non existent concept instanceConceptId instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 550,
          "chinese_text": "",
          "english_text": "inferRelations KnowledgeRepresentation Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 551,
          "chinese_text": "",
          "english_text": "inferRelations kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 552,
          "chinese_text": "",
          "english_text": "let concepts Map elems krConcepts kr",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 553,
          "chinese_text": "",
          "english_text": "inferredRelations concatMap concept inferConceptRelations concept concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 554,
          "chinese_text": "",
          "english_text": "in inferredRelations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 556,
          "chinese_text": "",
          "english_text": "inferConceptRelations Concept Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 557,
          "chinese_text": "",
          "english_text": "inferConceptRelations concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 558,
          "chinese_text": "",
          "english_text": "let parentRelations map parentId Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 559,
          "chinese_text": "",
          "english_text": "relationId T concat inherited conceptId concept parentId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 560,
          "chinese_text": "",
          "english_text": "relationName inherits from",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 561,
          "chinese_text": "",
          "english_text": "relationSourceConcept conceptId concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 562,
          "chinese_text": "",
          "english_text": "relationTargetConcept parentId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 563,
          "chinese_text": "",
          "english_text": "relationType Inheritance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 564,
          "chinese_text": "",
          "english_text": "relationProperties Map empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 565,
          "chinese_text": "",
          "english_text": "Set toList conceptParentConcepts concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 566,
          "chinese_text": "",
          "english_text": "in parentRelations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 568,
          "chinese_text": "",
          "english_text": "data ConsistencyResult ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 569,
          "chinese_text": "",
          "english_text": "consistencyIsConsistent Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 570,
          "chinese_text": "",
          "english_text": "consistencyErrors Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 571,
          "chinese_text": "",
          "english_text": "consistencyWarnings Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 572,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 573,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 575,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 577,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 579,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 580,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 581,
          "chinese_text": "",
          "english_text": "pub struct KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 582,
          "chinese_text": "",
          "english_text": "pub representation KnowledgeRepresentation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 583,
          "chinese_text": "",
          "english_text": "pub inference engine InferenceEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 584,
          "chinese_text": "",
          "english_text": "pub query processor QueryProcessor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 585,
          "chinese_text": "",
          "english_text": "pub consistency checker ConsistencyChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 586,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 588,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 589,
          "chinese_text": "",
          "english_text": "pub struct InferenceEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 590,
          "chinese_text": "",
          "english_text": "pub rules Vec InferenceRule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 591,
          "chinese_text": "",
          "english_text": "pub cache HashMap String InferenceResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 592,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 594,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 595,
          "chinese_text": "",
          "english_text": "pub struct InferenceRule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 596,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 597,
          "chinese_text": "",
          "english_text": "pub condition String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 598,
          "chinese_text": "",
          "english_text": "pub conclusion String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 599,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 600,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 602,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 603,
          "chinese_text": "",
          "english_text": "pub struct InferenceResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 604,
          "chinese_text": "",
          "english_text": "pub rule id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 605,
          "chinese_text": "",
          "english_text": "pub result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 606,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 607,
          "chinese_text": "",
          "english_text": "pub timestamp u",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 608,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 610,
          "chinese_text": "",
          "english_text": "impl KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 611,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 612,
          "chinese_text": "",
          "english_text": "KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 613,
          "chinese_text": "",
          "english_text": "representation KnowledgeRepresentation new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 614,
          "chinese_text": "",
          "english_text": "inference engine InferenceEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 615,
          "chinese_text": "",
          "english_text": "rules Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 616,
          "chinese_text": "",
          "english_text": "cache HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 617,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 618,
          "chinese_text": "",
          "english_text": "query processor QueryProcessor new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 619,
          "chinese_text": "",
          "english_text": "consistency checker ConsistencyChecker new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 620,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 621,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 623,
          "chinese_text": "",
          "english_text": "pub fn add knowledge mut self concept Concept relations Vec Relation instances Vec Instance Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 624,
          "chinese_text": "添加概念",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 625,
          "chinese_text": "",
          "english_text": "self representation add concept concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 627,
          "chinese_text": "添加关系",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 628,
          "chinese_text": "",
          "english_text": "for relation in relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 629,
          "chinese_text": "",
          "english_text": "self representation add relation relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 630,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 632,
          "chinese_text": "添加实例",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 633,
          "chinese_text": "",
          "english_text": "for instance in instances",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 634,
          "chinese_text": "",
          "english_text": "self representation add instance instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 635,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 637,
          "chinese_text": "验证一致性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 638,
          "chinese_text": "",
          "english_text": "let consistency result self representation validate consistency",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 639,
          "chinese_text": "",
          "english_text": "if consistency result is consistent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 640,
          "chinese_text": "",
          "english_text": "return Err format Knowledge consistency check failed consistency result errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 641,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 643,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 644,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 646,
          "chinese_text": "",
          "english_text": "pub fn query knowledge self query str QueryResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 647,
          "chinese_text": "",
          "english_text": "self query processor process query query self representation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 648,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 650,
          "chinese_text": "",
          "english_text": "pub fn infer knowledge self concept id str Vec InferenceResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 651,
          "chinese_text": "",
          "english_text": "let mut results Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 653,
          "chinese_text": "应用推理规则",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 654,
          "chinese_text": "",
          "english_text": "for rule in self inference engine rules",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 655,
          "chinese_text": "",
          "english_text": "if let Some result self apply inference rule rule concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 656,
          "chinese_text": "",
          "english_text": "results push result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 657,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 658,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 660,
          "chinese_text": "",
          "english_text": "results",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 661,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 663,
          "chinese_text": "",
          "english_text": "fn apply inference rule self rule InferenceRule concept id str Option InferenceResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 664,
          "chinese_text": "简化的推理规则应用",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 665,
          "chinese_text": "",
          "english_text": "if rule condition contains concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 666,
          "chinese_text": "",
          "english_text": "Some InferenceResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 667,
          "chinese_text": "",
          "english_text": "rule id rule id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 668,
          "chinese_text": "",
          "english_text": "result rule conclusion clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 669,
          "chinese_text": "",
          "english_text": "confidence rule confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 670,
          "chinese_text": "",
          "english_text": "timestamp std time SystemTime now",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 671,
          "chinese_text": "",
          "english_text": "duration since std time UNIX EPOCH",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 672,
          "chinese_text": "",
          "english_text": "unwrap",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 673,
          "chinese_text": "",
          "english_text": "as secs",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 674,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 675,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 676,
          "chinese_text": "",
          "english_text": "None",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 677,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 678,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 679,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 680,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 682,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 684,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 686,
          "chinese_text": "概念查询",
          "english_text": "Concept Query O",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 687,
          "chinese_text": "关系查询",
          "english_text": "Relation Query O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 688,
          "chinese_text": "实例查询",
          "english_text": "Instance Query O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 689,
          "chinese_text": "一致性检查",
          "english_text": "Consistency Check O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 691,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 693,
          "chinese_text": "知识表示",
          "english_text": "Knowledge Representation O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 694,
          "chinese_text": "推理引擎",
          "english_text": "Inference Engine O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 695,
          "chinese_text": "查询处理器",
          "english_text": "Query Processor O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 696,
          "chinese_text": "一致性检查器",
          "english_text": "Consistency Checker O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 698,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 700,
          "chinese_text": "案例 医疗知识图谱构建",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 702,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 703,
          "chinese_text": "构建一个医疗领域的知识图谱 包含疾病 症状 药物 治疗方法等概念 支持医疗诊断和药物推荐",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 705,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 707,
          "chinese_text": "定义医疗概念层次结构",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 708,
          "chinese_text": "建立疾病 症状关系网络",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 709,
          "chinese_text": "构建药物 适应症映射",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 710,
          "chinese_text": "实现诊断推理算法",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 712,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 714,
          "chinese_text": "概念覆盖率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 715,
          "chinese_text": "关系准确性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 716,
          "chinese_text": "推理准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 717,
          "chinese_text": "查询响应时间",
          "english_text": "ms",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 719,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 721,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 723,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 724,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 725,
          "chinese_text": "知识图谱构建 构建领域知识图谱",
          "english_text": "Knowledge Graph Construction Construct domain knowledge graphs",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 726,
          "chinese_text": "语义搜索 基于语义的智能搜索",
          "english_text": "Semantic Search Semantic based intelligent search",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 727,
          "chinese_text": "智能问答 自动问答系统",
          "english_text": "Intelligent Q A Automated question answering systems",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 728,
          "chinese_text": "推荐系统 基于知识的推荐",
          "english_text": "Recommendation Systems Knowledge based recommendation",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 730,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 732,
          "chinese_text": "案例",
          "english_text": "Case Google Knowledge Graph",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 734,
          "chinese_text": "项目名称",
          "english_text": "Project Name Google Knowledge Graph",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 735,
          "chinese_text": "应用场景 大规模通用知识图谱",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 736,
          "chinese_text": "技术实现 实体 关系 属性三元组模型",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 737,
          "chinese_text": "效果评估 支持全球用户的智能搜索服务",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 739,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 741,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 743,
          "chinese_text": "研究方向 神经符号知识表示",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 745,
          "chinese_text": "研究内容 结合神经网络和符号逻辑的知识表示方法",
          "english_text": "Research Content",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 746,
          "chinese_text": "技术突破 实现了可解释的神经符号推理",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 747,
          "chinese_text": "应用前景 在多个领域有重要应用",
          "english_text": "Application Prospects",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 749,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 751,
          "chinese_text": "趋势 多模态知识表示",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 753,
          "chinese_text": "中文 知识表示正在向多模态方向发展 支持文本 图像 音频等多种形式",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 754,
          "chinese_text": "",
          "english_text": "English Knowledge representation is moving towards multimodal direction supporting text image audio and other forms",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 756,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 758,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 760,
          "chinese_text": "要点 知识表示是知识图谱的基础 提供形式化的知识建模方法",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 761,
          "chinese_text": "要点 现代知识表示结合了符号逻辑和统计学习 提高了表达能力",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 762,
          "chinese_text": "要点 知识表示正在向多模态和神经符号方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 764,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 766,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 768,
          "chinese_text": "短期目标 提高知识表示的自动化和标准化程度",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 769,
          "chinese_text": "中期目标 实现多模态知识表示",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 770,
          "chinese_text": "长期目标 构建自适应的知识表示生态系统",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 772,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 774,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 776,
          "chinese_text": "",
          "english_text": "Brachman R J Levesque H J Knowledge representation and reasoning Elsevier",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 777,
          "chinese_text": "",
          "english_text": "Sowa J F Knowledge representation logical philosophical and computational foundations Brooks Cole",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 778,
          "chinese_text": "",
          "english_text": "Davis R Shrobe H Szolovits P What is a knowledge representation AI magazine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 780,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 782,
          "chinese_text": "",
          "english_text": "RDF Specification https www w org RDF Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 783,
          "chinese_text": "",
          "english_text": "OWL Documentation https www w org OWL Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 784,
          "chinese_text": "",
          "english_text": "SPARQL Query Language https www w org TR sparql query Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 786,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 788,
          "chinese_text": "",
          "english_text": "Stanford Knowledge Graph https kg stanford edu Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 789,
          "chinese_text": "",
          "english_text": "DBpedia https dbpedia org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 790,
          "chinese_text": "",
          "english_text": "Wikidata https www wikidata org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 792,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 794,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 796,
          "chinese_text": "图论基础",
          "english_text": "graph theory README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 797,
          "chinese_text": "语义分析",
          "english_text": "semantic analysis README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 798,
          "chinese_text": "本体工程",
          "english_text": "ontology engineering README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 800,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 802,
          "chinese_text": "",
          "english_text": "RDF https www w org RDF",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 803,
          "chinese_text": "",
          "english_text": "OWL https www w org OWL",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 804,
          "chinese_text": "",
          "english_text": "SPARQL https www w org TR sparql query",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 806,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 808,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 809,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 810,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\02-graph-theory\\README.md",
      "total_lines": 531,
      "bilingual_lines": 192,
      "bilingual_ratio": 0.3615819209039548,
      "section_bilingual_ratio": 0.8604651162790697,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.1830601092896175,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "图论基础",
          "english_text": "Graph Theory Fundamentals",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "图论是研究图结构的数学分支 为知识图谱提供理论基础 图由顶点集合和边集合组成 通过数学符号和逻辑关系描述复杂网络结构 支持路径分析 连通性检测和网络优化等算法",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Graph theory is a mathematical branch that studies graph structures providing theoretical foundations for knowledge graphs A graph consists of a vertex set and an edge set describing complex network structures through mathematical symbols and logical relationships supporting algorithms for path analysis connectivity detection and network optimization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 古典图论时期 欧拉路径和哈密顿回路",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 现代图论时期 图论算法和复杂性理论",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 应用图论时期 至今 网络科学和知识图谱",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "抽象性 将复杂关系抽象为数学结构",
          "english_text": "Abstract Abstract complex relationships into mathematical structures",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "可计算性 支持高效的图算法",
          "english_text": "Computable Support efficient graph algorithms",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "可扩展性 处理大规模图结构",
          "english_text": "Scalable Handle large scale graph structures",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "应用广泛性 适用于多种领域问题",
          "english_text": "Universal Applicable to various domain problems",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "G V E",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "顶点集合",
          "english_text": "V Vertex Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "边集合",
          "english_text": "E Edge Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 48,
          "chinese_text": "图 是一个二元组 其中顶点集合 包含图中的所有节点 边集合 定义顶点间的连接关系 每条边 可以表示为 其中",
          "english_text": "G V E e Ee u v u v V",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 52,
          "chinese_text": "定理 握手定理",
          "english_text": "Theorem Handshake Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 53,
          "chinese_text": "对于任何图 所有顶点的度数之和等于边数的两倍 即",
          "english_text": "G V E deg v E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 57,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 58,
          "chinese_text": "设图",
          "english_text": "G V E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 59,
          "chinese_text": "对于每条边",
          "english_text": "e u v E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 60,
          "chinese_text": "该边对顶点 和 的度数各贡献",
          "english_text": "uv",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 61,
          "chinese_text": "因此每条边对总度数的贡献为",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 62,
          "chinese_text": "所以所有顶点度数之和 边数",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 63,
          "chinese_text": "即",
          "english_text": "deg v E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 66,
          "chinese_text": "定理 欧拉路径定理",
          "english_text": "Theorem Euler Path Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 67,
          "chinese_text": "连通图 存在欧拉路径当且仅当 中恰好有 个或 个奇数度数的顶点",
          "english_text": "GG",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 69,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 71,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 72,
          "chinese_text": "必要性 如果存在欧拉路径 则除了起点和终点外 每个顶点进入和离开的次数相等",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 73,
          "chinese_text": "因此只有起点和终点可能有奇数度数",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 75,
          "chinese_text": "充分性 如果有 个奇数度数顶点 可以构造欧拉回路",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 76,
          "chinese_text": "如果有 个奇数度数顶点 可以构造欧拉路径",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 77,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 79,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 81,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 83,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 84,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 85,
          "chinese_text": "图结构 顶点分析",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 86,
          "chinese_text": "边分析",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 87,
          "chinese_text": "路径分析",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 88,
          "chinese_text": "连通性分析",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "度数计算",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 91,
          "chinese_text": "中心性分析",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 92,
          "chinese_text": "聚类分析",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "权重分析",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 95,
          "chinese_text": "方向性分析",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 96,
          "chinese_text": "多重边分析",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "最短路径",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 99,
          "chinese_text": "最长路径",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 100,
          "chinese_text": "路径数量",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 101,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 103,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 105,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 107,
          "chinese_text": "优势 数学严谨性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 109,
          "chinese_text": "中文 图论基于严格的数学定义 提供可靠的理论基础",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 110,
          "chinese_text": "",
          "english_text": "English Graph theory is based on strict mathematical definitions providing reliable theoretical foundations",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 112,
          "chinese_text": "优势 算法高效性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 114,
          "chinese_text": "中文 图论算法具有多项式时间复杂度 适合大规模应用",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 115,
          "chinese_text": "",
          "english_text": "English Graph theory algorithms have polynomial time complexity suitable for large scale applications",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 117,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 119,
          "chinese_text": "局限性 表达能力",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 121,
          "chinese_text": "中文 传统图论难以表达复杂的语义关系和动态变化",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 122,
          "chinese_text": "",
          "english_text": "English Traditional graph theory has difficulty expressing complex semantic relationships and dynamic changes",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 124,
          "chinese_text": "局限性 可扩展性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 126,
          "chinese_text": "中文 大规模图的存储和计算面临内存和性能挑战",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 127,
          "chinese_text": "",
          "english_text": "English Large scale graph storage and computation face memory and performance challenges",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 129,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 131,
          "chinese_text": "争议点 静态 动态图",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 133,
          "chinese_text": "支持观点 静态图提供稳定的理论基础",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 134,
          "chinese_text": "反对观点 动态图更符合现实世界的复杂性",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 135,
          "chinese_text": "中立分析 需要结合静态和动态图论的优势",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 139,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 141,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 143,
          "chinese_text": "图表示算法",
          "english_text": "Graph Representation Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 145,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 146,
          "chinese_text": "实现示例",
          "english_text": "Rust Graph Representation Algorithm",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 147,
          "chinese_text": "图表示算法 实现图的邻接表表示和基本操作",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 148,
          "chinese_text": "",
          "english_text": "use std collections HashMap HashSet",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 149,
          "chinese_text": "",
          "english_text": "use std collections VecDeque",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 151,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "",
          "english_text": "pub struct Graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 153,
          "chinese_text": "顶点集合",
          "english_text": "pub vertices HashMap String Vertex Vertex set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 154,
          "chinese_text": "边集合",
          "english_text": "pub edges HashMap String Edge Edge set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 155,
          "chinese_text": "邻接表",
          "english_text": "pub adjacency list HashMap String Vec String Adjacency list",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 156,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 158,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 159,
          "chinese_text": "",
          "english_text": "pub struct Vertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "顶点标识",
          "english_text": "pub id String Vertex identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 161,
          "chinese_text": "顶点标签",
          "english_text": "pub label String Vertex label",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 162,
          "chinese_text": "顶点属性",
          "english_text": "pub properties HashMap String String Vertex properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 163,
          "chinese_text": "顶点度数",
          "english_text": "pub degree usize Vertex degree",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 164,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 166,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "pub struct Edge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 168,
          "chinese_text": "边标识",
          "english_text": "pub id String Edge identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 169,
          "chinese_text": "源顶点",
          "english_text": "pub source String Source vertex",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 170,
          "chinese_text": "目标顶点",
          "english_text": "pub target String Target vertex",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 171,
          "chinese_text": "边标签",
          "english_text": "pub label String Edge label",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 172,
          "chinese_text": "边权重",
          "english_text": "pub weight f Edge weight",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 173,
          "chinese_text": "边属性",
          "english_text": "pub properties HashMap String String Edge properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 174,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 176,
          "chinese_text": "",
          "english_text": "impl Graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 177,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "Graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "vertices HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 180,
          "chinese_text": "",
          "english_text": "edges HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "adjacency list HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 182,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 183,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 185,
          "chinese_text": "添加顶点",
          "english_text": "Add vertex",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 186,
          "chinese_text": "",
          "english_text": "pub fn add vertex mut self id String label String Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 187,
          "chinese_text": "",
          "english_text": "if self vertices contains key id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "return Err format Vertex already exists id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 189,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 191,
          "chinese_text": "",
          "english_text": "let vertex Vertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 192,
          "chinese_text": "",
          "english_text": "id id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 193,
          "chinese_text": "",
          "english_text": "label",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "properties HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "degree",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 196,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "self vertices insert id clone vertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 199,
          "chinese_text": "",
          "english_text": "self adjacency list insert id Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "添加边",
          "english_text": "Add edge",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "pub fn add edge mut self id String source String target String label String weight f Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "验证顶点存在性",
          "english_text": "Verify vertex existence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 207,
          "chinese_text": "",
          "english_text": "if self vertices contains key source",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "return Err format Source vertex does not exist source",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 210,
          "chinese_text": "",
          "english_text": "if self vertices contains key target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "",
          "english_text": "return Err format Target vertex does not exist target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "创建边",
          "english_text": "Create edge",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 215,
          "chinese_text": "",
          "english_text": "let edge Edge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 216,
          "chinese_text": "",
          "english_text": "id id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "",
          "english_text": "source source clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 218,
          "chinese_text": "",
          "english_text": "target target clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "label",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 220,
          "chinese_text": "",
          "english_text": "weight",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "",
          "english_text": "properties HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 224,
          "chinese_text": "更新图结构",
          "english_text": "Update graph structure",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 225,
          "chinese_text": "",
          "english_text": "self edges insert id edge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 227,
          "chinese_text": "更新邻接表",
          "english_text": "Update adjacency list",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 228,
          "chinese_text": "",
          "english_text": "self adjacency list entry source clone or insert with Vec new push target clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 229,
          "chinese_text": "",
          "english_text": "self adjacency list entry target or insert with Vec new push source",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "更新顶点度数",
          "english_text": "Update vertex degrees",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 232,
          "chinese_text": "",
          "english_text": "if let Some vertex self vertices get mut source",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 233,
          "chinese_text": "",
          "english_text": "vertex degree",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 235,
          "chinese_text": "",
          "english_text": "if let Some vertex self vertices get mut target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 236,
          "chinese_text": "",
          "english_text": "vertex degree",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 237,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 242,
          "chinese_text": "获取顶点度数",
          "english_text": "Get vertex degree",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 243,
          "chinese_text": "",
          "english_text": "pub fn get vertex degree self vertex id str Option usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 244,
          "chinese_text": "",
          "english_text": "self vertices get vertex id map v v degree",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 245,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "获取邻接顶点",
          "english_text": "Get adjacent vertices",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "pub fn get adjacent vertices self vertex id str Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 249,
          "chinese_text": "",
          "english_text": "self adjacency list get vertex id map adj adj as slice unwrap or",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 250,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "验证握手定理",
          "english_text": "Verify handshake theorem",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 253,
          "chinese_text": "",
          "english_text": "pub fn verify handshake theorem self bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "",
          "english_text": "let total degree usize self vertices values map v v degree sum",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "",
          "english_text": "let edge count self edges len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "total degree edge count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "广度优先搜索",
          "english_text": "Breadth first search",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 261,
          "chinese_text": "",
          "english_text": "pub fn bfs self start vertex str Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 262,
          "chinese_text": "",
          "english_text": "let mut visited HashSet new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 263,
          "chinese_text": "",
          "english_text": "let mut queue VecDeque new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "let mut traversal Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "",
          "english_text": "visited insert start vertex to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 267,
          "chinese_text": "",
          "english_text": "queue push back start vertex to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "while let Some current queue pop front",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 270,
          "chinese_text": "",
          "english_text": "traversal push current clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 272,
          "chinese_text": "",
          "english_text": "if let Some adjacent self adjacency list get current",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 273,
          "chinese_text": "",
          "english_text": "for neighbor in adjacent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 274,
          "chinese_text": "",
          "english_text": "if visited contains neighbor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "visited insert neighbor clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 276,
          "chinese_text": "",
          "english_text": "queue push back neighbor clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 277,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 278,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "traversal",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 283,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 285,
          "chinese_text": "深度优先搜索",
          "english_text": "Depth first search",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 286,
          "chinese_text": "",
          "english_text": "pub fn dfs self start vertex str Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "",
          "english_text": "let mut visited HashSet new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "let mut traversal Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "self dfs recursive start vertex mut visited mut traversal",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "traversal",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 293,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 295,
          "chinese_text": "",
          "english_text": "fn dfs recursive self vertex str visited mut HashSet String traversal mut Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "visited insert vertex to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "traversal push vertex to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 299,
          "chinese_text": "",
          "english_text": "if let Some adjacent self adjacency list get vertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "",
          "english_text": "for neighbor in adjacent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "if visited contains neighbor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "",
          "english_text": "self dfs recursive neighbor visited traversal",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 304,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 305,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "计算图的连通分量",
          "english_text": "Calculate connected components",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "pub fn connected components self Vec Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "",
          "english_text": "let mut visited HashSet new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 311,
          "chinese_text": "",
          "english_text": "let mut components Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "",
          "english_text": "for vertex id in self vertices keys",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 314,
          "chinese_text": "",
          "english_text": "if visited contains vertex id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "let mut component Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 316,
          "chinese_text": "",
          "english_text": "self dfs recursive vertex id mut visited mut component",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "",
          "english_text": "components push component",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 318,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 324,
          "chinese_text": "检查欧拉路径存在性",
          "english_text": "Check Euler path existence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 325,
          "chinese_text": "",
          "english_text": "pub fn has euler path self bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "let odd degree count self vertices values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 327,
          "chinese_text": "",
          "english_text": "filter v v degree",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "odd degree count odd degree count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 331,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 333,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 336,
          "chinese_text": "实现示例",
          "english_text": "Haskell Graph Representation Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 337,
          "chinese_text": "图表示算法 实现图的邻接表表示和基本操作",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "module GraphTheory where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 342,
          "chinese_text": "",
          "english_text": "import Data Set Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "import qualified Data Set as Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 344,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 345,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 347,
          "chinese_text": "顶点数据结构",
          "english_text": "Vertex data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 348,
          "chinese_text": "",
          "english_text": "data Vertex Vertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 349,
          "chinese_text": "顶点标识",
          "english_text": "vertexId Text Vertex identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 350,
          "chinese_text": "顶点标签",
          "english_text": "vertexLabel Text Vertex label",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 351,
          "chinese_text": "顶点属性",
          "english_text": "vertexProperties Map Text Text Vertex properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 352,
          "chinese_text": "顶点度数",
          "english_text": "vertexDegree Int Vertex degree",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 353,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "边数据结构",
          "english_text": "Edge data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "data Edge Edge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "边标识",
          "english_text": "edgeId Text Edge identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 358,
          "chinese_text": "源顶点",
          "english_text": "edgeSource Text Source vertex",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 359,
          "chinese_text": "目标顶点",
          "english_text": "edgeTarget Text Target vertex",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 360,
          "chinese_text": "边标签",
          "english_text": "edgeLabel Text Edge label",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 361,
          "chinese_text": "边权重",
          "english_text": "edgeWeight Double Edge weight",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 362,
          "chinese_text": "边属性",
          "english_text": "edgeProperties Map Text Text Edge properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "图数据结构",
          "english_text": "Graph data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 366,
          "chinese_text": "",
          "english_text": "data Graph Graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 367,
          "chinese_text": "顶点集合",
          "english_text": "graphVertices Map Text Vertex Vertex set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 368,
          "chinese_text": "边集合",
          "english_text": "graphEdges Map Text Edge Edge set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 369,
          "chinese_text": "邻接表",
          "english_text": "graphAdjacencyList Map Text Text Adjacency list",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 370,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 372,
          "chinese_text": "空图",
          "english_text": "Empty graph",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 373,
          "chinese_text": "",
          "english_text": "emptyGraph Graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 374,
          "chinese_text": "",
          "english_text": "emptyGraph Graph Map empty Map empty Map empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 376,
          "chinese_text": "添加顶点",
          "english_text": "Add vertex",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 377,
          "chinese_text": "",
          "english_text": "addVertex Text Text Graph Either Text Graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 378,
          "chinese_text": "",
          "english_text": "addVertex vertexId label graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "if Map member vertexId graphVertices graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "then Left T concat Vertex vertexId already exists",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "else Right graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 382,
          "chinese_text": "",
          "english_text": "graphVertices Map insert vertexId Vertex vertexId label Map empty graphVertices graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "graphAdjacencyList Map insert vertexId graphAdjacencyList graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 384,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 386,
          "chinese_text": "添加边",
          "english_text": "Add edge",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 387,
          "chinese_text": "",
          "english_text": "addEdge Text Text Text Text Double Graph Either Text Graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 388,
          "chinese_text": "",
          "english_text": "addEdge edgeId source target label weight graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 389,
          "chinese_text": "",
          "english_text": "let vertices graphVertices graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "edges graphEdges graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 391,
          "chinese_text": "",
          "english_text": "adjacencyList graphAdjacencyList graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 392,
          "chinese_text": "",
          "english_text": "in if not Map member source vertices",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "then Left T concat Source vertex source does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "",
          "english_text": "else if not Map member target vertices",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 395,
          "chinese_text": "",
          "english_text": "then Left T concat Target vertex target does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 396,
          "chinese_text": "",
          "english_text": "else Right graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "",
          "english_text": "graphEdges Map insert edgeId Edge edgeId source target label weight Map empty edges",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 398,
          "chinese_text": "",
          "english_text": "graphAdjacencyList Map insertWith source target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "Map insertWith target source adjacencyList",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "graphVertices updateVertexDegrees source target vertices",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 403,
          "chinese_text": "更新顶点度数",
          "english_text": "Update vertex degrees",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 404,
          "chinese_text": "",
          "english_text": "updateVertexDegrees Text Text Map Text Vertex Map Text Vertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 405,
          "chinese_text": "",
          "english_text": "updateVertexDegrees source target vertices",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "let vertices Map adjust v v vertexDegree vertexDegree v source vertices",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 407,
          "chinese_text": "",
          "english_text": "in Map adjust v v vertexDegree vertexDegree v target vertices",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "获取顶点度数",
          "english_text": "Get vertex degree",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "getVertexDegree Text Graph Maybe Int",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "getVertexDegree vertexId graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 412,
          "chinese_text": "",
          "english_text": "Map lookup vertexId graphVertices graph Just vertexDegree",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "获取邻接顶点",
          "english_text": "Get adjacent vertices",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 415,
          "chinese_text": "",
          "english_text": "getAdjacentVertices Text Graph Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 416,
          "chinese_text": "",
          "english_text": "getAdjacentVertices vertexId graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "Map findWithDefault vertexId graphAdjacencyList graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "验证握手定理",
          "english_text": "Verify handshake theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 420,
          "chinese_text": "",
          "english_text": "verifyHandshakeTheorem Graph Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 421,
          "chinese_text": "",
          "english_text": "verifyHandshakeTheorem graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 422,
          "chinese_text": "",
          "english_text": "let totalDegree sum map vertexDegree Map elems graphVertices graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 423,
          "chinese_text": "",
          "english_text": "edgeCount Map size graphEdges graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 424,
          "chinese_text": "",
          "english_text": "in totalDegree edgeCount",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 426,
          "chinese_text": "广度优先搜索",
          "english_text": "Breadth first search",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 427,
          "chinese_text": "",
          "english_text": "bfs Text Graph Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "bfs startVertex graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 429,
          "chinese_text": "",
          "english_text": "let adjacencyList graphAdjacencyList graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "",
          "english_text": "bfsHelper Text Set Text Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "bfsHelper result result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 432,
          "chinese_text": "",
          "english_text": "bfsHelper current queue visited result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "",
          "english_text": "let neighbors Map findWithDefault current adjacencyList",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "newNeighbors filter Set notMember visited neighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "newVisited Set union visited Set fromList newNeighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 436,
          "chinese_text": "",
          "english_text": "newQueue queue newNeighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 437,
          "chinese_text": "",
          "english_text": "in bfsHelper newQueue newVisited result current",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 438,
          "chinese_text": "",
          "english_text": "in bfsHelper startVertex Set singleton startVertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 440,
          "chinese_text": "深度优先搜索",
          "english_text": "Depth first search",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 441,
          "chinese_text": "",
          "english_text": "dfs Text Graph Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 442,
          "chinese_text": "",
          "english_text": "dfs startVertex graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 443,
          "chinese_text": "",
          "english_text": "let adjacencyList graphAdjacencyList graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 444,
          "chinese_text": "",
          "english_text": "dfsHelper Text Set Text Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "dfsHelper current visited result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 446,
          "chinese_text": "",
          "english_text": "let neighbors Map findWithDefault current adjacencyList",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 447,
          "chinese_text": "",
          "english_text": "unvisitedNeighbors filter Set notMember visited neighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "",
          "english_text": "newVisited Set union visited Set fromList unvisitedNeighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 449,
          "chinese_text": "",
          "english_text": "neighborResults concatMap n dfsHelper n newVisited unvisitedNeighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 450,
          "chinese_text": "",
          "english_text": "in current neighborResults result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 451,
          "chinese_text": "",
          "english_text": "in dfsHelper startVertex Set singleton startVertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 453,
          "chinese_text": "计算连通分量",
          "english_text": "Calculate connected components",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 454,
          "chinese_text": "",
          "english_text": "connectedComponents Graph Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 455,
          "chinese_text": "",
          "english_text": "connectedComponents graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 456,
          "chinese_text": "",
          "english_text": "let vertices Map keys graphVertices graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 457,
          "chinese_text": "",
          "english_text": "adjacencyList graphAdjacencyList graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 458,
          "chinese_text": "",
          "english_text": "componentHelper Text Set Text Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 459,
          "chinese_text": "",
          "english_text": "componentHelper current visited component",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 460,
          "chinese_text": "",
          "english_text": "let neighbors Map findWithDefault current adjacencyList",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "",
          "english_text": "unvisitedNeighbors filter Set notMember visited neighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 462,
          "chinese_text": "",
          "english_text": "newVisited Set union visited Set fromList unvisitedNeighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 463,
          "chinese_text": "",
          "english_text": "neighborComponents concatMap n componentHelper n newVisited unvisitedNeighbors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 464,
          "chinese_text": "",
          "english_text": "in current neighborComponents component",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 465,
          "chinese_text": "",
          "english_text": "findComponents Text Set Text Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 466,
          "chinese_text": "",
          "english_text": "findComponents components components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 467,
          "chinese_text": "",
          "english_text": "findComponents vertex remaining visited components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 468,
          "chinese_text": "",
          "english_text": "if Set member vertex visited",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 469,
          "chinese_text": "",
          "english_text": "then findComponents remaining visited components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 470,
          "chinese_text": "",
          "english_text": "else let component componentHelper vertex visited",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "",
          "english_text": "newVisited Set union visited Set fromList component",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 472,
          "chinese_text": "",
          "english_text": "in findComponents remaining newVisited component components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "",
          "english_text": "in findComponents vertices Set empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 475,
          "chinese_text": "检查欧拉路径存在性",
          "english_text": "Check Euler path existence",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 476,
          "chinese_text": "",
          "english_text": "hasEulerPath Graph Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 477,
          "chinese_text": "",
          "english_text": "hasEulerPath graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 478,
          "chinese_text": "",
          "english_text": "let oddDegreeCount length filter v vertexDegree v mod",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 479,
          "chinese_text": "",
          "english_text": "Map elems graphVertices graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 480,
          "chinese_text": "",
          "english_text": "in oddDegreeCount oddDegreeCount",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 481,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 483,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 485,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 487,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 488,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 489,
          "chinese_text": "",
          "english_text": "pub struct WeightedGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 490,
          "chinese_text": "",
          "english_text": "pub vertices HashMap String Vertex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 491,
          "chinese_text": "",
          "english_text": "pub edges HashMap String WeightedEdge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 492,
          "chinese_text": "",
          "english_text": "pub adjacency matrix Vec Vec f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 493,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 495,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 496,
          "chinese_text": "",
          "english_text": "pub struct WeightedEdge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 497,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 498,
          "chinese_text": "",
          "english_text": "pub source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 499,
          "chinese_text": "",
          "english_text": "pub target String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 500,
          "chinese_text": "",
          "english_text": "pub weight f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 501,
          "chinese_text": "",
          "english_text": "pub properties HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 502,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 504,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 505,
          "chinese_text": "",
          "english_text": "pub struct GraphMetrics",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 506,
          "chinese_text": "",
          "english_text": "pub vertex count usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 507,
          "chinese_text": "",
          "english_text": "pub edge count usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 508,
          "chinese_text": "",
          "english_text": "pub average degree f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 509,
          "chinese_text": "",
          "english_text": "pub density f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 510,
          "chinese_text": "",
          "english_text": "pub diameter Option f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 511,
          "chinese_text": "",
          "english_text": "pub clustering coefficient f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 512,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 514,
          "chinese_text": "",
          "english_text": "impl WeightedGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 515,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 516,
          "chinese_text": "",
          "english_text": "WeightedGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 517,
          "chinese_text": "",
          "english_text": "vertices HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 518,
          "chinese_text": "",
          "english_text": "edges HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 519,
          "chinese_text": "",
          "english_text": "adjacency matrix Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 520,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 521,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 523,
          "chinese_text": "计算图度量",
          "english_text": "Calculate graph metrics",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 524,
          "chinese_text": "",
          "english_text": "pub fn calculate metrics self GraphMetrics",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 525,
          "chinese_text": "",
          "english_text": "let vertex count self vertices len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 526,
          "chinese_text": "",
          "english_text": "let edge count self edges len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 527,
          "chinese_text": "",
          "english_text": "let total degree usize self vertices values map v v degree sum",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 528,
          "chinese_text": "",
          "english_text": "let average degree if vertex count total degree as f vertex count as f else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 529,
          "chinese_text": "",
          "english_text": "let density if vertex count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 530,
          "chinese_text": "",
          "english_text": "edge count as f vertex count as f vertex count as f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 531,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 533,
          "chinese_text": "",
          "english_text": "GraphMetrics",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 534,
          "chinese_text": "",
          "english_text": "vertex count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 535,
          "chinese_text": "",
          "english_text": "edge count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 536,
          "chinese_text": "",
          "english_text": "average degree",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 537,
          "chinese_text": "",
          "english_text": "density",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 538,
          "chinese_text": "",
          "english_text": "diameter self calculate diameter",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 539,
          "chinese_text": "",
          "english_text": "clustering coefficient self calculate clustering coefficient",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 540,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 541,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 543,
          "chinese_text": "计算图的直径",
          "english_text": "Calculate graph diameter",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 544,
          "chinese_text": "",
          "english_text": "fn calculate diameter self Option f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 545,
          "chinese_text": "简化的直径计算实现",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 546,
          "chinese_text": "",
          "english_text": "Some self vertices len as f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 547,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 549,
          "chinese_text": "计算聚类系数",
          "english_text": "Calculate clustering coefficient",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 550,
          "chinese_text": "",
          "english_text": "fn calculate clustering coefficient self f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 551,
          "chinese_text": "简化的聚类系数计算实现",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 552,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 553,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 554,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 555,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 557,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 559,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 561,
          "chinese_text": "顶点添加",
          "english_text": "Vertex Addition O",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 562,
          "chinese_text": "边添加",
          "english_text": "Edge Addition O",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 563,
          "chinese_text": "广度优先搜索",
          "english_text": "BFS O V E",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 564,
          "chinese_text": "深度优先搜索",
          "english_text": "DFS O V E",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 565,
          "chinese_text": "连通分量计算",
          "english_text": "Connected Components O V E",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 567,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 569,
          "chinese_text": "邻接表存储",
          "english_text": "Adjacency List Storage O V E",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 570,
          "chinese_text": "邻接矩阵存储",
          "english_text": "Adjacency Matrix Storage O V",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 571,
          "chinese_text": "图度量计算",
          "english_text": "Graph Metrics Calculation O V E",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 573,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 575,
          "chinese_text": "案例 社交网络分析",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 577,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 578,
          "chinese_text": "分析社交网络中的用户关系 识别关键用户和社区结构",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 580,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 582,
          "chinese_text": "构建用户关系图",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 583,
          "chinese_text": "计算中心性指标",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 584,
          "chinese_text": "识别社区结构",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 585,
          "chinese_text": "分析网络传播",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 587,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 589,
          "chinese_text": "用户覆盖率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 590,
          "chinese_text": "关系准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 591,
          "chinese_text": "社区识别准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 592,
          "chinese_text": "分析响应时间",
          "english_text": "ms",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 594,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 596,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 598,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 599,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 600,
          "chinese_text": "社交网络分析 分析用户关系和社区结构",
          "english_text": "Social Network Analysis Analyze user relationships and community structures",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 601,
          "chinese_text": "交通网络优化 优化路径规划和交通流量",
          "english_text": "Transportation Network Optimization Optimize route planning and traffic flow",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 602,
          "chinese_text": "生物网络分析 分析蛋白质相互作用网络",
          "english_text": "Biological Network Analysis Analyze protein interaction networks",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 603,
          "chinese_text": "知识图谱构建 构建实体关系图结构",
          "english_text": "Knowledge Graph Construction Construct entity relationship graph structures",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 605,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 607,
          "chinese_text": "案例 算法",
          "english_text": "Case Google PageRank",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 609,
          "chinese_text": "项目名称",
          "english_text": "Project Name Google PageRank Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 610,
          "chinese_text": "应用场景 网页重要性排序",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 611,
          "chinese_text": "技术实现 基于图论的随机游走算法",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 612,
          "chinese_text": "效果评估 显著提升搜索结果质量",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 614,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 616,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 618,
          "chinese_text": "研究方向 动态图论",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 620,
          "chinese_text": "研究内容 处理随时间变化的图结构",
          "english_text": "Research Content",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 621,
          "chinese_text": "技术突破 实现了高效的动态图算法",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 622,
          "chinese_text": "应用前景 在实时系统中广泛应用",
          "english_text": "Application Prospects",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 624,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 626,
          "chinese_text": "趋势 大规模图处理",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 628,
          "chinese_text": "中文 图论正在向处理超大规模图结构发展",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 629,
          "chinese_text": "",
          "english_text": "English Graph theory is developing towards processing ultra large scale graph structures",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 631,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 633,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 635,
          "chinese_text": "要点 图论为知识图谱提供坚实的数学基础",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 636,
          "chinese_text": "要点 图算法支持高效的网络分析和优化",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 637,
          "chinese_text": "要点 图论正在向动态和大规模方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 639,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 641,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 643,
          "chinese_text": "短期目标 提升图算法的效率和准确性",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 644,
          "chinese_text": "中期目标 实现动态图论算法",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 645,
          "chinese_text": "长期目标 构建超大规模图处理系统",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 647,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 649,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 651,
          "chinese_text": "",
          "english_text": "Bondy J A Murty U S R Graph theory Springer Science Business Media",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 652,
          "chinese_text": "",
          "english_text": "West D B Introduction to graph theory Vol Upper Saddle River Prentice hall",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 653,
          "chinese_text": "",
          "english_text": "Diestel R Graph theory Springer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 655,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 657,
          "chinese_text": "",
          "english_text": "NetworkX Documentation https networkx org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 658,
          "chinese_text": "",
          "english_text": "Graph Theory Algorithms https en wikipedia org wiki Graph theory Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 659,
          "chinese_text": "",
          "english_text": "Graph Database Standards https www w org TR rdf concepts Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 661,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 663,
          "chinese_text": "",
          "english_text": "Stanford Graph Theory Course https web stanford edu class cs w Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 664,
          "chinese_text": "",
          "english_text": "Graph Theory Online https www graph theory com Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 665,
          "chinese_text": "",
          "english_text": "Network Science Book http networksciencebook com Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 667,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 669,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 671,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 672,
          "chinese_text": "语义分析",
          "english_text": "semantic analysis README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 673,
          "chinese_text": "本体工程",
          "english_text": "ontology engineering README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 675,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 677,
          "chinese_text": "",
          "english_text": "NetworkX https networkx org",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 678,
          "chinese_text": "",
          "english_text": "Graph Theory https en wikipedia org wiki Graph theory",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 679,
          "chinese_text": "",
          "english_text": "Graph Algorithms https en wikipedia org wiki Graph algorithms",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 681,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 683,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 684,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 685,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\03-semantic-analysis\\README.md",
      "total_lines": 573,
      "bilingual_lines": 198,
      "bilingual_ratio": 0.34554973821989526,
      "section_bilingual_ratio": 0.8043478260869565,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.17412935323383086,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "语义分析",
          "english_text": "Semantic Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "语义分析是知识图谱中理解文本深层含义和语义关系的核心技术 它通过自然语言处理和机器学习方法 从文本中提取语义信息 建立概念间的语义关联 为知识图谱的构建和推理提供语义基础",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Semantic analysis is a core technology in knowledge graphs for understanding deep meaning and semantic relationships in text It uses natural language processing and machine learning methods to extract semantic information from text establish semantic associations between concepts and provide semantic foundations for knowledge graph construction and reasoning",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 规则语义分析时期 基于语言学规则的语义分析",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 统计语义分析时期 基于统计学习的语义分析",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 深度学习语义分析时期 至今 基于神经网络的语义分析",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "语义理解 理解文本的深层含义",
          "english_text": "Semantic Understanding Understand deep meaning of text",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "关系识别 识别概念间的语义关系",
          "english_text": "Relationship Recognition Identify semantic relationships between concepts",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "上下文感知 考虑文本的上下文信息",
          "english_text": "Context Awareness Consider contextual information of text",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "歧义消解 解决语义歧义问题",
          "english_text": "Ambiguity Resolution Resolve semantic ambiguity issues",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "S W C R M",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "词汇集合",
          "english_text": "W Word Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "概念集合",
          "english_text": "C Concept Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "语义关系集合",
          "english_text": "R Semantic Relation Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "语义映射函数",
          "english_text": "M Semantic Mapping Function",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 49,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "语义分析系统 是一个四元组 其中词汇集合 包含所有词汇单元 概念集合 定义语义概念 语义关系集合 描述概念间的语义关联 语义映射函数 将词汇映射到概念",
          "english_text": "S W C R M",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 52,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 54,
          "chinese_text": "定理 语义组合性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "如果语义分析系统 是组合性的 则对于任何复合表达式 其语义 其中 是语义组合函数",
          "english_text": "S E f e e e S E F S e S e S e F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 57,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 59,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 60,
          "chinese_text": "设语义分析系统 是组合性的",
          "english_text": "S",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 61,
          "chinese_text": "对于复合表达式",
          "english_text": "E f e e e",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 62,
          "chinese_text": "根据组合性定义 复合表达式的语义由其组成部分的语义组合而成",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 63,
          "chinese_text": "因此",
          "english_text": "S E F S e S e S e",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "其中 是语义组合函数",
          "english_text": "F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 65,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 67,
          "chinese_text": "定理 语义相似性传递性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 68,
          "chinese_text": "如果语义分析系统 满足传递性 且概念 与 相似 与 相似 则 与 也相似 即",
          "english_text": "S AB BC AC sim A B sim B C sim A C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 70,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 72,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 73,
          "chinese_text": "设语义分析系统 满足传递性",
          "english_text": "S",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 74,
          "chinese_text": "对于概念 如果",
          "english_text": "A B C sim A B sim B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 75,
          "chinese_text": "根据传递性定义 如果 与 相似 与 相似 则 与 相似",
          "english_text": "AB BC AC",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 76,
          "chinese_text": "因此 成立",
          "english_text": "sim A C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 77,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 79,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 81,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 83,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 84,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 85,
          "chinese_text": "文本输入 词汇分析",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 86,
          "chinese_text": "句法分析",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 87,
          "chinese_text": "语义分析",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 88,
          "chinese_text": "语义表示",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "分词",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 91,
          "chinese_text": "词性标注",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 92,
          "chinese_text": "命名实体识别",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "句法树构建",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 95,
          "chinese_text": "依存关系分析",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 96,
          "chinese_text": "句法结构解析",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "语义角色标注",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 99,
          "chinese_text": "语义关系抽取",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 100,
          "chinese_text": "语义消歧",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 101,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 103,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 105,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 107,
          "chinese_text": "优势 语义理解深度",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 109,
          "chinese_text": "中文 语义分析能够理解文本的深层含义 超越表面的词汇匹配",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 110,
          "chinese_text": "",
          "english_text": "English Semantic analysis can understand deep meaning of text beyond surface lexical matching",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 112,
          "chinese_text": "优势 关系识别能力",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 114,
          "chinese_text": "中文 能够识别概念间的复杂语义关系 支持知识推理",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 115,
          "chinese_text": "",
          "english_text": "English Can identify complex semantic relationships between concepts supporting knowledge reasoning",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 117,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 119,
          "chinese_text": "局限性 上下文依赖",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 121,
          "chinese_text": "中文 语义分析高度依赖上下文信息 在信息不足时容易出错",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 122,
          "chinese_text": "",
          "english_text": "English Semantic analysis highly depends on contextual information prone to errors when information is insufficient",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 124,
          "chinese_text": "局限性 歧义处理",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 126,
          "chinese_text": "中文 处理语义歧义仍然是一个重大挑战 需要大量标注数据",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 127,
          "chinese_text": "",
          "english_text": "English Handling semantic ambiguity remains a major challenge requiring extensive annotated data",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 129,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 131,
          "chinese_text": "争议点 符号主义 连接主义",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 133,
          "chinese_text": "支持观点 符号主义提供可解释的语义分析",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 134,
          "chinese_text": "反对观点 连接主义能够处理复杂的语义模式",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 135,
          "chinese_text": "中立分析 混合方法结合了两种范式的优势",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 139,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 141,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 143,
          "chinese_text": "词向量算法",
          "english_text": "Word Vector Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 145,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 146,
          "chinese_text": "实现示例",
          "english_text": "Rust Word Vector Algorithm",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 147,
          "chinese_text": "词向量算法 实现词嵌入和语义相似度计算",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 148,
          "chinese_text": "",
          "english_text": "use std collections HashMap",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 149,
          "chinese_text": "",
          "english_text": "use std f consts PI",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 151,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "",
          "english_text": "pub struct WordVector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 153,
          "chinese_text": "词汇",
          "english_text": "pub word String Word",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 154,
          "chinese_text": "词向量",
          "english_text": "pub vector Vec f Word vector",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 155,
          "chinese_text": "向量维度",
          "english_text": "pub dimension usize Vector dimension",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 156,
          "chinese_text": "词频",
          "english_text": "pub frequency usize Word frequency",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 157,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 159,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "pub struct SemanticAnalyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 161,
          "chinese_text": "词汇表",
          "english_text": "pub vocabulary HashMap String WordVector Vocabulary",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 162,
          "chinese_text": "词嵌入",
          "english_text": "pub word embeddings HashMap String Vec f Word embeddings",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 163,
          "chinese_text": "语义关系",
          "english_text": "pub semantic relations HashMap String Vec String Semantic relations",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 164,
          "chinese_text": "相似度矩阵",
          "english_text": "pub similarity matrix HashMap String HashMap String f Similarity matrix",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 165,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "impl SemanticAnalyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 168,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 169,
          "chinese_text": "",
          "english_text": "SemanticAnalyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 170,
          "chinese_text": "",
          "english_text": "vocabulary HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "",
          "english_text": "word embeddings HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 172,
          "chinese_text": "",
          "english_text": "semantic relations HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 173,
          "chinese_text": "",
          "english_text": "similarity matrix HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 174,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 175,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 177,
          "chinese_text": "添加词汇",
          "english_text": "Add word",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "pub fn add word mut self word String vector Vec f Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "if vector is empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 180,
          "chinese_text": "",
          "english_text": "return Err Vector cannot be empty to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 183,
          "chinese_text": "",
          "english_text": "let dimension vector len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 184,
          "chinese_text": "",
          "english_text": "let word vector WordVector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 185,
          "chinese_text": "",
          "english_text": "word word clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 186,
          "chinese_text": "",
          "english_text": "vector vector clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 187,
          "chinese_text": "",
          "english_text": "dimension",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "frequency",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 189,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 191,
          "chinese_text": "",
          "english_text": "self vocabulary insert word clone word vector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 192,
          "chinese_text": "",
          "english_text": "self word embeddings insert word vector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 197,
          "chinese_text": "计算余弦相似度",
          "english_text": "Calculate cosine similarity",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "pub fn cosine similarity self word str word str Option f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 199,
          "chinese_text": "",
          "english_text": "let vec self word embeddings get word",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 200,
          "chinese_text": "",
          "english_text": "let vec self word embeddings get word",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "if vec len vec len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 203,
          "chinese_text": "",
          "english_text": "return None",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "",
          "english_text": "let dot product f vec iter zip vec iter map a b a b sum",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 207,
          "chinese_text": "",
          "english_text": "let norm f vec iter map x x x sum f sqrt",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "let norm f vec iter map x x x sum f sqrt",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 210,
          "chinese_text": "",
          "english_text": "if norm norm",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "",
          "english_text": "return Some",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "",
          "english_text": "Some dot product norm norm",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 215,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "计算语义相似度",
          "english_text": "Calculate semantic similarity",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 218,
          "chinese_text": "",
          "english_text": "pub fn semantic similarity self word str word str Option f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "首先尝试余弦相似度",
          "english_text": "First try cosine similarity",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 220,
          "chinese_text": "",
          "english_text": "if let Some cosine sim self cosine similarity word word",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "",
          "english_text": "return Some cosine sim",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 224,
          "chinese_text": "如果余弦相似度不可用 使用其他方法",
          "english_text": "If cosine similarity unavailable use other methods",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 225,
          "chinese_text": "",
          "english_text": "self calculate semantic similarity alternative word word",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 226,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 228,
          "chinese_text": "替代的语义相似度计算方法",
          "english_text": "Alternative semantic similarity calculation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 229,
          "chinese_text": "",
          "english_text": "fn calculate semantic similarity alternative self word str word str Option f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 230,
          "chinese_text": "基于词汇共现的相似度计算",
          "english_text": "Similarity calculation based on word co occurrence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "let relations self semantic relations get word",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 232,
          "chinese_text": "",
          "english_text": "let relations self semantic relations get word",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "let intersection relations iter",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 235,
          "chinese_text": "",
          "english_text": "filter r relations contains r",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 236,
          "chinese_text": "",
          "english_text": "count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "",
          "english_text": "let union relations len relations len intersection",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "if union",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 241,
          "chinese_text": "",
          "english_text": "return Some",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 242,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 244,
          "chinese_text": "",
          "english_text": "Some intersection as f union as f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 245,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "语义角色标注",
          "english_text": "Semantic role labeling",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "pub fn semantic role labeling self sentence str Vec SemanticRole",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 249,
          "chinese_text": "",
          "english_text": "let words Vec str sentence split whitespace collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 250,
          "chinese_text": "",
          "english_text": "let mut roles Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "",
          "english_text": "for i word in words iter enumerate",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 253,
          "chinese_text": "",
          "english_text": "let role self identify semantic role word i words",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "",
          "english_text": "roles push role",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "roles",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "识别语义角色",
          "english_text": "Identify semantic role",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 261,
          "chinese_text": "",
          "english_text": "fn identify semantic role self word str position usize sentence str SemanticRole",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 262,
          "chinese_text": "简化的语义角色识别",
          "english_text": "Simplified semantic role identification",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 263,
          "chinese_text": "",
          "english_text": "if position",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "SemanticRole Subject",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 265,
          "chinese_text": "",
          "english_text": "else if word ends with s word ends with ed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "",
          "english_text": "SemanticRole Verb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 267,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 268,
          "chinese_text": "",
          "english_text": "SemanticRole Object",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 270,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 272,
          "chinese_text": "语义关系抽取",
          "english_text": "Semantic relation extraction",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 273,
          "chinese_text": "",
          "english_text": "pub fn extract semantic relations self text str Vec SemanticRelation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 274,
          "chinese_text": "",
          "english_text": "let sentences Vec str text split collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "let mut relations Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 277,
          "chinese_text": "",
          "english_text": "for sentence in sentences",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 278,
          "chinese_text": "",
          "english_text": "let sentence relations self extract sentence relations sentence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "relations extend sentence relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 283,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 285,
          "chinese_text": "抽取句子中的语义关系",
          "english_text": "Extract semantic relations from sentence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 286,
          "chinese_text": "",
          "english_text": "fn extract sentence relations self sentence str Vec SemanticRelation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "",
          "english_text": "let words Vec str sentence split whitespace collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "let mut relations Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "for i in words len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 291,
          "chinese_text": "",
          "english_text": "for j in i words len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "if let Some similarity self semantic similarity words i words j",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 293,
          "chinese_text": "",
          "english_text": "if similarity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 294,
          "chinese_text": "",
          "english_text": "relations push SemanticRelation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 295,
          "chinese_text": "",
          "english_text": "source words i to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "target words j to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "relation type similar to to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 298,
          "chinese_text": "",
          "english_text": "confidence similarity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 299,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 305,
          "chinese_text": "",
          "english_text": "relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "语义消歧",
          "english_text": "Semantic disambiguation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "pub fn semantic disambiguation self word str context str Option String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "基于上下文的语义消歧",
          "english_text": "Context based semantic disambiguation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 311,
          "chinese_text": "",
          "english_text": "let context words Vec str context split whitespace collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 312,
          "chinese_text": "",
          "english_text": "let mut best sense None",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "",
          "english_text": "let mut max similarity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "这里简化处理 实际应该使用更复杂的消歧算法",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 316,
          "chinese_text": "",
          "english_text": "This is simplified actual implementation should use more complex disambiguation algorithms",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "",
          "english_text": "for context word in context words",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 318,
          "chinese_text": "",
          "english_text": "if let Some similarity self semantic similarity word context word",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "if similarity max similarity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "max similarity similarity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "best sense Some context word to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 324,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "best sense",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 327,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 331,
          "chinese_text": "",
          "english_text": "pub enum SemanticRole",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "",
          "english_text": "Subject",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 333,
          "chinese_text": "",
          "english_text": "Verb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 334,
          "chinese_text": "",
          "english_text": "Object",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "",
          "english_text": "Adverb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 336,
          "chinese_text": "",
          "english_text": "Adjective",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "Preposition",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "Unknown",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 339,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 342,
          "chinese_text": "",
          "english_text": "pub struct SemanticRelation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "源概念",
          "english_text": "pub source String Source concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 344,
          "chinese_text": "目标概念",
          "english_text": "pub target String Target concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 345,
          "chinese_text": "关系类型",
          "english_text": "pub relation type String Relation type",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 346,
          "chinese_text": "置信度",
          "english_text": "pub confidence f Confidence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 347,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 348,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 350,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 351,
          "chinese_text": "实现示例",
          "english_text": "Haskell Word Vector Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 352,
          "chinese_text": "词向量算法 实现词嵌入和语义相似度计算",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 353,
          "chinese_text": "",
          "english_text": "module SemanticAnalysis where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "import Data Vector Vector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 358,
          "chinese_text": "",
          "english_text": "import qualified Data Vector as V",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 359,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 360,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 361,
          "chinese_text": "",
          "english_text": "import Data Maybe fromMaybe",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 363,
          "chinese_text": "词向量数据结构",
          "english_text": "Word vector data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "data WordVector WordVector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "词汇",
          "english_text": "wordText Text Word",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 366,
          "chinese_text": "词向量",
          "english_text": "wordVector Vector Double Word vector",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 367,
          "chinese_text": "向量维度",
          "english_text": "wordDimension Int Vector dimension",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 368,
          "chinese_text": "词频",
          "english_text": "wordFrequency Int Word frequency",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 369,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 371,
          "chinese_text": "语义分析器数据结构",
          "english_text": "Semantic analyzer data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 372,
          "chinese_text": "",
          "english_text": "data SemanticAnalyzer SemanticAnalyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 373,
          "chinese_text": "词汇表",
          "english_text": "saVocabulary Map Text WordVector Vocabulary",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 374,
          "chinese_text": "词嵌入",
          "english_text": "saWordEmbeddings Map Text Vector Double Word embeddings",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 375,
          "chinese_text": "语义关系",
          "english_text": "saSemanticRelations Map Text Text Semantic relations",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 376,
          "chinese_text": "相似度矩阵",
          "english_text": "saSimilarityMatrix Map Text Map Text Double Similarity matrix",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 377,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "空语义分析器",
          "english_text": "Empty semantic analyzer",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "emptySemanticAnalyzer SemanticAnalyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "emptySemanticAnalyzer SemanticAnalyzer Map empty Map empty Map empty Map empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "添加词汇",
          "english_text": "Add word",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 384,
          "chinese_text": "",
          "english_text": "addWord Text Vector Double SemanticAnalyzer Either Text SemanticAnalyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 385,
          "chinese_text": "",
          "english_text": "addWord word vector analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 386,
          "chinese_text": "",
          "english_text": "if V null vector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 387,
          "chinese_text": "",
          "english_text": "then Left Vector cannot be empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 388,
          "chinese_text": "",
          "english_text": "else let dimension V length vector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 389,
          "chinese_text": "",
          "english_text": "wordVector WordVector word vector dimension",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "newVocabulary Map insert word wordVector saVocabulary analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 391,
          "chinese_text": "",
          "english_text": "newEmbeddings Map insert word vector saWordEmbeddings analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 392,
          "chinese_text": "",
          "english_text": "in Right analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "saVocabulary newVocabulary",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "",
          "english_text": "saWordEmbeddings newEmbeddings",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 395,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "计算余弦相似度",
          "english_text": "Calculate cosine similarity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 398,
          "chinese_text": "",
          "english_text": "cosineSimilarity Vector Double Vector Double Maybe Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "cosineSimilarity vec vec",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "if V length vec V length vec",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "then Nothing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 402,
          "chinese_text": "",
          "english_text": "else let dotProduct V sum V zipWith vec vec",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 403,
          "chinese_text": "",
          "english_text": "norm sqrt V sum V map vec",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 404,
          "chinese_text": "",
          "english_text": "norm sqrt V sum V map vec",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 405,
          "chinese_text": "",
          "english_text": "in if norm norm",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "then Just",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 407,
          "chinese_text": "",
          "english_text": "else Just dotProduct norm norm",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "获取词向量",
          "english_text": "Get word vector",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "getWordVector Text SemanticAnalyzer Maybe Vector Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "getWordVector word analyzer Map lookup word saWordEmbeddings analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "计算语义相似度",
          "english_text": "Calculate semantic similarity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "semanticSimilarity Text Text SemanticAnalyzer Maybe Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 415,
          "chinese_text": "",
          "english_text": "semanticSimilarity word word analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 416,
          "chinese_text": "",
          "english_text": "let vec getWordVector word analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "vec getWordVector word analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 418,
          "chinese_text": "",
          "english_text": "in case vec vec of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "",
          "english_text": "Just v Just v cosineSimilarity v v",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 420,
          "chinese_text": "",
          "english_text": "calculateSemanticSimilarityAlternative word word analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 422,
          "chinese_text": "替代的语义相似度计算方法",
          "english_text": "Alternative semantic similarity calculation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 423,
          "chinese_text": "",
          "english_text": "calculateSemanticSimilarityAlternative Text Text SemanticAnalyzer Maybe Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 424,
          "chinese_text": "",
          "english_text": "calculateSemanticSimilarityAlternative word word analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 425,
          "chinese_text": "",
          "english_text": "let relations Map findWithDefault word saSemanticRelations analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 426,
          "chinese_text": "",
          "english_text": "relations Map findWithDefault word saSemanticRelations analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 427,
          "chinese_text": "",
          "english_text": "intersection length filter elem relations relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "union length relations length relations intersection",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 429,
          "chinese_text": "",
          "english_text": "in if union",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "",
          "english_text": "then Just",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "else Just fromIntegral intersection fromIntegral union",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "语义角色标注",
          "english_text": "Semantic role labeling",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "semanticRoleLabeling Text SemanticAnalyzer SemanticRole",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "semanticRoleLabeling sentence analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 436,
          "chinese_text": "",
          "english_text": "let words T words sentence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 437,
          "chinese_text": "",
          "english_text": "in zipWith word pos identifySemanticRole word pos words words",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 439,
          "chinese_text": "识别语义角色",
          "english_text": "Identify semantic role",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 440,
          "chinese_text": "",
          "english_text": "identifySemanticRole Text Int Text SemanticRole",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 441,
          "chinese_text": "",
          "english_text": "identifySemanticRole word position sentence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 442,
          "chinese_text": "",
          "english_text": "if position",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 443,
          "chinese_text": "",
          "english_text": "then Subject",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 444,
          "chinese_text": "",
          "english_text": "else if T isSuffixOf s word T isSuffixOf ed word",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "then Verb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 446,
          "chinese_text": "",
          "english_text": "else Object",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "语义关系抽取",
          "english_text": "Semantic relation extraction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 449,
          "chinese_text": "",
          "english_text": "extractSemanticRelations Text SemanticAnalyzer SemanticRelation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 450,
          "chinese_text": "",
          "english_text": "extractSemanticRelations text analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 451,
          "chinese_text": "",
          "english_text": "let sentences T splitOn text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 452,
          "chinese_text": "",
          "english_text": "sentenceRelations concatMap sentence extractSentenceRelations sentence analyzer sentences",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 453,
          "chinese_text": "",
          "english_text": "in sentenceRelations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 455,
          "chinese_text": "抽取句子中的语义关系",
          "english_text": "Extract semantic relations from sentence",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 456,
          "chinese_text": "",
          "english_text": "extractSentenceRelations Text SemanticAnalyzer SemanticRelation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 457,
          "chinese_text": "",
          "english_text": "extractSentenceRelations sentence analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 458,
          "chinese_text": "",
          "english_text": "let words T words sentence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 459,
          "chinese_text": "",
          "english_text": "wordPairs words i words j i length words j i length words",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 460,
          "chinese_text": "",
          "english_text": "relations concatMap w w",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "",
          "english_text": "case semanticSimilarity w w analyzer of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 462,
          "chinese_text": "",
          "english_text": "Just similarity if similarity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 463,
          "chinese_text": "",
          "english_text": "then SemanticRelation w w similar to similarity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 464,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 465,
          "chinese_text": "",
          "english_text": "Nothing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 466,
          "chinese_text": "",
          "english_text": "wordPairs",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 467,
          "chinese_text": "",
          "english_text": "in relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 469,
          "chinese_text": "语义消歧",
          "english_text": "Semantic disambiguation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 470,
          "chinese_text": "",
          "english_text": "semanticDisambiguation Text Text SemanticAnalyzer Maybe Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "",
          "english_text": "semanticDisambiguation word context analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 472,
          "chinese_text": "",
          "english_text": "let contextWords T words context",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "",
          "english_text": "similarities mapMaybe ctxWord",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 474,
          "chinese_text": "",
          "english_text": "case semanticSimilarity word ctxWord analyzer of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 475,
          "chinese_text": "",
          "english_text": "Just sim Just ctxWord sim",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 476,
          "chinese_text": "",
          "english_text": "Nothing Nothing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 477,
          "chinese_text": "",
          "english_text": "contextWords",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 478,
          "chinese_text": "",
          "english_text": "in case similarities of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 479,
          "chinese_text": "",
          "english_text": "Nothing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 480,
          "chinese_text": "",
          "english_text": "sims Just fst maximumBy s s compare s s sims",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 482,
          "chinese_text": "语义角色枚举",
          "english_text": "Semantic role enumeration",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 483,
          "chinese_text": "",
          "english_text": "data SemanticRole Subject Verb Object Adverb Adjective Preposition Unknown",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 484,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 486,
          "chinese_text": "语义关系数据结构",
          "english_text": "Semantic relation data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 487,
          "chinese_text": "",
          "english_text": "data SemanticRelation SemanticRelation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 488,
          "chinese_text": "源概念",
          "english_text": "srSource Text Source concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 489,
          "chinese_text": "目标概念",
          "english_text": "srTarget Text Target concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 490,
          "chinese_text": "关系类型",
          "english_text": "srRelationType Text Relation type",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 491,
          "chinese_text": "置信度",
          "english_text": "srConfidence Double Confidence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 492,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 494,
          "chinese_text": "辅助函数 比较函数",
          "english_text": "Helper function comparison function",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 495,
          "chinese_text": "",
          "english_text": "maximumBy a a Ordering a a",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 496,
          "chinese_text": "",
          "english_text": "maximumBy error maximumBy empty list",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 497,
          "chinese_text": "",
          "english_text": "maximumBy cmp x xs foldr y acc if cmp y acc GT then y else acc x xs",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 498,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 500,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 502,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 504,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 505,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 506,
          "chinese_text": "",
          "english_text": "pub struct SemanticGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 507,
          "chinese_text": "",
          "english_text": "pub analyzer SemanticAnalyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 508,
          "chinese_text": "",
          "english_text": "pub semantic nodes HashMap String SemanticNode",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 509,
          "chinese_text": "",
          "english_text": "pub semantic edges HashMap String SemanticEdge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 510,
          "chinese_text": "",
          "english_text": "pub context analyzer ContextAnalyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 511,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 513,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 514,
          "chinese_text": "",
          "english_text": "pub struct SemanticNode",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 515,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 516,
          "chinese_text": "",
          "english_text": "pub concept String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 517,
          "chinese_text": "",
          "english_text": "pub semantic type SemanticType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 518,
          "chinese_text": "",
          "english_text": "pub embeddings Vec f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 519,
          "chinese_text": "",
          "english_text": "pub properties HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 520,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 522,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 523,
          "chinese_text": "",
          "english_text": "pub enum SemanticType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 524,
          "chinese_text": "",
          "english_text": "Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 525,
          "chinese_text": "",
          "english_text": "Action",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 526,
          "chinese_text": "",
          "english_text": "Attribute",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 527,
          "chinese_text": "",
          "english_text": "Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 528,
          "chinese_text": "",
          "english_text": "Event",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 529,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 531,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 532,
          "chinese_text": "",
          "english_text": "pub struct SemanticEdge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 533,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 534,
          "chinese_text": "",
          "english_text": "pub source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 535,
          "chinese_text": "",
          "english_text": "pub target String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 536,
          "chinese_text": "",
          "english_text": "pub relation type String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 537,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 538,
          "chinese_text": "",
          "english_text": "pub semantic properties HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 539,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 541,
          "chinese_text": "",
          "english_text": "impl SemanticGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 542,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 543,
          "chinese_text": "",
          "english_text": "SemanticGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 544,
          "chinese_text": "",
          "english_text": "analyzer SemanticAnalyzer new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 545,
          "chinese_text": "",
          "english_text": "semantic nodes HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 546,
          "chinese_text": "",
          "english_text": "semantic edges HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 547,
          "chinese_text": "",
          "english_text": "context analyzer ContextAnalyzer new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 548,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 549,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 551,
          "chinese_text": "添加语义节点",
          "english_text": "Add semantic node",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 552,
          "chinese_text": "",
          "english_text": "pub fn add semantic node mut self node SemanticNode Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 553,
          "chinese_text": "",
          "english_text": "if self semantic nodes contains key node id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 554,
          "chinese_text": "",
          "english_text": "return Err format Semantic node already exists node id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 555,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 557,
          "chinese_text": "",
          "english_text": "self semantic nodes insert node id clone node",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 558,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 559,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 561,
          "chinese_text": "添加语义边",
          "english_text": "Add semantic edge",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 562,
          "chinese_text": "",
          "english_text": "pub fn add semantic edge mut self edge SemanticEdge Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 563,
          "chinese_text": "",
          "english_text": "if self semantic nodes contains key edge source",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 564,
          "chinese_text": "",
          "english_text": "return Err format Source node does not exist edge source",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 565,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 566,
          "chinese_text": "",
          "english_text": "if self semantic nodes contains key edge target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 567,
          "chinese_text": "",
          "english_text": "return Err format Target node does not exist edge target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 568,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 570,
          "chinese_text": "",
          "english_text": "self semantic edges insert edge id clone edge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 571,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 572,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 574,
          "chinese_text": "语义相似度查询",
          "english_text": "Semantic similarity query",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 575,
          "chinese_text": "",
          "english_text": "pub fn query semantic similarity self concept str concept str Option f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 576,
          "chinese_text": "",
          "english_text": "self analyzer semantic similarity concept concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 577,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 579,
          "chinese_text": "语义路径分析",
          "english_text": "Semantic path analysis",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 580,
          "chinese_text": "",
          "english_text": "pub fn analyze semantic path self start str end str Vec SemanticPath",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 581,
          "chinese_text": "简化的语义路径分析实现",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 582,
          "chinese_text": "",
          "english_text": "let mut paths Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 584,
          "chinese_text": "",
          "english_text": "if let Some start node self semantic nodes get start",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 585,
          "chinese_text": "",
          "english_text": "if let Some end node self semantic nodes get end",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 586,
          "chinese_text": "这里应该实现更复杂的路径查找算法",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 587,
          "chinese_text": "",
          "english_text": "let path SemanticPath",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 588,
          "chinese_text": "",
          "english_text": "nodes vec start to string end to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 589,
          "chinese_text": "",
          "english_text": "edges Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 590,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 591,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 592,
          "chinese_text": "",
          "english_text": "paths push path",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 593,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 594,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 596,
          "chinese_text": "",
          "english_text": "paths",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 597,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 598,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 600,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 601,
          "chinese_text": "",
          "english_text": "pub struct SemanticPath",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 602,
          "chinese_text": "",
          "english_text": "pub nodes Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 603,
          "chinese_text": "",
          "english_text": "pub edges Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 604,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 605,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 606,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 608,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 610,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 612,
          "chinese_text": "词向量计算",
          "english_text": "Word Vector Calculation O d",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 613,
          "chinese_text": "语义相似度计算",
          "english_text": "Semantic Similarity Calculation O d",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 614,
          "chinese_text": "语义角色标注",
          "english_text": "Semantic Role Labeling O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 615,
          "chinese_text": "语义关系抽取",
          "english_text": "Semantic Relation Extraction O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 617,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 619,
          "chinese_text": "词汇表存储",
          "english_text": "Vocabulary Storage O n d",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 620,
          "chinese_text": "相似度矩阵",
          "english_text": "Similarity Matrix O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 621,
          "chinese_text": "语义图存储",
          "english_text": "Semantic Graph Storage O n e",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 623,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 625,
          "chinese_text": "案例 智能问答系统",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 627,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 628,
          "chinese_text": "构建一个基于语义分析的智能问答系统 能够理解用户问题的深层含义并提供准确答案",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 630,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 632,
          "chinese_text": "实现语义理解模块",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 633,
          "chinese_text": "构建知识图谱查询",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 634,
          "chinese_text": "开发答案生成算法",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 635,
          "chinese_text": "集成语义相似度计算",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 637,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 639,
          "chinese_text": "问题理解准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 640,
          "chinese_text": "答案相关性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 641,
          "chinese_text": "响应时间",
          "english_text": "ms",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 642,
          "chinese_text": "用户满意度",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 644,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 646,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 648,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 649,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 650,
          "chinese_text": "智能问答 基于语义理解的问答系统",
          "english_text": "Intelligent Q A Q A systems based on semantic understanding",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 651,
          "chinese_text": "信息抽取 从文本中抽取结构化信息",
          "english_text": "Information Extraction Extract structured information from text",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 652,
          "chinese_text": "文本分类 基于语义的文本分类",
          "english_text": "Text Classification Semantic based text classification",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 653,
          "chinese_text": "机器翻译 语义感知的翻译系统",
          "english_text": "Machine Translation Semantic aware translation systems",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 655,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 657,
          "chinese_text": "案例 模型",
          "english_text": "Case Google BERT",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 659,
          "chinese_text": "项目名称",
          "english_text": "Project Name Google BERT Model",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 660,
          "chinese_text": "应用场景 预训练语言模型",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 661,
          "chinese_text": "技术实现 基于 的双向编码",
          "english_text": "Technical Implementation Transformer",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 662,
          "chinese_text": "效果评估 在多个 任务中表现优异",
          "english_text": "Effect Evaluation NLP",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 664,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 666,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 668,
          "chinese_text": "研究方向 大规模语言模型",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 670,
          "chinese_text": "研究内容 基于 的大规模预训练模型",
          "english_text": "Research Content Transformer",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 671,
          "chinese_text": "技术突破 实现了强大的语义理解能力",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 672,
          "chinese_text": "应用前景 在多个领域有重要应用",
          "english_text": "Application Prospects",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 674,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 676,
          "chinese_text": "趋势 多模态语义分析",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 678,
          "chinese_text": "中文 语义分析正在向多模态方向发展 支持文本 图像 音频等多种形式",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 679,
          "chinese_text": "",
          "english_text": "English Semantic analysis is moving towards multimodal direction supporting text image audio and other forms",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 681,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 683,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 685,
          "chinese_text": "要点 语义分析是知识图谱理解文本含义的核心技术",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 686,
          "chinese_text": "要点 现代语义分析结合了深度学习和传统语言学方法",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 687,
          "chinese_text": "要点 语义分析正在向多模态和实时处理方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 689,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 691,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 693,
          "chinese_text": "短期目标 提升语义分析的准确性和效率",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 694,
          "chinese_text": "中期目标 实现多模态语义分析",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 695,
          "chinese_text": "长期目标 构建通用语义理解系统",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 697,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 699,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 701,
          "chinese_text": "",
          "english_text": "Jurafsky D Martin J H Speech and language processing Pearson Prentice Hall",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 702,
          "chinese_text": "",
          "english_text": "Manning C D Sch tze H Foundations of statistical natural language processing MIT press",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 703,
          "chinese_text": "",
          "english_text": "Goldberg Y Neural network methods for natural language processing Synthesis Lectures on Human Language Technologies",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 705,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 707,
          "chinese_text": "",
          "english_text": "spaCy Documentation https spacy io Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 708,
          "chinese_text": "",
          "english_text": "NLTK Documentation https www nltk org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 709,
          "chinese_text": "",
          "english_text": "Transformers Documentation https huggingface co transformers Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 711,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 713,
          "chinese_text": "",
          "english_text": "Stanford NLP Group https nlp stanford edu Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 714,
          "chinese_text": "",
          "english_text": "ACL Anthology https aclanthology org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 715,
          "chinese_text": "",
          "english_text": "arXiv NLP Papers https arxiv org list cs CL recent Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 717,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 719,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 721,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 722,
          "chinese_text": "图论基础",
          "english_text": "graph theory README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 723,
          "chinese_text": "本体工程",
          "english_text": "ontology engineering README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 725,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 727,
          "chinese_text": "",
          "english_text": "spaCy https spacy io",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 728,
          "chinese_text": "",
          "english_text": "NLTK https www nltk org",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 729,
          "chinese_text": "",
          "english_text": "Transformers https huggingface co transformers",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 731,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 733,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 734,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 735,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\04-ontology-engineering\\README.md",
      "total_lines": 738,
      "bilingual_lines": 258,
      "bilingual_ratio": 0.34959349593495936,
      "section_bilingual_ratio": 0.7115384615384616,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.2177858439201452,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "本体工程",
          "english_text": "Ontology Engineering",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "本体工程是知识图谱中构建和管理形式化概念模型的核心技术 它通过定义概念 关系和约束 创建领域知识的标准化表示 为知识图谱提供结构化的语义基础 支持知识的共享 重用和推理",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Ontology engineering is a core technology in knowledge graphs for building and managing formal conceptual models It creates standardized representations of domain knowledge by defining concepts relationships and constraints providing structured semantic foundations for knowledge graphs and supporting knowledge sharing reuse and reasoning",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 16,
          "chinese_text": "阶段 哲学本体论时期 基于哲学的本体概念",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 计算机本体论时期 形式化本体语言发展",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 工程本体论时期 至今 本体工程方法和工具",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 20,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 22,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 24,
          "chinese_text": "形式化 使用数学符号和逻辑表示概念",
          "english_text": "Formal Use mathematical symbols and logic to represent concepts",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 25,
          "chinese_text": "共享性 支持知识的共享和重用",
          "english_text": "Shared Support knowledge sharing and reuse",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "可扩展性 支持本体模型的扩展和演化",
          "english_text": "Extensible Support ontology model extension and evolution",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "一致性 确保本体模型的逻辑一致性",
          "english_text": "Consistent Ensure logical consistency of ontology models",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 29,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 31,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 33,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 35,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 37,
          "chinese_text": "",
          "english_text": "O C R A I H",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "概念集合",
          "english_text": "C Concept Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 41,
          "chinese_text": "关系集合",
          "english_text": "R Relation Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 42,
          "chinese_text": "公理集合",
          "english_text": "A Axiom Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 43,
          "chinese_text": "实例集合",
          "english_text": "I Instance Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 44,
          "chinese_text": "层次结构",
          "english_text": "H Hierarchy",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "本体 是一个五元组 其中概念集合 定义领域中的核心概念 关系集合 描述概念间的语义关系 公理集合 定义逻辑约束 实例集合 包含具体的实体 层次结构 定义概念间的继承关系",
          "english_text": "O C R A I H",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 49,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 51,
          "chinese_text": "定理 本体一致性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 52,
          "chinese_text": "如果本体 是一致的 则对于任何概念 不存在矛盾的公理 使得",
          "english_text": "O C R A I H c C a a Aa c a c",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 54,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 56,
          "chinese_text": "设本体 是一致的",
          "english_text": "O",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 57,
          "chinese_text": "对于概念 假设存在矛盾的公理",
          "english_text": "c C a a A",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 58,
          "chinese_text": "使得",
          "english_text": "a c a c",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 59,
          "chinese_text": "这与一致性定义矛盾",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 60,
          "chinese_text": "因此 一致的本体中不存在矛盾的公理",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 61,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 63,
          "chinese_text": "定理 本体推理完备性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "如果本体 是完备的 则对于任何概念 和关系 如果 和 满足公理集合 中的约束 则可以通过推理得出所有相关的逻辑结论",
          "english_text": "O c Cr R crA",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 66,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 67,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 68,
          "chinese_text": "设本体 是完备的",
          "english_text": "O",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 69,
          "chinese_text": "对于概念 和关系",
          "english_text": "c Cr R",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 70,
          "chinese_text": "如果 和 满足公理集合 中的约束",
          "english_text": "crA",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 71,
          "chinese_text": "根据完备性定义 所有满足约束的逻辑结论都可以被推理得出",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 72,
          "chinese_text": "因此 可以通过推理得出所有相关的逻辑结论",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 73,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 75,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 77,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 78,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 79,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 80,
          "chinese_text": "本体构建 概念定义",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 81,
          "chinese_text": "关系建模",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 82,
          "chinese_text": "约束定义",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 83,
          "chinese_text": "实例化",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 85,
          "chinese_text": "概念识别",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 86,
          "chinese_text": "概念分类",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 87,
          "chinese_text": "概念层次",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 89,
          "chinese_text": "关系类型",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "关系属性",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 91,
          "chinese_text": "关系约束",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 93,
          "chinese_text": "逻辑约束",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "语义约束",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 95,
          "chinese_text": "一致性检查",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 96,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 98,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 100,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 102,
          "chinese_text": "优势 形式化表示",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 103,
          "chinese_text": "中文 本体工程提供形式化的知识表示 支持精确的语义建模",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 104,
          "chinese_text": "",
          "english_text": "English Ontology engineering provides formal knowledge representation supporting precise semantic modeling",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 106,
          "chinese_text": "优势 可重用性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 107,
          "chinese_text": "中文 本体模型可以在不同应用间共享和重用 提高开发效率",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 108,
          "chinese_text": "",
          "english_text": "English Ontology models can be shared and reused across different applications improving development efficiency",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 110,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 112,
          "chinese_text": "局限性 构建复杂性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 113,
          "chinese_text": "中文 本体构建需要领域专家参与 过程复杂且耗时",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 114,
          "chinese_text": "",
          "english_text": "English Ontology construction requires domain expert participation with complex and time consuming processes",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 116,
          "chinese_text": "局限性 维护困难",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 117,
          "chinese_text": "中文 本体模型的维护和演化面临版本管理和一致性保持的挑战",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 118,
          "chinese_text": "",
          "english_text": "English Ontology model maintenance and evolution face challenges in version management and consistency preservation",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 120,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 122,
          "chinese_text": "争议点 自上而下 自下而上",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 123,
          "chinese_text": "支持观点 自上而下方法提供系统化的本体结构",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 124,
          "chinese_text": "反对观点 自下而上方法更符合实际应用需求",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 125,
          "chinese_text": "中立分析 混合方法结合了两种方法的优势",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 127,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 129,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 131,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 133,
          "chinese_text": "本体构建算法",
          "english_text": "Ontology Construction Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 134,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 135,
          "chinese_text": "实现示例",
          "english_text": "Rust Ontology Construction Algorithm",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 136,
          "chinese_text": "本体构建算法 实现本体的创建 管理和推理功能",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 137,
          "chinese_text": "",
          "english_text": "use std collections HashMap HashSet",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 138,
          "chinese_text": "",
          "english_text": "use std fmt",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 140,
          "chinese_text": "",
          "english_text": "derive Debug Clone PartialEq Eq Hash",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 141,
          "chinese_text": "",
          "english_text": "pub struct Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 142,
          "chinese_text": "概念标识",
          "english_text": "pub id String Concept identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 143,
          "chinese_text": "概念名称",
          "english_text": "pub name String Concept name",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 144,
          "chinese_text": "概念描述",
          "english_text": "pub description String Concept description",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 145,
          "chinese_text": "父概念",
          "english_text": "pub parent concepts HashSet String Parent concepts",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 146,
          "chinese_text": "子概念",
          "english_text": "pub child concepts HashSet String Child concepts",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 147,
          "chinese_text": "概念属性",
          "english_text": "pub properties HashMap String String Concept properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 148,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 150,
          "chinese_text": "",
          "english_text": "derive Debug Clone PartialEq Eq Hash",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 151,
          "chinese_text": "",
          "english_text": "pub struct Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "关系标识",
          "english_text": "pub id String Relation identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 153,
          "chinese_text": "关系名称",
          "english_text": "pub name String Relation name",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 154,
          "chinese_text": "源概念",
          "english_text": "pub source concept String Source concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 155,
          "chinese_text": "目标概念",
          "english_text": "pub target concept String Target concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 156,
          "chinese_text": "关系类型",
          "english_text": "pub relation type RelationType Relation type",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 157,
          "chinese_text": "关系属性",
          "english_text": "pub properties HashMap String String Relation properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 158,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "derive Debug Clone PartialEq Eq Hash",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 161,
          "chinese_text": "",
          "english_text": "pub enum RelationType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 162,
          "chinese_text": "继承关系",
          "english_text": "IsA Inheritance relation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 163,
          "chinese_text": "部分关系",
          "english_text": "PartOf Part of relation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 164,
          "chinese_text": "实例关系",
          "english_text": "InstanceOf Instance of relation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 165,
          "chinese_text": "属性关系",
          "english_text": "HasProperty Property relation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 166,
          "chinese_text": "自定义关系",
          "english_text": "Custom String Custom relation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 169,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 170,
          "chinese_text": "",
          "english_text": "pub struct Axiom",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "公理标识",
          "english_text": "pub id String Axiom identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 172,
          "chinese_text": "相关概念",
          "english_text": "pub concept String Related concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 173,
          "chinese_text": "约束条件",
          "english_text": "pub constraint String Constraint condition",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 174,
          "chinese_text": "公理类型",
          "english_text": "pub axiom type AxiomType Axiom type",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 175,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 177,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "pub enum AxiomType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "逻辑公理",
          "english_text": "Logical Logical axiom",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 180,
          "chinese_text": "语义公理",
          "english_text": "Semantic Semantic axiom",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 181,
          "chinese_text": "结构公理",
          "english_text": "Structural Structural axiom",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 182,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 184,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 185,
          "chinese_text": "",
          "english_text": "pub struct Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 186,
          "chinese_text": "概念集合",
          "english_text": "pub concepts HashMap String Concept Concept set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 187,
          "chinese_text": "关系集合",
          "english_text": "pub relations HashMap String Relation Relation set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 188,
          "chinese_text": "公理集合",
          "english_text": "pub axioms HashMap String Axiom Axiom set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 189,
          "chinese_text": "实例集合",
          "english_text": "pub instances HashMap String Instance Instance set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 190,
          "chinese_text": "层次结构",
          "english_text": "pub hierarchy HashMap String Vec String Hierarchy",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 191,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 193,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "pub struct Instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "实例标识",
          "english_text": "pub id String Instance identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 196,
          "chinese_text": "所属概念",
          "english_text": "pub concept String Belonging concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 197,
          "chinese_text": "实例属性",
          "english_text": "pub properties HashMap String String Instance properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 200,
          "chinese_text": "",
          "english_text": "impl Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 203,
          "chinese_text": "",
          "english_text": "concepts HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "",
          "english_text": "relations HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "axioms HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "",
          "english_text": "instances HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 207,
          "chinese_text": "",
          "english_text": "hierarchy HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "添加概念",
          "english_text": "Add concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "pub fn add concept mut self concept Concept Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 213,
          "chinese_text": "",
          "english_text": "if self concepts contains key concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "",
          "english_text": "return Err format Concept already exists concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 215,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "验证父概念存在性",
          "english_text": "Verify parent concept existence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 218,
          "chinese_text": "",
          "english_text": "for parent id in concept parent concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "if self concepts contains key parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 220,
          "chinese_text": "",
          "english_text": "return Err format Parent concept does not exist parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 224,
          "chinese_text": "",
          "english_text": "self concepts insert concept id clone concept clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 226,
          "chinese_text": "更新层次结构",
          "english_text": "Update hierarchy",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 227,
          "chinese_text": "",
          "english_text": "for parent id in concept parent concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 228,
          "chinese_text": "",
          "english_text": "self hierarchy entry parent id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 229,
          "chinese_text": "",
          "english_text": "or insert with Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 230,
          "chinese_text": "",
          "english_text": "push concept id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 233,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 236,
          "chinese_text": "添加关系",
          "english_text": "Add relation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 237,
          "chinese_text": "",
          "english_text": "pub fn add relation mut self relation Relation Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "",
          "english_text": "if self relations contains key relation id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "return Err format Relation already exists relation id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 242,
          "chinese_text": "验证概念存在性",
          "english_text": "Verify concept existence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 243,
          "chinese_text": "",
          "english_text": "if self concepts contains key relation source concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 244,
          "chinese_text": "",
          "english_text": "return Err format Source concept does not exist relation source concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 245,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 246,
          "chinese_text": "",
          "english_text": "if self concepts contains key relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "",
          "english_text": "return Err format Target concept does not exist relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 250,
          "chinese_text": "",
          "english_text": "self relations insert relation id clone relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 253,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "添加公理",
          "english_text": "Add axiom",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 256,
          "chinese_text": "",
          "english_text": "pub fn add axiom mut self axiom Axiom Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "if self axioms contains key axiom id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "return Err format Axiom already exists axiom id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 259,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 261,
          "chinese_text": "验证概念存在性",
          "english_text": "Verify concept existence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 262,
          "chinese_text": "",
          "english_text": "if self concepts contains key axiom concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 263,
          "chinese_text": "",
          "english_text": "return Err format Concept does not exist axiom concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "",
          "english_text": "self axioms insert axiom id clone axiom",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 268,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 271,
          "chinese_text": "添加实例",
          "english_text": "Add instance",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 272,
          "chinese_text": "",
          "english_text": "pub fn add instance mut self instance Instance Result String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 273,
          "chinese_text": "",
          "english_text": "if self instances contains key instance id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 274,
          "chinese_text": "",
          "english_text": "return Err format Instance already exists instance id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 277,
          "chinese_text": "验证概念存在性",
          "english_text": "Verify concept existence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 278,
          "chinese_text": "",
          "english_text": "if self concepts contains key instance concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "return Err format Concept does not exist instance concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "self instances insert instance id clone instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 284,
          "chinese_text": "",
          "english_text": "Ok",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 285,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "验证本体一致性",
          "english_text": "Validate ontology consistency",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "pub fn validate consistency self ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 289,
          "chinese_text": "",
          "english_text": "let mut result ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "is consistent true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 291,
          "chinese_text": "",
          "english_text": "errors Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "warnings Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 293,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 295,
          "chinese_text": "检查概念层次一致性",
          "english_text": "Check concept hierarchy consistency",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "for concept id concept in self concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "for parent id in concept parent concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 298,
          "chinese_text": "",
          "english_text": "if self concepts contains key parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 299,
          "chinese_text": "",
          "english_text": "result is consistent false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "",
          "english_text": "result errors push format Concept has non existent parent concept id parent id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 305,
          "chinese_text": "检查关系一致性",
          "english_text": "Check relation consistency",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "for relation id relation in self relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 307,
          "chinese_text": "",
          "english_text": "if self concepts contains key relation source concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "",
          "english_text": "result is consistent false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "result errors push format Relation has non existent source concept relation id relation source concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 311,
          "chinese_text": "",
          "english_text": "if self concepts contains key relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 312,
          "chinese_text": "",
          "english_text": "result is consistent false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "",
          "english_text": "result errors push format Relation has non existent target concept relation id relation target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 314,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "检查实例一致性",
          "english_text": "Check instance consistency",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 318,
          "chinese_text": "",
          "english_text": "for instance id instance in self instances",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "if self concepts contains key instance concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "result is consistent false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "result errors push format Instance belongs to non existent concept instance id instance concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 325,
          "chinese_text": "",
          "english_text": "result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "本体推理",
          "english_text": "Ontology reasoning",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 329,
          "chinese_text": "",
          "english_text": "pub fn reason self query str Vec ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "let mut results Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "简化的推理实现",
          "english_text": "Simplified reasoning implementation",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 333,
          "chinese_text": "",
          "english_text": "match query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 334,
          "chinese_text": "",
          "english_text": "subclasses",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "查找子类",
          "english_text": "Find subclasses",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 336,
          "chinese_text": "",
          "english_text": "for concept id concept in self concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "if concept child concepts is empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "results push ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 339,
          "chinese_text": "",
          "english_text": "query query to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "concept concept id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "result format Subclasses concept child concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 342,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 344,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 345,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 346,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 347,
          "chinese_text": "",
          "english_text": "instances",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 348,
          "chinese_text": "查找实例",
          "english_text": "Find instances",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 349,
          "chinese_text": "",
          "english_text": "for instance id instance in self instances",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 350,
          "chinese_text": "",
          "english_text": "results push ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 351,
          "chinese_text": "",
          "english_text": "query query to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 352,
          "chinese_text": "",
          "english_text": "concept instance concept clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 353,
          "chinese_text": "",
          "english_text": "result format Instance instance id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 354,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 358,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 359,
          "chinese_text": "通用查询处理",
          "english_text": "General query processing",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 360,
          "chinese_text": "",
          "english_text": "results push ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 361,
          "chinese_text": "",
          "english_text": "query query to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 362,
          "chinese_text": "",
          "english_text": "concept unknown to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "result Query not supported to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 366,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 367,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 369,
          "chinese_text": "",
          "english_text": "results",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 370,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 372,
          "chinese_text": "获取概念层次",
          "english_text": "Get concept hierarchy",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 373,
          "chinese_text": "",
          "english_text": "pub fn get hierarchy self concept id str Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 374,
          "chinese_text": "",
          "english_text": "let mut hierarchy Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 376,
          "chinese_text": "",
          "english_text": "if let Some concept self concepts get concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 377,
          "chinese_text": "添加父概念",
          "english_text": "Add parent concepts",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 378,
          "chinese_text": "",
          "english_text": "for parent id in concept parent concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "hierarchy push parent id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 382,
          "chinese_text": "添加子概念",
          "english_text": "Add child concepts",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "for child id in concept child concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 384,
          "chinese_text": "",
          "english_text": "hierarchy push child id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 385,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 386,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 388,
          "chinese_text": "",
          "english_text": "hierarchy",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 389,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 391,
          "chinese_text": "查找相关概念",
          "english_text": "Find related concepts",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 392,
          "chinese_text": "",
          "english_text": "pub fn find related concepts self concept id str Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "let mut related HashSet new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 395,
          "chinese_text": "通过关系查找相关概念",
          "english_text": "Find related concepts through relations",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 396,
          "chinese_text": "",
          "english_text": "for relation in self relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "",
          "english_text": "if relation source concept concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 398,
          "chinese_text": "",
          "english_text": "related insert relation target concept clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "if relation target concept concept id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "related insert relation source concept clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 402,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 403,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 405,
          "chinese_text": "",
          "english_text": "related into iter collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 407,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "pub struct ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "pub is consistent bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 412,
          "chinese_text": "",
          "english_text": "pub errors Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "",
          "english_text": "pub warnings Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 416,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "pub struct ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 418,
          "chinese_text": "查询内容",
          "english_text": "pub query String Query content",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 419,
          "chinese_text": "相关概念",
          "english_text": "pub concept String Related concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 420,
          "chinese_text": "推理结果",
          "english_text": "pub result String Reasoning result",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 421,
          "chinese_text": "置信度",
          "english_text": "pub confidence f Confidence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 422,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 424,
          "chinese_text": "",
          "english_text": "impl fmt Display for Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 425,
          "chinese_text": "",
          "english_text": "fn fmt self f mut fmt Formatter fmt Result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 426,
          "chinese_text": "",
          "english_text": "write f Concept id name description",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 427,
          "chinese_text": "",
          "english_text": "self id self name self description",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 429,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "impl fmt Display for Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 432,
          "chinese_text": "",
          "english_text": "fn fmt self f mut fmt Formatter fmt Result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "",
          "english_text": "write f Relation id name source target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "self id self name self source concept self target concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 436,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 437,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 439,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 440,
          "chinese_text": "实现示例",
          "english_text": "Haskell Ontology Construction Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 441,
          "chinese_text": "本体构建算法 实现本体的创建 管理和推理功能",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 442,
          "chinese_text": "",
          "english_text": "module OntologyEngineering where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 444,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 446,
          "chinese_text": "",
          "english_text": "import Data Set Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 447,
          "chinese_text": "",
          "english_text": "import qualified Data Set as Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 449,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 451,
          "chinese_text": "概念数据结构",
          "english_text": "Concept data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 452,
          "chinese_text": "",
          "english_text": "data Concept Concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 453,
          "chinese_text": "概念标识",
          "english_text": "conceptId Text Concept identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 454,
          "chinese_text": "概念名称",
          "english_text": "conceptName Text Concept name",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 455,
          "chinese_text": "概念描述",
          "english_text": "conceptDescription Text Concept description",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 456,
          "chinese_text": "父概念",
          "english_text": "conceptParentConcepts Set Text Parent concepts",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 457,
          "chinese_text": "子概念",
          "english_text": "conceptChildConcepts Set Text Child concepts",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 458,
          "chinese_text": "概念属性",
          "english_text": "conceptProperties Map Text Text Concept properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 459,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "关系数据结构",
          "english_text": "Relation data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 462,
          "chinese_text": "",
          "english_text": "data Relation Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 463,
          "chinese_text": "关系标识",
          "english_text": "relationId Text Relation identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 464,
          "chinese_text": "关系名称",
          "english_text": "relationName Text Relation name",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 465,
          "chinese_text": "源概念",
          "english_text": "relationSourceConcept Text Source concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 466,
          "chinese_text": "目标概念",
          "english_text": "relationTargetConcept Text Target concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 467,
          "chinese_text": "关系类型",
          "english_text": "relationType RelationType Relation type",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 468,
          "chinese_text": "关系属性",
          "english_text": "relationProperties Map Text Text Relation properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 469,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "关系类型枚举",
          "english_text": "Relation type enumeration",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 472,
          "chinese_text": "",
          "english_text": "data RelationType IsA PartOf InstanceOf HasProperty Custom Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 475,
          "chinese_text": "公理数据结构",
          "english_text": "Axiom data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 476,
          "chinese_text": "",
          "english_text": "data Axiom Axiom",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 477,
          "chinese_text": "公理标识",
          "english_text": "axiomId Text Axiom identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 478,
          "chinese_text": "相关概念",
          "english_text": "axiomConcept Text Related concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 479,
          "chinese_text": "约束条件",
          "english_text": "axiomConstraint Text Constraint condition",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 480,
          "chinese_text": "公理类型",
          "english_text": "axiomType AxiomType Axiom type",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 481,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 483,
          "chinese_text": "公理类型枚举",
          "english_text": "Axiom type enumeration",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 484,
          "chinese_text": "",
          "english_text": "data AxiomType Logical Semantic Structural",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 485,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 487,
          "chinese_text": "实例数据结构",
          "english_text": "Instance data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 488,
          "chinese_text": "",
          "english_text": "data Instance Instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 489,
          "chinese_text": "实例标识",
          "english_text": "instanceId Text Instance identifier",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 490,
          "chinese_text": "所属概念",
          "english_text": "instanceConcept Text Belonging concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 491,
          "chinese_text": "实例属性",
          "english_text": "instanceProperties Map Text Text Instance properties",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 492,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 494,
          "chinese_text": "本体数据结构",
          "english_text": "Ontology data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 495,
          "chinese_text": "",
          "english_text": "data Ontology Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 496,
          "chinese_text": "概念集合",
          "english_text": "ontologyConcepts Map Text Concept Concept set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 497,
          "chinese_text": "关系集合",
          "english_text": "ontologyRelations Map Text Relation Relation set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 498,
          "chinese_text": "公理集合",
          "english_text": "ontologyAxioms Map Text Axiom Axiom set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 499,
          "chinese_text": "实例集合",
          "english_text": "ontologyInstances Map Text Instance Instance set",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 500,
          "chinese_text": "层次结构",
          "english_text": "ontologyHierarchy Map Text Text Hierarchy",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 501,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 503,
          "chinese_text": "空本体",
          "english_text": "Empty ontology",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 504,
          "chinese_text": "",
          "english_text": "emptyOntology Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 505,
          "chinese_text": "",
          "english_text": "emptyOntology Ontology Map empty Map empty Map empty Map empty Map empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 507,
          "chinese_text": "添加概念",
          "english_text": "Add concept",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 508,
          "chinese_text": "",
          "english_text": "addConcept Concept Ontology Either Text Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 509,
          "chinese_text": "",
          "english_text": "addConcept concept ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 510,
          "chinese_text": "",
          "english_text": "if Map member conceptId concept ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 511,
          "chinese_text": "",
          "english_text": "then Left T concat Concept conceptId concept already exists",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 512,
          "chinese_text": "",
          "english_text": "else let newConcepts Map insert conceptId concept concept ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 513,
          "chinese_text": "",
          "english_text": "newHierarchy updateHierarchy concept ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 514,
          "chinese_text": "",
          "english_text": "in Right ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 515,
          "chinese_text": "",
          "english_text": "ontologyConcepts newConcepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 516,
          "chinese_text": "",
          "english_text": "ontologyHierarchy newHierarchy",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 517,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 519,
          "chinese_text": "更新层次结构",
          "english_text": "Update hierarchy",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 520,
          "chinese_text": "",
          "english_text": "updateHierarchy Concept Ontology Map Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 521,
          "chinese_text": "",
          "english_text": "updateHierarchy concept ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 522,
          "chinese_text": "",
          "english_text": "let hierarchy ontologyHierarchy ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 523,
          "chinese_text": "",
          "english_text": "parentUpdates foldr parentId acc",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 524,
          "chinese_text": "",
          "english_text": "Map insertWith parentId conceptId concept acc hierarchy conceptParentConcepts concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 525,
          "chinese_text": "",
          "english_text": "in parentUpdates",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 527,
          "chinese_text": "添加关系",
          "english_text": "Add relation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 528,
          "chinese_text": "",
          "english_text": "addRelation Relation Ontology Either Text Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 529,
          "chinese_text": "",
          "english_text": "addRelation relation ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 530,
          "chinese_text": "",
          "english_text": "let concepts ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 531,
          "chinese_text": "",
          "english_text": "in if not Map member relationSourceConcept relation concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 532,
          "chinese_text": "",
          "english_text": "then Left T concat Source concept relationSourceConcept relation does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 533,
          "chinese_text": "",
          "english_text": "else if not Map member relationTargetConcept relation concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 534,
          "chinese_text": "",
          "english_text": "then Left T concat Target concept relationTargetConcept relation does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 535,
          "chinese_text": "",
          "english_text": "else Right ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 536,
          "chinese_text": "",
          "english_text": "ontologyRelations Map insert relationId relation relation ontologyRelations ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 537,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 539,
          "chinese_text": "添加公理",
          "english_text": "Add axiom",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 540,
          "chinese_text": "",
          "english_text": "addAxiom Axiom Ontology Either Text Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 541,
          "chinese_text": "",
          "english_text": "addAxiom axiom ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 542,
          "chinese_text": "",
          "english_text": "let concepts ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 543,
          "chinese_text": "",
          "english_text": "in if not Map member axiomConcept axiom concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 544,
          "chinese_text": "",
          "english_text": "then Left T concat Concept axiomConcept axiom does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 545,
          "chinese_text": "",
          "english_text": "else Right ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 546,
          "chinese_text": "",
          "english_text": "ontologyAxioms Map insert axiomId axiom axiom ontologyAxioms ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 547,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 549,
          "chinese_text": "添加实例",
          "english_text": "Add instance",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 550,
          "chinese_text": "",
          "english_text": "addInstance Instance Ontology Either Text Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 551,
          "chinese_text": "",
          "english_text": "addInstance instance ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 552,
          "chinese_text": "",
          "english_text": "let concepts ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 553,
          "chinese_text": "",
          "english_text": "in if not Map member instanceConcept instance concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 554,
          "chinese_text": "",
          "english_text": "then Left T concat Concept instanceConcept instance does not exist",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 555,
          "chinese_text": "",
          "english_text": "else Right ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 556,
          "chinese_text": "",
          "english_text": "ontologyInstances Map insert instanceId instance instance ontologyInstances ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 557,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 559,
          "chinese_text": "验证本体一致性",
          "english_text": "Validate ontology consistency",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 560,
          "chinese_text": "",
          "english_text": "validateConsistency Ontology ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 561,
          "chinese_text": "",
          "english_text": "validateConsistency ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 562,
          "chinese_text": "",
          "english_text": "let conceptErrors validateConceptConsistency ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 563,
          "chinese_text": "",
          "english_text": "relationErrors validateRelationConsistency ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 564,
          "chinese_text": "",
          "english_text": "instanceErrors validateInstanceConsistency ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 565,
          "chinese_text": "",
          "english_text": "allErrors conceptErrors relationErrors instanceErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 566,
          "chinese_text": "",
          "english_text": "in ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 567,
          "chinese_text": "",
          "english_text": "consistencyIsConsistent null allErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 568,
          "chinese_text": "",
          "english_text": "consistencyErrors allErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 569,
          "chinese_text": "",
          "english_text": "consistencyWarnings",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 570,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 572,
          "chinese_text": "验证概念一致性",
          "english_text": "Validate concept consistency",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 573,
          "chinese_text": "",
          "english_text": "validateConceptConsistency Ontology Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 574,
          "chinese_text": "",
          "english_text": "validateConceptConsistency ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 575,
          "chinese_text": "",
          "english_text": "let concepts ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 576,
          "chinese_text": "",
          "english_text": "conceptChecks concatMap concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 577,
          "chinese_text": "",
          "english_text": "let parentChecks map parentId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 578,
          "chinese_text": "",
          "english_text": "if not Map member parentId concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 579,
          "chinese_text": "",
          "english_text": "then Just T concat Concept conceptId concept has non existent parent parentId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 580,
          "chinese_text": "",
          "english_text": "else Nothing Set toList conceptParentConcepts concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 581,
          "chinese_text": "",
          "english_text": "in catMaybes parentChecks Map elems concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 582,
          "chinese_text": "",
          "english_text": "in conceptChecks",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 584,
          "chinese_text": "验证关系一致性",
          "english_text": "Validate relation consistency",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 585,
          "chinese_text": "",
          "english_text": "validateRelationConsistency Ontology Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 586,
          "chinese_text": "",
          "english_text": "validateRelationConsistency ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 587,
          "chinese_text": "",
          "english_text": "let concepts ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 588,
          "chinese_text": "",
          "english_text": "relations ontologyRelations ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 589,
          "chinese_text": "",
          "english_text": "relationChecks concatMap relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 590,
          "chinese_text": "",
          "english_text": "let sourceCheck if not Map member relationSourceConcept relation concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 591,
          "chinese_text": "",
          "english_text": "then Just T concat Relation relationId relation has non existent source concept relationSourceConcept relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 592,
          "chinese_text": "",
          "english_text": "else Nothing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 593,
          "chinese_text": "",
          "english_text": "targetCheck if not Map member relationTargetConcept relation concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 594,
          "chinese_text": "",
          "english_text": "then Just T concat Relation relationId relation has non existent target concept relationTargetConcept relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 595,
          "chinese_text": "",
          "english_text": "else Nothing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 596,
          "chinese_text": "",
          "english_text": "in catMaybes sourceCheck targetCheck Map elems relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 597,
          "chinese_text": "",
          "english_text": "in relationChecks",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 599,
          "chinese_text": "验证实例一致性",
          "english_text": "Validate instance consistency",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 600,
          "chinese_text": "",
          "english_text": "validateInstanceConsistency Ontology Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 601,
          "chinese_text": "",
          "english_text": "validateInstanceConsistency ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 602,
          "chinese_text": "",
          "english_text": "let concepts ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 603,
          "chinese_text": "",
          "english_text": "instances ontologyInstances ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 604,
          "chinese_text": "",
          "english_text": "instanceChecks concatMap instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 605,
          "chinese_text": "",
          "english_text": "if not Map member instanceConcept instance concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 606,
          "chinese_text": "",
          "english_text": "then T concat Instance instanceId instance belongs to non existent concept instanceConcept instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 607,
          "chinese_text": "",
          "english_text": "else Map elems instances",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 608,
          "chinese_text": "",
          "english_text": "in instanceChecks",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 610,
          "chinese_text": "本体推理",
          "english_text": "Ontology reasoning",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 611,
          "chinese_text": "",
          "english_text": "reason Text Ontology ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 612,
          "chinese_text": "",
          "english_text": "reason query ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 613,
          "chinese_text": "",
          "english_text": "case query of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 614,
          "chinese_text": "",
          "english_text": "subclasses findSubclasses ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 615,
          "chinese_text": "",
          "english_text": "instances findInstances ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 616,
          "chinese_text": "",
          "english_text": "ReasoningResult query unknown Query not supported",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 618,
          "chinese_text": "查找子类",
          "english_text": "Find subclasses",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 619,
          "chinese_text": "",
          "english_text": "findSubclasses Ontology ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 620,
          "chinese_text": "",
          "english_text": "findSubclasses ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 621,
          "chinese_text": "",
          "english_text": "let concepts ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 622,
          "chinese_text": "",
          "english_text": "subclasses concatMap concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 623,
          "chinese_text": "",
          "english_text": "if not Set null conceptChildConcepts concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 624,
          "chinese_text": "",
          "english_text": "then ReasoningResult subclasses conceptId concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 625,
          "chinese_text": "",
          "english_text": "T pack show Set toList conceptChildConcepts concept",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 626,
          "chinese_text": "",
          "english_text": "else Map elems concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 627,
          "chinese_text": "",
          "english_text": "in subclasses",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 629,
          "chinese_text": "查找实例",
          "english_text": "Find instances",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 630,
          "chinese_text": "",
          "english_text": "findInstances Ontology ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 631,
          "chinese_text": "",
          "english_text": "findInstances ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 632,
          "chinese_text": "",
          "english_text": "let instances ontologyInstances ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 633,
          "chinese_text": "",
          "english_text": "instanceResults map instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 634,
          "chinese_text": "",
          "english_text": "ReasoningResult instances instanceConcept instance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 635,
          "chinese_text": "",
          "english_text": "T concat Instance instanceId instance Map elems instances",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 636,
          "chinese_text": "",
          "english_text": "in instanceResults",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 638,
          "chinese_text": "获取概念层次",
          "english_text": "Get concept hierarchy",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 639,
          "chinese_text": "",
          "english_text": "getHierarchy Text Ontology Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 640,
          "chinese_text": "",
          "english_text": "getHierarchy conceptId ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 641,
          "chinese_text": "",
          "english_text": "let concepts ontologyConcepts ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 642,
          "chinese_text": "",
          "english_text": "concept Map lookup conceptId concepts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 643,
          "chinese_text": "",
          "english_text": "in case concept of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 644,
          "chinese_text": "",
          "english_text": "Just c Set toList conceptParentConcepts c Set toList conceptChildConcepts c",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 645,
          "chinese_text": "",
          "english_text": "Nothing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 647,
          "chinese_text": "查找相关概念",
          "english_text": "Find related concepts",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 648,
          "chinese_text": "",
          "english_text": "findRelatedConcepts Text Ontology Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 649,
          "chinese_text": "",
          "english_text": "findRelatedConcepts conceptId ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 650,
          "chinese_text": "",
          "english_text": "let relations ontologyRelations ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 651,
          "chinese_text": "",
          "english_text": "related Set fromList concatMap relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 652,
          "chinese_text": "",
          "english_text": "if relationSourceConcept relation conceptId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 653,
          "chinese_text": "",
          "english_text": "then relationTargetConcept relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 654,
          "chinese_text": "",
          "english_text": "else if relationTargetConcept relation conceptId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 655,
          "chinese_text": "",
          "english_text": "then relationSourceConcept relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 656,
          "chinese_text": "",
          "english_text": "else Map elems relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 657,
          "chinese_text": "",
          "english_text": "in Set toList related",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 659,
          "chinese_text": "一致性结果数据结构",
          "english_text": "Consistency result data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 660,
          "chinese_text": "",
          "english_text": "data ConsistencyResult ConsistencyResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 661,
          "chinese_text": "是否一致",
          "english_text": "consistencyIsConsistent Bool Is consistent",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 662,
          "chinese_text": "错误列表",
          "english_text": "consistencyErrors Text Error list",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 663,
          "chinese_text": "警告列表",
          "english_text": "consistencyWarnings Text Warning list",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 664,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 666,
          "chinese_text": "推理结果数据结构",
          "english_text": "Reasoning result data structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 667,
          "chinese_text": "",
          "english_text": "data ReasoningResult ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 668,
          "chinese_text": "查询内容",
          "english_text": "reasoningQuery Text Query content",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 669,
          "chinese_text": "相关概念",
          "english_text": "reasoningConcept Text Related concept",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 670,
          "chinese_text": "推理结果",
          "english_text": "reasoningResult Text Reasoning result",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 671,
          "chinese_text": "置信度",
          "english_text": "reasoningConfidence Double Confidence",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 672,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 674,
          "chinese_text": "辅助函数 过滤 值",
          "english_text": "Maybe Helper function filter Maybe values",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 675,
          "chinese_text": "",
          "english_text": "catMaybes Maybe a a",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 676,
          "chinese_text": "",
          "english_text": "catMaybes foldr maybeVal acc case maybeVal of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 677,
          "chinese_text": "",
          "english_text": "Just val val acc",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 678,
          "chinese_text": "",
          "english_text": "Nothing acc",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 679,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 681,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 683,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 684,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 685,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 686,
          "chinese_text": "",
          "english_text": "pub struct OntologyGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 687,
          "chinese_text": "",
          "english_text": "pub ontology Ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 688,
          "chinese_text": "",
          "english_text": "pub reasoning engine ReasoningEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 689,
          "chinese_text": "",
          "english_text": "pub validation engine ValidationEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 690,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 692,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 693,
          "chinese_text": "",
          "english_text": "pub struct ReasoningEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 694,
          "chinese_text": "",
          "english_text": "pub rules HashMap String ReasoningRule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 695,
          "chinese_text": "",
          "english_text": "pub inference cache HashMap String Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 696,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 698,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 699,
          "chinese_text": "",
          "english_text": "pub struct ReasoningRule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 700,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 701,
          "chinese_text": "",
          "english_text": "pub condition String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 702,
          "chinese_text": "",
          "english_text": "pub conclusion String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 703,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 704,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 706,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 707,
          "chinese_text": "",
          "english_text": "pub struct ValidationEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 708,
          "chinese_text": "",
          "english_text": "pub validators HashMap String Box dyn Validator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 709,
          "chinese_text": "",
          "english_text": "pub validation results HashMap String ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 710,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 712,
          "chinese_text": "",
          "english_text": "impl OntologyGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 713,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 714,
          "chinese_text": "",
          "english_text": "OntologyGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 715,
          "chinese_text": "",
          "english_text": "ontology Ontology new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 716,
          "chinese_text": "",
          "english_text": "reasoning engine ReasoningEngine new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 717,
          "chinese_text": "",
          "english_text": "validation engine ValidationEngine new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 718,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 719,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 721,
          "chinese_text": "执行推理",
          "english_text": "Execute reasoning",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 722,
          "chinese_text": "",
          "english_text": "pub fn reason self query str Vec ReasoningResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 723,
          "chinese_text": "",
          "english_text": "self reasoning engine execute reasoning self ontology query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 724,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 726,
          "chinese_text": "验证本体",
          "english_text": "Validate ontology",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 727,
          "chinese_text": "",
          "english_text": "pub fn validate self ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 728,
          "chinese_text": "",
          "english_text": "self validation engine validate ontology self ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 729,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 731,
          "chinese_text": "获取本体统计",
          "english_text": "Get ontology statistics",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 732,
          "chinese_text": "",
          "english_text": "pub fn get statistics self OntologyStatistics",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 733,
          "chinese_text": "",
          "english_text": "let concept count self ontology concepts len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 734,
          "chinese_text": "",
          "english_text": "let relation count self ontology relations len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 735,
          "chinese_text": "",
          "english_text": "let axiom count self ontology axioms len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 736,
          "chinese_text": "",
          "english_text": "let instance count self ontology instances len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 738,
          "chinese_text": "",
          "english_text": "OntologyStatistics",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 739,
          "chinese_text": "",
          "english_text": "concept count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 740,
          "chinese_text": "",
          "english_text": "relation count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 741,
          "chinese_text": "",
          "english_text": "axiom count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 742,
          "chinese_text": "",
          "english_text": "instance count",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 743,
          "chinese_text": "",
          "english_text": "consistency score self calculate consistency score",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 744,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 745,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 747,
          "chinese_text": "计算一致性分数",
          "english_text": "Calculate consistency score",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 748,
          "chinese_text": "",
          "english_text": "fn calculate consistency score self f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 749,
          "chinese_text": "",
          "english_text": "let validation result self validate",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 750,
          "chinese_text": "",
          "english_text": "if validation result is consistent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 751,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 752,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 753,
          "chinese_text": "",
          "english_text": "validation result errors len as f min",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 754,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 755,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 756,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 758,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 759,
          "chinese_text": "",
          "english_text": "pub struct OntologyStatistics",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 760,
          "chinese_text": "",
          "english_text": "pub concept count usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 761,
          "chinese_text": "",
          "english_text": "pub relation count usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 762,
          "chinese_text": "",
          "english_text": "pub axiom count usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 763,
          "chinese_text": "",
          "english_text": "pub instance count usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 764,
          "chinese_text": "",
          "english_text": "pub consistency score f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 765,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 767,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 768,
          "chinese_text": "",
          "english_text": "pub struct ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 769,
          "chinese_text": "",
          "english_text": "pub is consistent bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 770,
          "chinese_text": "",
          "english_text": "pub errors Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 771,
          "chinese_text": "",
          "english_text": "pub warnings Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 772,
          "chinese_text": "",
          "english_text": "pub score f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 773,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 774,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 776,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 778,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 779,
          "chinese_text": "概念添加",
          "english_text": "Concept Addition O",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 780,
          "chinese_text": "关系添加",
          "english_text": "Relation Addition O",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 781,
          "chinese_text": "本体验证",
          "english_text": "Ontology Validation O n e",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 782,
          "chinese_text": "推理执行",
          "english_text": "Reasoning Execution O r n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 784,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 785,
          "chinese_text": "本体存储",
          "english_text": "Ontology Storage O n e a i",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 786,
          "chinese_text": "推理缓存",
          "english_text": "Reasoning Cache O r n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 787,
          "chinese_text": "验证结果",
          "english_text": "Validation Results O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 789,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 791,
          "chinese_text": "案例 生物医学本体构建",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 793,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 794,
          "chinese_text": "构建生物医学领域的本体模型 支持疾病诊断和药物发现",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 796,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 797,
          "chinese_text": "定义生物医学概念体系",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 798,
          "chinese_text": "建立疾病 症状关系",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 799,
          "chinese_text": "构建药物 靶点映射",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 800,
          "chinese_text": "实现推理规则引擎",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 802,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 803,
          "chinese_text": "概念覆盖率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 804,
          "chinese_text": "关系准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 805,
          "chinese_text": "推理准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 806,
          "chinese_text": "查询响应时间",
          "english_text": "ms",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 808,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 810,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 812,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 813,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 814,
          "chinese_text": "生物医学 疾病本体和药物本体构建",
          "english_text": "Biomedical Disease ontology and drug ontology construction",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 815,
          "chinese_text": "企业知识管理 企业知识本体建模",
          "english_text": "Enterprise Knowledge Management Enterprise knowledge ontology modeling",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 816,
          "chinese_text": "语义 资源的本体表示",
          "english_text": "Web Semantic Web Web Ontological representation of Web resources",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 817,
          "chinese_text": "智能问答 基于本体的问答系统",
          "english_text": "Intelligent Q A Ontology based question answering systems",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 819,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 821,
          "chinese_text": "案例 项目",
          "english_text": "Case Gene Ontology",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 822,
          "chinese_text": "项目名称",
          "english_text": "Project Name Gene Ontology Project",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 823,
          "chinese_text": "应用场景 基因功能注释",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 824,
          "chinese_text": "技术实现 层次化本体结构",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 825,
          "chinese_text": "效果评估 成为生物信息学标准",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 827,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 829,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 831,
          "chinese_text": "研究方向 动态本体工程",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 832,
          "chinese_text": "研究内容 支持本体模型的动态演化",
          "english_text": "Research Content",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 833,
          "chinese_text": "技术突破 实现了版本管理和一致性保持",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 834,
          "chinese_text": "应用前景 在动态环境中广泛应用",
          "english_text": "Application Prospects",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 836,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 838,
          "chinese_text": "趋势 自动化本体构建",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 839,
          "chinese_text": "中文 本体工程正在向自动化方向发展 减少人工干预",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 840,
          "chinese_text": "",
          "english_text": "English Ontology engineering is moving towards automation reducing manual intervention",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 842,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 844,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 846,
          "chinese_text": "要点 本体工程为知识图谱提供结构化的语义基础",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 847,
          "chinese_text": "要点 本体模型支持知识的共享 重用和推理",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 848,
          "chinese_text": "要点 本体工程正在向自动化和动态化方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 850,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 852,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 853,
          "chinese_text": "短期目标 提升本体构建的自动化程度",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 854,
          "chinese_text": "中期目标 实现动态本体演化",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 855,
          "chinese_text": "长期目标 构建通用本体工程平台",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 857,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 859,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 861,
          "chinese_text": "",
          "english_text": "Gruber T R A translation approach to portable ontology specifications Knowledge acquisition",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 862,
          "chinese_text": "",
          "english_text": "Noy N F McGuinness D L Ontology development A guide to creating your first ontology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 863,
          "chinese_text": "",
          "english_text": "Staab S Studer R Eds Handbook on ontologies Springer Science Business Media",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 865,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 867,
          "chinese_text": "",
          "english_text": "OWL Documentation https www w org OWL Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 868,
          "chinese_text": "",
          "english_text": "RDF Schema https www w org TR rdf schema Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 869,
          "chinese_text": "",
          "english_text": "Prot g Documentation https protege stanford edu Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 871,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 873,
          "chinese_text": "",
          "english_text": "Gene Ontology http geneontology org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 874,
          "chinese_text": "",
          "english_text": "Ontology Design Patterns http ontologydesignpatterns org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 875,
          "chinese_text": "",
          "english_text": "Semantic Web Standards https www w org standards semanticweb Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 877,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 879,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 881,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 882,
          "chinese_text": "图论基础",
          "english_text": "graph theory README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 883,
          "chinese_text": "语义分析",
          "english_text": "semantic analysis README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 885,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 887,
          "chinese_text": "",
          "english_text": "OWL https www w org OWL",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 888,
          "chinese_text": "",
          "english_text": "RDF https www w org RDF",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 889,
          "chinese_text": "",
          "english_text": "Prot g https protege stanford edu",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 891,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 893,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 894,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 895,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\05-knowledge-extraction\\README.md",
      "total_lines": 427,
      "bilingual_lines": 147,
      "bilingual_ratio": 0.3442622950819672,
      "section_bilingual_ratio": 0.8222222222222222,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.12546125461254612,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "知识抽取",
          "english_text": "Knowledge Extraction",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "知识抽取是知识图谱构建中的核心技术 旨在从非结构化或半结构化的文本数据中自动识别和提取实体 关系和事件等结构化知识 它通过自然语言处理 机器学习和深度学习等技术 将文本中的隐含知识转换为可计算的结构化表示",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Knowledge extraction is a core technology in knowledge graph construction aiming to automatically identify and extract structured knowledge such as entities relationships and events from unstructured or semi structured text data It uses natural language processing machine learning and deep learning technologies to convert implicit knowledge in text into computable structured representations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 规则基础时期 基于语言学规则的知识抽取",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 统计学习时期 基于机器学习的知识抽取",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 深度学习时期 至今 基于神经网络的知识抽取",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "自动化 自动从文本中抽取结构化知识",
          "english_text": "Automation Automatically extract structured knowledge from text",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "准确性 高精度的实体和关系识别",
          "english_text": "Accuracy High precision entity and relationship recognition",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "可扩展性 支持大规模文本处理",
          "english_text": "Scalability Support large scale text processing",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "多语言性 支持多种语言的知识抽取",
          "english_text": "Multilingual Support knowledge extraction in multiple languages",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "KE T E R F A",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "文本集合",
          "english_text": "T Text Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "实体集合",
          "english_text": "E Entity Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "关系集合",
          "english_text": "R Relation Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "抽取函数",
          "english_text": "F Extraction Function",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 48,
          "chinese_text": "评估指标",
          "english_text": "A Assessment Metrics",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 51,
          "chinese_text": "知识抽取系统 是一个五元组 其中文本集合 包含输入的非结构化文本 实体集合 和关系集合 分别包含抽取出的实体和关系 抽取函数 将文本映射到结构化知识 评估指标 用于衡量抽取质量",
          "english_text": "KE T ER F A",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 53,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "定理 知识抽取完备性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 56,
          "chinese_text": "如果文本 包含实体 和关系 且抽取函数 是完备的 则 能够识别出 和",
          "english_text": "Ter F F T er",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 58,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 60,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 61,
          "chinese_text": "设文本 包含实体 和关系",
          "english_text": "Ter",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 62,
          "chinese_text": "如果抽取函数 是完备的 则对于任意实体 和关系",
          "english_text": "F e r",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 63,
          "chinese_text": "如果 且 则 能够识别出 和",
          "english_text": "e Tr T F T e r",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "因此 能够识别出 和",
          "english_text": "F T er",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 65,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 67,
          "chinese_text": "定理 知识抽取一致性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 68,
          "chinese_text": "如果抽取函数 是一致的 则对于相同的文本 多次抽取的结果应该相同",
          "english_text": "F T",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 70,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 72,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 73,
          "chinese_text": "设抽取函数 是一致的",
          "english_text": "F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 74,
          "chinese_text": "对于文本 如果 且",
          "english_text": "T F T K F T K",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 75,
          "chinese_text": "根据一致性定义 如果 是确定的 则",
          "english_text": "F K K",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 76,
          "chinese_text": "因此 多次抽取的结果应该相同",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 77,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 79,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 81,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 83,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 84,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 85,
          "chinese_text": "文本预处理 实体识别",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 86,
          "chinese_text": "关系抽取",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 87,
          "chinese_text": "事件抽取",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 88,
          "chinese_text": "知识融合",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 89,
          "chinese_text": "质量评估",
          "english_text": "E F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "知识图谱",
          "english_text": "F G",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 92,
          "chinese_text": "分词",
          "english_text": "A A",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 93,
          "chinese_text": "词性标注",
          "english_text": "A A",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "句法分析",
          "english_text": "A A",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 96,
          "chinese_text": "命名实体识别",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 97,
          "chinese_text": "实体链接",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "实体消歧",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 100,
          "chinese_text": "关系分类",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 101,
          "chinese_text": "关系抽取",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 102,
          "chinese_text": "关系验证",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 104,
          "chinese_text": "事件检测",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 105,
          "chinese_text": "事件分类",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 106,
          "chinese_text": "事件参数抽取",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 107,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 109,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 111,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 113,
          "chinese_text": "优势 自动化程度高",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 115,
          "chinese_text": "中文 知识抽取技术能够自动从大量文本中提取结构化知识 大大提高了知识图谱构建的效率",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 116,
          "chinese_text": "",
          "english_text": "English Knowledge extraction technology can automatically extract structured knowledge from large amounts of text greatly improving the efficiency of knowledge graph construction",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 118,
          "chinese_text": "优势 可扩展性强",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 120,
          "chinese_text": "中文 现代知识抽取方法能够处理大规模文本数据 支持多领域和多语言的知识抽取",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 121,
          "chinese_text": "",
          "english_text": "English Modern knowledge extraction methods can handle large scale text data supporting knowledge extraction across multiple domains and languages",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 123,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 125,
          "chinese_text": "局限性 准确性挑战",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 127,
          "chinese_text": "中文 知识抽取的准确性仍然面临挑战 特别是在处理复杂语义和歧义情况时",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 128,
          "chinese_text": "",
          "english_text": "English The accuracy of knowledge extraction still faces challenges especially when dealing with complex semantics and ambiguous situations",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 130,
          "chinese_text": "局限性 领域适应性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 132,
          "chinese_text": "中文 知识抽取模型在特定领域训练后 在其他领域的泛化能力有限",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 133,
          "chinese_text": "",
          "english_text": "English Knowledge extraction models trained on specific domains have limited generalization ability to other domains",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 135,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "争议点 监督学习 无监督学习",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 139,
          "chinese_text": "支持观点 监督学习方法具有更高的准确性 但需要大量标注数据",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 140,
          "chinese_text": "反对观点 无监督学习方法能够处理未标注数据 但准确性较低",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 141,
          "chinese_text": "中立分析 半监督学习方法结合了两种方法的优势 可能是最佳解决方案",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 143,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 145,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 147,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 149,
          "chinese_text": "实体识别算法",
          "english_text": "Entity Recognition Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 151,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "实现示例",
          "english_text": "Rust",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 153,
          "chinese_text": "",
          "english_text": "use std collections HashMap",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 154,
          "chinese_text": "",
          "english_text": "use regex Regex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 156,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 157,
          "chinese_text": "",
          "english_text": "pub struct Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 158,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 159,
          "chinese_text": "",
          "english_text": "pub text String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "pub entity type EntityType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 161,
          "chinese_text": "",
          "english_text": "pub start pos usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 162,
          "chinese_text": "",
          "english_text": "pub end pos usize",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 163,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 164,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 166,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "pub enum EntityType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 168,
          "chinese_text": "",
          "english_text": "Person",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 169,
          "chinese_text": "",
          "english_text": "Organization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 170,
          "chinese_text": "",
          "english_text": "Location",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "",
          "english_text": "Date",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 172,
          "chinese_text": "",
          "english_text": "Number",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 173,
          "chinese_text": "",
          "english_text": "Other",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 174,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 176,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 177,
          "chinese_text": "",
          "english_text": "pub struct Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "pub source entity String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 180,
          "chinese_text": "",
          "english_text": "pub target entity String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "pub relation type String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 182,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 183,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 185,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 186,
          "chinese_text": "",
          "english_text": "pub struct KnowledgeExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 187,
          "chinese_text": "",
          "english_text": "pub entity patterns HashMap EntityType Vec Regex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "pub relation patterns Vec Regex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 189,
          "chinese_text": "",
          "english_text": "pub entity dictionary HashMap String EntityType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 190,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 192,
          "chinese_text": "",
          "english_text": "impl KnowledgeExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 193,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "let mut extractor KnowledgeExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "entity patterns HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 196,
          "chinese_text": "",
          "english_text": "relation patterns Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 197,
          "chinese_text": "",
          "english_text": "entity dictionary HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 200,
          "chinese_text": "初始化实体模式",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "extractor init entity patterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "extractor init relation patterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "",
          "english_text": "extractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 207,
          "chinese_text": "",
          "english_text": "fn init entity patterns mut self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "人名模式",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "let person pattern Regex new r b A Z a z A Z a z b unwrap",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 210,
          "chinese_text": "",
          "english_text": "self entity patterns insert EntityType Person vec person pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "组织名模式",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 213,
          "chinese_text": "",
          "english_text": "let org pattern Regex new r b A Z a z Corp Inc Ltd Company b unwrap",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "",
          "english_text": "self entity patterns insert EntityType Organization vec org pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 216,
          "chinese_text": "地名模式",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "",
          "english_text": "let location pattern Regex new r b A Z a z A Z b unwrap",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 218,
          "chinese_text": "",
          "english_text": "self entity patterns insert EntityType Location vec location pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "",
          "english_text": "fn init relation patterns mut self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "工作关系模式",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 223,
          "chinese_text": "",
          "english_text": "let work pattern Regex new r w works at w unwrap",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 224,
          "chinese_text": "",
          "english_text": "self relation patterns push work pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 226,
          "chinese_text": "位于关系模式",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 227,
          "chinese_text": "",
          "english_text": "let located pattern Regex new r w is located in w unwrap",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 228,
          "chinese_text": "",
          "english_text": "self relation patterns push located pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 229,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "pub fn extract entities self text str Vec Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 232,
          "chinese_text": "",
          "english_text": "let mut entities Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "for entity type patterns in self entity patterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 235,
          "chinese_text": "",
          "english_text": "for pattern in patterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 236,
          "chinese_text": "",
          "english_text": "for mat in pattern find iter text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 237,
          "chinese_text": "",
          "english_text": "let entity Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "",
          "english_text": "id format entity entities len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "text mat as str to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "entity type entity type clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 241,
          "chinese_text": "",
          "english_text": "start pos mat start",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 242,
          "chinese_text": "",
          "english_text": "end pos mat end",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 243,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 244,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 245,
          "chinese_text": "",
          "english_text": "entities push entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 246,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 250,
          "chinese_text": "",
          "english_text": "entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 251,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 253,
          "chinese_text": "",
          "english_text": "pub fn extract relations self text str entities Entity Vec Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "",
          "english_text": "let mut relations Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 256,
          "chinese_text": "",
          "english_text": "for pattern in self relation patterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "for cap in pattern captures iter text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "if cap len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 259,
          "chinese_text": "",
          "english_text": "let relation Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "",
          "english_text": "id format relation relations len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 261,
          "chinese_text": "",
          "english_text": "source entity cap to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 262,
          "chinese_text": "",
          "english_text": "target entity cap to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 263,
          "chinese_text": "",
          "english_text": "relation type related to to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 265,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "",
          "english_text": "relations push relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 267,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 268,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 271,
          "chinese_text": "",
          "english_text": "relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 272,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 273,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 274,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 276,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 277,
          "chinese_text": "实现示例",
          "english_text": "Haskell",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 278,
          "chinese_text": "",
          "english_text": "module KnowledgeExtraction where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 281,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 283,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 284,
          "chinese_text": "",
          "english_text": "import Text Regex TDFA",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 286,
          "chinese_text": "",
          "english_text": "data EntityType Person Organization Location Date Number Other",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "",
          "english_text": "deriving Show Eq Ord",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 289,
          "chinese_text": "",
          "english_text": "data Entity Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "entityId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 291,
          "chinese_text": "",
          "english_text": "entityText Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "entityType EntityType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 293,
          "chinese_text": "",
          "english_text": "startPos Int",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 294,
          "chinese_text": "",
          "english_text": "endPos Int",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 295,
          "chinese_text": "",
          "english_text": "confidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 298,
          "chinese_text": "",
          "english_text": "data Relation Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 299,
          "chinese_text": "",
          "english_text": "relationId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "",
          "english_text": "sourceEntity Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "targetEntity Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "",
          "english_text": "relationType Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "relationConfidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 304,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "data KnowledgeExtractor KnowledgeExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 307,
          "chinese_text": "",
          "english_text": "entityPatterns Map EntityType Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "",
          "english_text": "relationPatterns Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "entityDictionary Map Text EntityType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 312,
          "chinese_text": "",
          "english_text": "emptyExtractor KnowledgeExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "",
          "english_text": "emptyExtractor KnowledgeExtractor Map empty Map empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "initEntityPatterns KnowledgeExtractor KnowledgeExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 316,
          "chinese_text": "",
          "english_text": "initEntityPatterns extractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "",
          "english_text": "let personPattern b A Z a z A Z a z b",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 318,
          "chinese_text": "",
          "english_text": "orgPattern b A Z a z Corp Inc Ltd Company b",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "locationPattern b A Z a z A Z b",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "newPatterns Map fromList",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "Person personPattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "Organization orgPattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "",
          "english_text": "Location locationPattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 324,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 325,
          "chinese_text": "",
          "english_text": "in extractor entityPatterns newPatterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 327,
          "chinese_text": "",
          "english_text": "initRelationPatterns KnowledgeExtractor KnowledgeExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "initRelationPatterns extractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 329,
          "chinese_text": "",
          "english_text": "let workPattern w works at w",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "locatedPattern w is located in w",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 331,
          "chinese_text": "",
          "english_text": "newPatterns workPattern locatedPattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "",
          "english_text": "in extractor relationPatterns newPatterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 334,
          "chinese_text": "",
          "english_text": "extractEntities KnowledgeExtractor Text Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "",
          "english_text": "extractEntities extractor text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 336,
          "chinese_text": "",
          "english_text": "let patterns Map elems entityPatterns extractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "entities concatMap pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "map match Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 339,
          "chinese_text": "",
          "english_text": "entityId T pack entity show length entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "entityText match",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "简化处理",
          "english_text": "entityType Person",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 342,
          "chinese_text": "",
          "english_text": "startPos",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "endPos T length match",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 344,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 345,
          "chinese_text": "",
          "english_text": "findMatches pattern text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 346,
          "chinese_text": "",
          "english_text": "patterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 347,
          "chinese_text": "",
          "english_text": "in entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 349,
          "chinese_text": "",
          "english_text": "findMatches Text Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 350,
          "chinese_text": "",
          "english_text": "findMatches pattern text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 351,
          "chinese_text": "简化的模式匹配实现",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 352,
          "chinese_text": "",
          "english_text": "if text pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 353,
          "chinese_text": "",
          "english_text": "then text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 354,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "extractRelations KnowledgeExtractor Text Entity Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "extractRelations extractor text entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 358,
          "chinese_text": "",
          "english_text": "let patterns relationPatterns extractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 359,
          "chinese_text": "",
          "english_text": "relations concatMap pattern",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 360,
          "chinese_text": "",
          "english_text": "map match Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 361,
          "chinese_text": "",
          "english_text": "relationId T pack relation show length relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 362,
          "chinese_text": "简化处理",
          "english_text": "sourceEntity T take text",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "targetEntity T take text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "relationType related to",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "",
          "english_text": "relationConfidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 366,
          "chinese_text": "",
          "english_text": "findMatches pattern text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 367,
          "chinese_text": "",
          "english_text": "patterns",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 368,
          "chinese_text": "",
          "english_text": "in relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 369,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 371,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 373,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 375,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 376,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 377,
          "chinese_text": "",
          "english_text": "pub struct ExtractionPipeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 378,
          "chinese_text": "",
          "english_text": "pub text preprocessor TextPreprocessor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "pub entity recognizer EntityRecognizer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "pub relation extractor RelationExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "pub event extractor EventExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 382,
          "chinese_text": "",
          "english_text": "pub knowledge fusion KnowledgeFusion",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 385,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 386,
          "chinese_text": "",
          "english_text": "pub struct TextPreprocessor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 387,
          "chinese_text": "",
          "english_text": "pub tokenizer Tokenizer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 388,
          "chinese_text": "",
          "english_text": "pub pos tagger POSTagger",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 389,
          "chinese_text": "",
          "english_text": "pub parser Parser",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 392,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "pub struct EntityRecognizer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "",
          "english_text": "pub ner model NERModel",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 395,
          "chinese_text": "",
          "english_text": "pub entity linker EntityLinker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 396,
          "chinese_text": "",
          "english_text": "pub entity disambiguator EntityDisambiguator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "pub struct RelationExtractor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "pub relation classifier RelationClassifier",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 402,
          "chinese_text": "",
          "english_text": "pub relation extractor RelationExtractorModel",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 403,
          "chinese_text": "",
          "english_text": "pub relation validator RelationValidator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 404,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "impl ExtractionPipeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 407,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 408,
          "chinese_text": "",
          "english_text": "ExtractionPipeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "",
          "english_text": "text preprocessor TextPreprocessor new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "entity recognizer EntityRecognizer new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "relation extractor RelationExtractor new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 412,
          "chinese_text": "",
          "english_text": "event extractor EventExtractor new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "",
          "english_text": "knowledge fusion KnowledgeFusion new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 415,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "pub fn extract knowledge self text str KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 418,
          "chinese_text": "文本预处理",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "",
          "english_text": "let processed text self text preprocessor process text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 421,
          "chinese_text": "实体识别",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 422,
          "chinese_text": "",
          "english_text": "let entities self entity recognizer extract processed text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 424,
          "chinese_text": "关系抽取",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 425,
          "chinese_text": "",
          "english_text": "let relations self relation extractor extract processed text entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 427,
          "chinese_text": "事件抽取",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "let events self event extractor extract processed text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "知识融合",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "let knowledge graph self knowledge fusion fuse entities relations events",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "",
          "english_text": "knowledge graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 436,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 438,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 440,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 442,
          "chinese_text": "文本预处理",
          "english_text": "Text Preprocessing O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 443,
          "chinese_text": "实体识别",
          "english_text": "Entity Recognition O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 444,
          "chinese_text": "关系抽取",
          "english_text": "Relation Extraction O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 445,
          "chinese_text": "事件抽取",
          "english_text": "Event Extraction O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 446,
          "chinese_text": "知识融合",
          "english_text": "Knowledge Fusion O n log n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 448,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 450,
          "chinese_text": "文本存储",
          "english_text": "Text Storage O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 451,
          "chinese_text": "模型存储",
          "english_text": "Model Storage O m",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 452,
          "chinese_text": "结果缓存",
          "english_text": "Result Cache O k",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 454,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 456,
          "chinese_text": "案例 新闻知识抽取系统",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 458,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 459,
          "chinese_text": "构建基于新闻文本的知识抽取系统 自动识别新闻中的人物 组织 地点和事件 构建新闻知识图谱",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 463,
          "chinese_text": "使用深度学习模型进行命名实体识别",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 464,
          "chinese_text": "实现基于规则和机器学习的关系抽取",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 465,
          "chinese_text": "构建事件抽取和参数识别系统",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 466,
          "chinese_text": "实现知识融合和冲突解决",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 468,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 470,
          "chinese_text": "实体识别准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "关系抽取准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 472,
          "chinese_text": "事件抽取准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "处理速度 文档 小时",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 475,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 477,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 479,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 480,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 481,
          "chinese_text": "新闻媒体 新闻实体和事件抽取",
          "english_text": "News Media News entity and event extraction",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 482,
          "chinese_text": "学术研究 论文实体和关系抽取",
          "english_text": "Academic Research Paper entity and relationship extraction",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 483,
          "chinese_text": "医疗健康 医疗实体和症状抽取",
          "english_text": "Healthcare Medical entity and symptom extraction",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 484,
          "chinese_text": "金融科技 金融实体和关系抽取",
          "english_text": "FinTech Financial entity and relationship extraction",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 486,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 488,
          "chinese_text": "案例",
          "english_text": "Case Google Knowledge Graph",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 490,
          "chinese_text": "项目名称",
          "english_text": "Project Name Google Knowledge Graph",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 491,
          "chinese_text": "应用场景 搜索引擎知识图谱构建",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 492,
          "chinese_text": "技术实现 大规模知识抽取和融合",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 493,
          "chinese_text": "效果评估 覆盖数十亿实体和关系",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 495,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 497,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 499,
          "chinese_text": "研究方向 预训练模型",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 501,
          "chinese_text": "研究内容 基于预训练语言模型的知识抽取",
          "english_text": "Research Content",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 502,
          "chinese_text": "技术突破 显著提高了抽取准确率",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 503,
          "chinese_text": "应用前景 在多个领域达到 性能",
          "english_text": "Application Prospects SOTA",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 505,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 507,
          "chinese_text": "趋势 多模态知识抽取",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 509,
          "chinese_text": "中文 从纯文本抽取向多模态 文本 图像 音频 知识抽取发展",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 510,
          "chinese_text": "",
          "english_text": "English Development from pure text extraction to multimodal text image audio knowledge extraction",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 512,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 514,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 516,
          "chinese_text": "要点 知识抽取是知识图谱构建的关键技术 实现从非结构化到结构化的转换",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 517,
          "chinese_text": "要点 现代知识抽取方法结合了深度学习和传统 技术",
          "english_text": "Point NLP",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 518,
          "chinese_text": "要点 知识抽取正在向多模态和跨语言方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 520,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 522,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 524,
          "chinese_text": "短期目标 提高知识抽取的准确性和效率",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 525,
          "chinese_text": "中期目标 实现跨语言和多模态的知识抽取",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 526,
          "chinese_text": "长期目标 构建具有常识推理能力的知识抽取系统",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 528,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 530,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 532,
          "chinese_text": "",
          "english_text": "Nadeau D Sekine S A survey of named entity recognition and classification Lingvisticae Investigationes",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 533,
          "chinese_text": "",
          "english_text": "Mintz M et al Distant supervision for relation extraction without labeled data In Proceedings of the Joint Conference of the th Annual Meeting of the ACL and the th International Joint Conference on Natural Language Processing of the AFNLP",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 534,
          "chinese_text": "",
          "english_text": "Devlin J et al Bert Pre training of deep bidirectional transformers for language understanding arXiv preprint arXiv",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 536,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 538,
          "chinese_text": "",
          "english_text": "spaCy Named Entity Recognition https spacy io usage linguistic features named entities Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 539,
          "chinese_text": "",
          "english_text": "Stanford NER https nlp stanford edu software CRF NER html Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 540,
          "chinese_text": "",
          "english_text": "OpenNLP https opennlp apache org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 542,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 544,
          "chinese_text": "",
          "english_text": "Stanford CS N Natural Language Processing with Deep Learning https web stanford edu class cs n Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 545,
          "chinese_text": "",
          "english_text": "Named Entity Recognition Tutorial https www tensorflow org tutorials text ner Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 547,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 549,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 551,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 552,
          "chinese_text": "语义分析",
          "english_text": "semantic analysis README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 553,
          "chinese_text": "本体工程",
          "english_text": "ontology engineering README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 555,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 557,
          "chinese_text": "",
          "english_text": "Stanford NER https nlp stanford edu software CRF NER html",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 558,
          "chinese_text": "",
          "english_text": "spaCy NER https spacy io usage linguistic features named entities",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 559,
          "chinese_text": "",
          "english_text": "Hugging Face Transformers https huggingface co transformers",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 561,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 563,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 564,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 565,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\06-reasoning-systems\\README.md",
      "total_lines": 441,
      "bilingual_lines": 141,
      "bilingual_ratio": 0.3197278911564626,
      "section_bilingual_ratio": 0.7551020408163265,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.10247349823321555,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "推理系统",
          "english_text": "Reasoning Systems",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "推理系统是知识图谱中的核心技术 旨在基于已有的知识进行逻辑推理和知识发现 它通过形式化的推理规则和算法 从已知事实中推导出新知识 实现知识的自动扩展和智能推理 为知识图谱的应用提供强大的推理能力",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Reasoning systems are core technologies in knowledge graphs aiming to perform logical reasoning and knowledge discovery based on existing knowledge They use formalized reasoning rules and algorithms to derive new knowledge from known facts achieving automatic knowledge expansion and intelligent reasoning providing powerful reasoning capabilities for knowledge graph applications",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 符号推理时期 基于逻辑规则的符号推理",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 统计推理时期 基于概率模型的统计推理",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 混合推理时期 至今 结合符号和统计的混合推理",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "逻辑性 基于形式化逻辑的严格推理",
          "english_text": "Logicality Strict reasoning based on formal logic",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "可解释性 推理过程可追溯和解释",
          "english_text": "Explainability Reasoning process is traceable and explainable",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "不完备性 处理知识不完备的情况",
          "english_text": "Incompleteness Handle incomplete knowledge situations",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "不确定性 处理推理中的不确定性",
          "english_text": "Uncertainty Handle uncertainty in reasoning",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "RS K R A I E",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "知识库",
          "english_text": "K Knowledge Base",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "推理规则集合",
          "english_text": "R Reasoning Rules Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "推理算法",
          "english_text": "A Reasoning Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "推理接口",
          "english_text": "I Reasoning Interface",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 48,
          "chinese_text": "评估指标",
          "english_text": "E Evaluation Metrics",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 51,
          "chinese_text": "推理系统 是一个五元组 其中知识库 包含已知的事实和规则 推理规则集合 定义推理的基本规则 推理算法 实现具体的推理过程 推理接口 提供系统调用接口 评估指标 用于衡量推理质量",
          "english_text": "RS K R A I E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 53,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "定理 推理完备性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 56,
          "chinese_text": "如果推理系统 是完备的 且知识库 包含所有必要的前提 则对于任何可推导的结论 系统都能得出",
          "english_text": "RS K c c",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 58,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 60,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 61,
          "chinese_text": "设推理系统 是完备的",
          "english_text": "RS",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 62,
          "chinese_text": "对于任意结论 如果 可以从知识库 中推导出",
          "english_text": "c cK",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 63,
          "chinese_text": "则存在推理路径从 到",
          "english_text": "Kc",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "根据完备性定义 如果存在推理路径 则系统能够找到",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 65,
          "chinese_text": "因此 系统能够得出结论",
          "english_text": "c",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 66,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 68,
          "chinese_text": "定理 推理一致性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 69,
          "chinese_text": "如果推理系统 是一致的 则不会从同一知识库中推导出相互矛盾的结论",
          "english_text": "RS",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 71,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 73,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 74,
          "chinese_text": "设推理系统 是一致的",
          "english_text": "RS",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 75,
          "chinese_text": "假设存在矛盾结论 和",
          "english_text": "c c",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 76,
          "chinese_text": "根据一致性定义 如果系统是一致的 则不会同时推导出 和",
          "english_text": "c c",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 77,
          "chinese_text": "因此 系统不会推导出相互矛盾的结论",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 78,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 80,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 82,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 84,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 85,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 86,
          "chinese_text": "知识库 推理引擎",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 87,
          "chinese_text": "规则匹配",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 88,
          "chinese_text": "逻辑推理",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 89,
          "chinese_text": "结论生成",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "知识更新",
          "english_text": "E F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 91,
          "chinese_text": "结果验证",
          "english_text": "F G",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 93,
          "chinese_text": "前向推理",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "后向推理",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 95,
          "chinese_text": "混合推理",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 97,
          "chinese_text": "模式匹配",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "规则选择",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 99,
          "chinese_text": "冲突解决",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 101,
          "chinese_text": "演绎推理",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 102,
          "chinese_text": "归纳推理",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 103,
          "chinese_text": "类比推理",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 104,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 106,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 108,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 110,
          "chinese_text": "优势 逻辑严谨性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 112,
          "chinese_text": "中文 推理系统基于形式化逻辑 具有严格的数学基础 推理过程可验证和可解释",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 113,
          "chinese_text": "",
          "english_text": "English Reasoning systems are based on formal logic with rigorous mathematical foundations making the reasoning process verifiable and explainable",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 115,
          "chinese_text": "优势 知识发现能力",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 117,
          "chinese_text": "中文 推理系统能够从已有知识中发现隐含的新知识 实现知识的自动扩展",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 118,
          "chinese_text": "",
          "english_text": "English Reasoning systems can discover implicit new knowledge from existing knowledge achieving automatic knowledge expansion",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 120,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 122,
          "chinese_text": "局限性 计算复杂度",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 124,
          "chinese_text": "中文 复杂推理问题的计算复杂度很高 在大规模知识图谱中面临性能挑战",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 125,
          "chinese_text": "",
          "english_text": "English The computational complexity of complex reasoning problems is very high facing performance challenges in large scale knowledge graphs",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 127,
          "chinese_text": "局限性 知识不完备性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 129,
          "chinese_text": "中文 现实世界的知识往往不完备 推理系统难以处理未知或不确定的信息",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 130,
          "chinese_text": "",
          "english_text": "English Real world knowledge is often incomplete making it difficult for reasoning systems to handle unknown or uncertain information",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 132,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 134,
          "chinese_text": "争议点 符号推理 统计推理",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 136,
          "chinese_text": "支持观点 符号推理具有可解释性和逻辑严谨性",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "反对观点 统计推理在处理不确定性和大规模数据方面更有效",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 138,
          "chinese_text": "中立分析 混合推理方法结合了两种方法的优势 可能是最佳解决方案",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 140,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 142,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 144,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 146,
          "chinese_text": "逻辑推理算法",
          "english_text": "Logical Reasoning Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 148,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 149,
          "chinese_text": "实现示例",
          "english_text": "Rust",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 150,
          "chinese_text": "",
          "english_text": "use std collections HashMap HashSet VecDeque",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 153,
          "chinese_text": "",
          "english_text": "pub struct KnowledgeBase",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 154,
          "chinese_text": "",
          "english_text": "pub facts HashSet String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 155,
          "chinese_text": "",
          "english_text": "pub rules Vec Rule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 156,
          "chinese_text": "",
          "english_text": "pub entities HashMap String Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 157,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 159,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "pub struct Rule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 161,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 162,
          "chinese_text": "",
          "english_text": "pub premises Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 163,
          "chinese_text": "",
          "english_text": "pub conclusion String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 164,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 165,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 168,
          "chinese_text": "",
          "english_text": "pub struct Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 169,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 170,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "",
          "english_text": "pub properties HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 172,
          "chinese_text": "",
          "english_text": "pub relations Vec Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 173,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 175,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 176,
          "chinese_text": "",
          "english_text": "pub struct Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 177,
          "chinese_text": "",
          "english_text": "pub source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "pub target String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "pub relation type String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 180,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 183,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 184,
          "chinese_text": "",
          "english_text": "pub struct ReasoningEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 185,
          "chinese_text": "",
          "english_text": "pub knowledge base KnowledgeBase",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 186,
          "chinese_text": "",
          "english_text": "pub inference rules Vec InferenceRule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 187,
          "chinese_text": "",
          "english_text": "pub reasoning strategy ReasoningStrategy",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 190,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 191,
          "chinese_text": "",
          "english_text": "pub enum ReasoningStrategy",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 192,
          "chinese_text": "",
          "english_text": "ForwardChaining",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 193,
          "chinese_text": "",
          "english_text": "BackwardChaining",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "MixedChaining",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 197,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "pub struct InferenceRule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 199,
          "chinese_text": "",
          "english_text": "pub pattern String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 200,
          "chinese_text": "",
          "english_text": "pub action String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "pub priority i",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "",
          "english_text": "impl ReasoningEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "",
          "english_text": "ReasoningEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 207,
          "chinese_text": "",
          "english_text": "knowledge base KnowledgeBase",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "facts HashSet new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "rules Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 210,
          "chinese_text": "",
          "english_text": "entities HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "inference rules Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 213,
          "chinese_text": "",
          "english_text": "reasoning strategy ReasoningStrategy ForwardChaining",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 215,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "",
          "english_text": "pub fn add fact mut self fact String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 218,
          "chinese_text": "",
          "english_text": "self knowledge base facts insert fact",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "",
          "english_text": "pub fn add rule mut self rule Rule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "",
          "english_text": "self knowledge base rules push rule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 223,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 225,
          "chinese_text": "",
          "english_text": "pub fn forward chaining self query str Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 226,
          "chinese_text": "",
          "english_text": "let mut working memory self knowledge base facts clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 227,
          "chinese_text": "",
          "english_text": "let mut new facts Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 228,
          "chinese_text": "",
          "english_text": "let mut changed true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 230,
          "chinese_text": "",
          "english_text": "while changed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "changed false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 232,
          "chinese_text": "",
          "english_text": "for rule in self knowledge base rules",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 233,
          "chinese_text": "",
          "english_text": "if self can apply rule rule working memory",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "if working memory contains rule conclusion",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 235,
          "chinese_text": "",
          "english_text": "working memory insert rule conclusion clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 236,
          "chinese_text": "",
          "english_text": "new facts push rule conclusion clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 237,
          "chinese_text": "",
          "english_text": "changed true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 241,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 243,
          "chinese_text": "",
          "english_text": "new facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 244,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 246,
          "chinese_text": "",
          "english_text": "pub fn backward chaining self query str bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "",
          "english_text": "if self knowledge base facts contains query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "return true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 249,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 251,
          "chinese_text": "",
          "english_text": "for rule in self knowledge base rules",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "",
          "english_text": "if rule conclusion query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 253,
          "chinese_text": "",
          "english_text": "let mut all premises satisfied true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "",
          "english_text": "for premise in rule premises",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "",
          "english_text": "if self backward chaining premise",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 256,
          "chinese_text": "",
          "english_text": "all premises satisfied false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "break",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 259,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "",
          "english_text": "if all premises satisfied",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 261,
          "chinese_text": "",
          "english_text": "return true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 262,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 263,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "",
          "english_text": "false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 267,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "fn can apply rule self rule Rule working memory HashSet String bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 270,
          "chinese_text": "",
          "english_text": "for premise in rule premises",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 271,
          "chinese_text": "",
          "english_text": "if working memory contains premise",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 272,
          "chinese_text": "",
          "english_text": "return false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 273,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 274,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 276,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 278,
          "chinese_text": "",
          "english_text": "pub fn mixed reasoning self query str Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "let mut results Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 281,
          "chinese_text": "前向推理",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "let forward results self forward chaining query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 283,
          "chinese_text": "",
          "english_text": "results extend forward results",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 285,
          "chinese_text": "后向推理",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 286,
          "chinese_text": "",
          "english_text": "if self backward chaining query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "",
          "english_text": "results push query to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "results",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 291,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 293,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 295,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "实现示例",
          "english_text": "Haskell",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "module ReasoningSystems where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 299,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "import Data Set Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "",
          "english_text": "import qualified Data Set as Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "import Data List find",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 305,
          "chinese_text": "",
          "english_text": "data Rule Rule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "ruleId String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 307,
          "chinese_text": "",
          "english_text": "premises String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "",
          "english_text": "conclusion String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "confidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 312,
          "chinese_text": "",
          "english_text": "data Entity Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "",
          "english_text": "entityId String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 314,
          "chinese_text": "",
          "english_text": "entityName String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "properties Map String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 316,
          "chinese_text": "",
          "english_text": "relations Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "data Relation Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "target String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "relationType String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "",
          "english_text": "relationConfidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 324,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "data KnowledgeBase KnowledgeBase",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 327,
          "chinese_text": "",
          "english_text": "facts Set String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "rules Rule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 329,
          "chinese_text": "",
          "english_text": "entities Map String Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "",
          "english_text": "data ReasoningStrategy ForwardChaining BackwardChaining MixedChaining",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 333,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "",
          "english_text": "data ReasoningEngine ReasoningEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 336,
          "chinese_text": "",
          "english_text": "knowledgeBase KnowledgeBase",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "reasoningStrategy ReasoningStrategy",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "emptyKnowledgeBase KnowledgeBase",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "emptyKnowledgeBase KnowledgeBase Set empty Map empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "emptyReasoningEngine ReasoningEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 344,
          "chinese_text": "",
          "english_text": "emptyReasoningEngine ReasoningEngine emptyKnowledgeBase ForwardChaining",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 346,
          "chinese_text": "",
          "english_text": "addFact String KnowledgeBase KnowledgeBase",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 347,
          "chinese_text": "",
          "english_text": "addFact fact kb kb facts Set insert fact facts kb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 349,
          "chinese_text": "",
          "english_text": "addRule Rule KnowledgeBase KnowledgeBase",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 350,
          "chinese_text": "",
          "english_text": "addRule rule kb kb rules rule rules kb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 352,
          "chinese_text": "",
          "english_text": "forwardChaining ReasoningEngine String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 353,
          "chinese_text": "",
          "english_text": "forwardChaining engine query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 354,
          "chinese_text": "",
          "english_text": "let kb knowledgeBase engine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "",
          "english_text": "initialFacts facts kb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "newFacts applyRules rules kb initialFacts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "in Set toList Set difference newFacts initialFacts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 359,
          "chinese_text": "",
          "english_text": "applyRules Rule Set String Set String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 360,
          "chinese_text": "",
          "english_text": "applyRules rules facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 361,
          "chinese_text": "",
          "english_text": "let applicableRules filter rule canApplyRule rule facts rules",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 362,
          "chinese_text": "",
          "english_text": "newFacts foldr rule acc Set insert conclusion rule acc facts applicableRules",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "in if newFacts facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "then facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "",
          "english_text": "else applyRules rules newFacts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 367,
          "chinese_text": "",
          "english_text": "canApplyRule Rule Set String Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 368,
          "chinese_text": "",
          "english_text": "canApplyRule rule facts all Set member facts premises rule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 370,
          "chinese_text": "",
          "english_text": "backwardChaining ReasoningEngine String Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 371,
          "chinese_text": "",
          "english_text": "backwardChaining engine query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 372,
          "chinese_text": "",
          "english_text": "let kb knowledgeBase engine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 373,
          "chinese_text": "",
          "english_text": "in if Set member query facts kb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 374,
          "chinese_text": "",
          "english_text": "then True",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 375,
          "chinese_text": "",
          "english_text": "else any rule conclusion rule query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 376,
          "chinese_text": "",
          "english_text": "all backwardChaining engine premises rule rules kb",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 378,
          "chinese_text": "",
          "english_text": "mixedReasoning ReasoningEngine String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "mixedReasoning engine query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "let forwardResults forwardChaining engine query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "backwardResult if backwardChaining engine query then query else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 382,
          "chinese_text": "",
          "english_text": "in forwardResults backwardResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 385,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 387,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 389,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 391,
          "chinese_text": "",
          "english_text": "pub struct ReasoningGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 392,
          "chinese_text": "",
          "english_text": "pub nodes HashMap String ReasoningNode",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "pub edges HashMap String Vec ReasoningEdge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 396,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "",
          "english_text": "pub struct ReasoningNode",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 398,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "pub node type NodeType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "pub content String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 402,
          "chinese_text": "",
          "english_text": "pub metadata HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 403,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 405,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "pub enum NodeType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 407,
          "chinese_text": "",
          "english_text": "Fact",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 408,
          "chinese_text": "",
          "english_text": "Rule",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "",
          "english_text": "Conclusion",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "pub struct ReasoningEdge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 415,
          "chinese_text": "",
          "english_text": "pub source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 416,
          "chinese_text": "",
          "english_text": "pub target String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "pub edge type EdgeType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 418,
          "chinese_text": "",
          "english_text": "pub weight f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 421,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 422,
          "chinese_text": "",
          "english_text": "pub enum EdgeType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 423,
          "chinese_text": "",
          "english_text": "Implies",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 424,
          "chinese_text": "",
          "english_text": "Supports",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 425,
          "chinese_text": "",
          "english_text": "Contradicts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 426,
          "chinese_text": "",
          "english_text": "RelatedTo",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 427,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 429,
          "chinese_text": "",
          "english_text": "impl ReasoningGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "ReasoningGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 432,
          "chinese_text": "",
          "english_text": "nodes HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "",
          "english_text": "edges HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 437,
          "chinese_text": "",
          "english_text": "pub fn add node mut self node ReasoningNode",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 438,
          "chinese_text": "",
          "english_text": "self nodes insert node id clone node",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 439,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 441,
          "chinese_text": "",
          "english_text": "pub fn add edge mut self edge ReasoningEdge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 442,
          "chinese_text": "",
          "english_text": "self edges entry edge source clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 443,
          "chinese_text": "",
          "english_text": "or insert with Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 444,
          "chinese_text": "",
          "english_text": "push edge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 447,
          "chinese_text": "",
          "english_text": "pub fn find reasoning path self start str end str Option Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "实现推理路径查找算法",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 449,
          "chinese_text": "",
          "english_text": "None",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 450,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 452,
          "chinese_text": "",
          "english_text": "pub fn validate consistency self bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 453,
          "chinese_text": "实现一致性验证",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 454,
          "chinese_text": "",
          "english_text": "true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 455,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 456,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 457,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 459,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 461,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 463,
          "chinese_text": "前向推理",
          "english_text": "Forward Chaining O n m",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 464,
          "chinese_text": "后向推理",
          "english_text": "Backward Chaining O n d",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 465,
          "chinese_text": "混合推理",
          "english_text": "Mixed Reasoning O n m n d",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 466,
          "chinese_text": "路径查找",
          "english_text": "Path Finding O V E",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 468,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 470,
          "chinese_text": "知识库存储",
          "english_text": "Knowledge Base Storage O n m",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 471,
          "chinese_text": "推理缓存",
          "english_text": "Reasoning Cache O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 472,
          "chinese_text": "路径存储",
          "english_text": "Path Storage O V E",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 474,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 476,
          "chinese_text": "案例 医疗诊断推理系统",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 478,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 479,
          "chinese_text": "构建基于知识图谱的医疗诊断推理系统 根据患者的症状和检查结果 推理出可能的疾病诊断",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 481,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 483,
          "chinese_text": "构建医疗知识图谱 包含疾病 症状 检查等实体",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 484,
          "chinese_text": "实现基于规则的诊断推理算法",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 485,
          "chinese_text": "集成概率推理处理不确定性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 486,
          "chinese_text": "提供可解释的诊断结果",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 488,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 490,
          "chinese_text": "诊断准确率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 491,
          "chinese_text": "推理速度 秒",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 492,
          "chinese_text": "可解释性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 493,
          "chinese_text": "用户满意度",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 495,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 497,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 499,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 500,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 501,
          "chinese_text": "医疗诊断 基于症状的疾病诊断推理",
          "english_text": "Medical Diagnosis Disease diagnosis reasoning based on symptoms",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 502,
          "chinese_text": "法律咨询 法律条文和案例推理",
          "english_text": "Legal Consultation Legal provision and case reasoning",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 503,
          "chinese_text": "故障诊断 系统故障原因推理",
          "english_text": "Fault Diagnosis System fault cause reasoning",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 504,
          "chinese_text": "智能问答 复杂问题的逻辑推理",
          "english_text": "Intelligent Q A Logical reasoning for complex questions",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 506,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 508,
          "chinese_text": "案例",
          "english_text": "Case IBM Watson",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 510,
          "chinese_text": "项目名称",
          "english_text": "Project Name IBM Watson",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 511,
          "chinese_text": "应用场景 医疗诊断和问答系统",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 512,
          "chinese_text": "技术实现 混合推理和自然语言处理",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 513,
          "chinese_text": "效果评估 在医疗问答比赛中击败人类专家",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 515,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 517,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 519,
          "chinese_text": "研究方向 神经符号推理",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 521,
          "chinese_text": "研究内容 结合神经网络和符号推理的混合方法",
          "english_text": "Research Content",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 522,
          "chinese_text": "技术突破 实现了可解释的深度推理",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 523,
          "chinese_text": "应用前景 在复杂推理任务中表现优异",
          "english_text": "Application Prospects",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 525,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 527,
          "chinese_text": "趋势 因果推理",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 529,
          "chinese_text": "中文 从关联推理向因果推理发展 更好地理解知识间的因果关系",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 530,
          "chinese_text": "",
          "english_text": "English Development from associative reasoning to causal reasoning better understanding causal relationships between knowledge",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 532,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 534,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 536,
          "chinese_text": "要点 推理系统是知识图谱的核心应用 实现知识的自动扩展和智能推理",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 537,
          "chinese_text": "要点 现代推理系统结合了符号推理和统计推理的优势",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 538,
          "chinese_text": "要点 推理系统正在向可解释性和因果推理方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 540,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 542,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 544,
          "chinese_text": "短期目标 提高推理的准确性和效率",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 545,
          "chinese_text": "中期目标 实现可解释的深度推理",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 546,
          "chinese_text": "长期目标 构建具有因果推理能力的智能系统",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 548,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 550,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 552,
          "chinese_text": "",
          "english_text": "Russell S Norvig P Artificial intelligence a modern approach Pearson",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 553,
          "chinese_text": "",
          "english_text": "Pearl J Causality models reasoning and inference Cambridge University Press",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 554,
          "chinese_text": "",
          "english_text": "Koller D Friedman N Probabilistic graphical models principles and techniques MIT press",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 556,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 558,
          "chinese_text": "",
          "english_text": "Prolog Programming https www swi prolog org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 559,
          "chinese_text": "",
          "english_text": "Datalog Language https en wikipedia org wiki Datalog Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 560,
          "chinese_text": "",
          "english_text": "Answer Set Programming https potassco org Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 562,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 564,
          "chinese_text": "",
          "english_text": "Stanford CS Artificial Intelligence Principles and Techniques https web stanford edu class cs Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 565,
          "chinese_text": "",
          "english_text": "MIT Artificial Intelligence https ocw mit edu courses electrical engineering and computer science artificial intelligence fall Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 567,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 569,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 571,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 572,
          "chinese_text": "本体工程",
          "english_text": "ontology engineering README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 573,
          "chinese_text": "知识抽取",
          "english_text": "knowledge extraction README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 575,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 577,
          "chinese_text": "",
          "english_text": "Prolog https www swi prolog org",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 578,
          "chinese_text": "",
          "english_text": "Datalog https en wikipedia org wiki Datalog",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 579,
          "chinese_text": "",
          "english_text": "Answer Set Programming https potassco org",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 581,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 583,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 584,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 585,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\07-applications\\README.md",
      "total_lines": 472,
      "bilingual_lines": 140,
      "bilingual_ratio": 0.2966101694915254,
      "section_bilingual_ratio": 0.7872340425531915,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.08945686900958466,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "应用实践",
          "english_text": "Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "应用实践是知识图谱技术的实际应用领域 涵盖智能问答 推荐系统 决策支持 知识发现等多个应用场景 它通过将知识图谱的理论和技术转化为实际可用的系统和服务 为各行各业提供智能化的解决方案 实现知识的价值最大化",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Applications are the practical application domains of knowledge graph technology covering multiple application scenarios such as intelligent question answering recommendation systems decision support and knowledge discovery It transforms knowledge graph theories and technologies into practical systems and services providing intelligent solutions for various industries and maximizing the value of knowledge",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 基础应用时期 搜索引擎和基础问答系统",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 智能应用时期 智能问答和推荐系统",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 深度应用时期 至今 多模态应用和跨领域融合",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "实用性 解决实际业务问题",
          "english_text": "Practicality Solve real business problems",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "智能化 提供智能化的服务",
          "english_text": "Intelligence Provide intelligent services",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "可扩展性 支持大规模应用",
          "english_text": "Scalability Support large scale applications",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "跨领域性 适用于多个领域",
          "english_text": "Cross domain Applicable to multiple domains",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "AP KG A I E M",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "知识图谱",
          "english_text": "KG Knowledge Graph",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "应用算法集合",
          "english_text": "A Application Algorithms Set",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "接口系统",
          "english_text": "I Interface System",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "评估指标",
          "english_text": "E Evaluation Metrics",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 48,
          "chinese_text": "监控系统",
          "english_text": "M Monitoring System",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 51,
          "chinese_text": "应用实践系统 是一个五元组 其中知识图谱 提供知识基础 应用算法集合 实现具体的应用功能 接口系统 提供用户交互 评估指标 用于衡量应用效果 监控系统 用于系统运维",
          "english_text": "AP KG A I E M",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 53,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "定理 应用完备性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 56,
          "chinese_text": "如果应用系统 是完备的 且知识图谱 包含所有必要知识 则对于任何用户查询 系统都能提供相应的答案",
          "english_text": "AP KG q a",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 58,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 60,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 61,
          "chinese_text": "设应用系统 是完备的",
          "english_text": "AP",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 62,
          "chinese_text": "对于任意用户查询 如果知识图谱 包含相关信息",
          "english_text": "q KG",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 63,
          "chinese_text": "则存在算法能够处理 并生成答案",
          "english_text": "qa",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "根据完备性定义 如果存在相关信息 则系统能够找到",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 65,
          "chinese_text": "因此 系统能够提供答案",
          "english_text": "a",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 66,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 68,
          "chinese_text": "定理 应用一致性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 69,
          "chinese_text": "如果应用系统 是一致的 则对于相同的查询 系统总是返回相同的答案",
          "english_text": "AP q a",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 71,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 73,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 74,
          "chinese_text": "设应用系统 是一致的",
          "english_text": "AP",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 75,
          "chinese_text": "对于查询 如果系统返回答案 和",
          "english_text": "q a a",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 76,
          "chinese_text": "根据一致性定义 如果系统是一致的 则",
          "english_text": "a a",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 77,
          "chinese_text": "因此 系统总是返回相同的答案",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 78,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 80,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 82,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 84,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 85,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 86,
          "chinese_text": "用户输入 查询理解",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 87,
          "chinese_text": "知识检索",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 88,
          "chinese_text": "推理计算",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 89,
          "chinese_text": "结果生成",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "用户输出",
          "english_text": "E F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 92,
          "chinese_text": "自然语言处理",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 93,
          "chinese_text": "意图识别",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "实体链接",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 96,
          "chinese_text": "图遍历",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 97,
          "chinese_text": "路径搜索",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "相似度计算",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 100,
          "chinese_text": "逻辑推理",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 101,
          "chinese_text": "统计推理",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 102,
          "chinese_text": "混合推理",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 103,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 105,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 107,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 109,
          "chinese_text": "优势 实用性强",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 111,
          "chinese_text": "中文 知识图谱应用直接解决实际业务问题 具有明确的价值和效果",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 112,
          "chinese_text": "",
          "english_text": "English Knowledge graph applications directly solve real business problems with clear value and effectiveness",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 114,
          "chinese_text": "优势 智能化程度高",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 116,
          "chinese_text": "中文 应用系统能够提供智能化的服务 如自动问答 智能推荐等",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 117,
          "chinese_text": "",
          "english_text": "English Application systems can provide intelligent services such as automatic question answering and intelligent recommendations",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 119,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 121,
          "chinese_text": "局限性 知识依赖性强",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 123,
          "chinese_text": "中文 应用效果高度依赖于知识图谱的质量和完整性",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 124,
          "chinese_text": "",
          "english_text": "English Application effectiveness highly depends on the quality and completeness of the knowledge graph",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 126,
          "chinese_text": "局限性 计算复杂度高",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 128,
          "chinese_text": "中文 复杂应用的计算开销很大 在大规模场景下面临性能挑战",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 129,
          "chinese_text": "",
          "english_text": "English Complex applications have high computational overhead and face performance challenges in large scale scenarios",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 131,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 133,
          "chinese_text": "争议点 通用性 专业性",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 135,
          "chinese_text": "支持观点 通用应用能够覆盖更多场景 但可能缺乏深度",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 136,
          "chinese_text": "反对观点 专业应用在特定领域表现更好 但适用范围有限",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "中立分析 混合应用方法结合了两种优势 可能是最佳解决方案",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 139,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 141,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 143,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 145,
          "chinese_text": "智能问答算法",
          "english_text": "Intelligent Q A Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 147,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 148,
          "chinese_text": "实现示例",
          "english_text": "Rust",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 149,
          "chinese_text": "",
          "english_text": "use std collections HashMap HashSet VecDeque",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 151,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "",
          "english_text": "pub struct Question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 153,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 154,
          "chinese_text": "",
          "english_text": "pub text String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 155,
          "chinese_text": "",
          "english_text": "pub intent String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 156,
          "chinese_text": "",
          "english_text": "pub entities Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 157,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 158,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 161,
          "chinese_text": "",
          "english_text": "pub struct Answer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 162,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 163,
          "chinese_text": "",
          "english_text": "pub text String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 164,
          "chinese_text": "",
          "english_text": "pub source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 165,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 166,
          "chinese_text": "",
          "english_text": "pub evidence Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 169,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 170,
          "chinese_text": "",
          "english_text": "pub struct QASystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "",
          "english_text": "pub knowledge graph KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 172,
          "chinese_text": "",
          "english_text": "pub question parser QuestionParser",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 173,
          "chinese_text": "",
          "english_text": "pub answer generator AnswerGenerator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 174,
          "chinese_text": "",
          "english_text": "pub confidence calculator ConfidenceCalculator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 175,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 177,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "pub struct KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "pub entities HashMap String Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 180,
          "chinese_text": "",
          "english_text": "pub relations HashMap String Vec Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "pub facts HashSet String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 182,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 184,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 185,
          "chinese_text": "",
          "english_text": "pub struct Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 186,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 187,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "pub entity type String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 189,
          "chinese_text": "",
          "english_text": "pub properties HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 190,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 192,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 193,
          "chinese_text": "",
          "english_text": "pub struct Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "pub source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "pub target String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 196,
          "chinese_text": "",
          "english_text": "pub relation type String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 197,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 200,
          "chinese_text": "",
          "english_text": "impl QASystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "QASystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 203,
          "chinese_text": "",
          "english_text": "knowledge graph KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "",
          "english_text": "entities HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "relations HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "",
          "english_text": "facts HashSet new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 207,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "question parser QuestionParser new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "answer generator AnswerGenerator new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 210,
          "chinese_text": "",
          "english_text": "confidence calculator ConfidenceCalculator new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "",
          "english_text": "pub fn answer question self question text str Vec Answer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 215,
          "chinese_text": "问题解析",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 216,
          "chinese_text": "",
          "english_text": "let question self question parser parse question text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 218,
          "chinese_text": "知识检索",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "let relevant facts self retrieve relevant facts question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "推理计算",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "",
          "english_text": "let candidate answers self reason and compute question relevant facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 224,
          "chinese_text": "答案生成",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 225,
          "chinese_text": "",
          "english_text": "let answers self answer generator generate question candidate answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 227,
          "chinese_text": "置信度计算",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 228,
          "chinese_text": "",
          "english_text": "let ranked answers self confidence calculator rank answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 230,
          "chinese_text": "",
          "english_text": "ranked answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 233,
          "chinese_text": "",
          "english_text": "fn retrieve relevant facts self question Question Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "let mut relevant facts Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 236,
          "chinese_text": "",
          "english_text": "for entity in question entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 237,
          "chinese_text": "",
          "english_text": "if let Some relations self knowledge graph relations get entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "",
          "english_text": "for relation in relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "let fact format relation source relation relation type relation target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "relevant facts push fact",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 241,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 242,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 243,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 245,
          "chinese_text": "",
          "english_text": "relevant facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 246,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "fn reason and compute self question Question facts String Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 249,
          "chinese_text": "",
          "english_text": "let mut candidate answers Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 251,
          "chinese_text": "基于规则的推理",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "",
          "english_text": "for fact in facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 253,
          "chinese_text": "",
          "english_text": "if self matches question pattern question fact",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "",
          "english_text": "candidate answers push fact clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 256,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "基于路径的推理",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 259,
          "chinese_text": "",
          "english_text": "let path answers self find path answers question facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "",
          "english_text": "candidate answers extend path answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 262,
          "chinese_text": "",
          "english_text": "candidate answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 263,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 265,
          "chinese_text": "",
          "english_text": "fn matches question pattern self question Question fact str bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "简化的模式匹配",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 267,
          "chinese_text": "",
          "english_text": "question text contains fact fact len min",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 268,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 270,
          "chinese_text": "",
          "english_text": "fn find path answers self question Question facts String Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 271,
          "chinese_text": "",
          "english_text": "let mut path answers Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 273,
          "chinese_text": "使用图搜索算法找到相关路径",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 274,
          "chinese_text": "",
          "english_text": "for entity in question entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "if let Some paths self find entity paths entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 276,
          "chinese_text": "",
          "english_text": "for path in paths",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 277,
          "chinese_text": "",
          "english_text": "path answers push path",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 278,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "path answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 283,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 285,
          "chinese_text": "",
          "english_text": "fn find entity paths self entity str Option Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 286,
          "chinese_text": "简化的路径查找",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "",
          "english_text": "Some vec format Path to entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 289,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 293,
          "chinese_text": "实现示例",
          "english_text": "Haskell",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 294,
          "chinese_text": "",
          "english_text": "module Applications where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 298,
          "chinese_text": "",
          "english_text": "import Data Set Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 299,
          "chinese_text": "",
          "english_text": "import qualified Data Set as Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "data Question Question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 304,
          "chinese_text": "",
          "english_text": "questionId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 305,
          "chinese_text": "",
          "english_text": "questionText Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "questionIntent Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 307,
          "chinese_text": "",
          "english_text": "questionEntities Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "",
          "english_text": "questionConfidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 311,
          "chinese_text": "",
          "english_text": "data Answer Answer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 312,
          "chinese_text": "",
          "english_text": "answerId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "",
          "english_text": "answerText Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 314,
          "chinese_text": "",
          "english_text": "answerSource Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "answerConfidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 316,
          "chinese_text": "",
          "english_text": "answerEvidence Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "data Entity Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "entityId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "entityName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "entityType Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "",
          "english_text": "entityProperties Map Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 324,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "data Relation Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 327,
          "chinese_text": "",
          "english_text": "source Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "target Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 329,
          "chinese_text": "",
          "english_text": "relationType Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "relationConfidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 331,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 333,
          "chinese_text": "",
          "english_text": "data KnowledgeGraph KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 334,
          "chinese_text": "",
          "english_text": "entities Map Text Entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "",
          "english_text": "relations Map Text Relation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 336,
          "chinese_text": "",
          "english_text": "facts Set Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 339,
          "chinese_text": "",
          "english_text": "data QASystem QASystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "knowledgeGraph KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "questionParser QuestionParser",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 342,
          "chinese_text": "",
          "english_text": "answerGenerator AnswerGenerator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 345,
          "chinese_text": "",
          "english_text": "data QuestionParser QuestionParser deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 346,
          "chinese_text": "",
          "english_text": "data AnswerGenerator AnswerGenerator deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 348,
          "chinese_text": "",
          "english_text": "emptyKnowledgeGraph KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 349,
          "chinese_text": "",
          "english_text": "emptyKnowledgeGraph KnowledgeGraph Map empty Map empty Set empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 351,
          "chinese_text": "",
          "english_text": "emptyQASystem QASystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 352,
          "chinese_text": "",
          "english_text": "emptyQASystem QASystem emptyKnowledgeGraph QuestionParser AnswerGenerator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 354,
          "chinese_text": "",
          "english_text": "answerQuestion QASystem Text Answer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "",
          "english_text": "answerQuestion system questionText",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "let question parseQuestion questionText",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "relevantFacts retrieveRelevantFacts knowledgeGraph system question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 358,
          "chinese_text": "",
          "english_text": "candidateAnswers reasonAndCompute question relevantFacts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 359,
          "chinese_text": "",
          "english_text": "answers generateAnswers question candidateAnswers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 360,
          "chinese_text": "",
          "english_text": "in rankAnswers answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 362,
          "chinese_text": "",
          "english_text": "parseQuestion Text Question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "parseQuestion text Question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "questionId q",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "",
          "english_text": "questionText text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 366,
          "chinese_text": "",
          "english_text": "questionIntent unknown",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 367,
          "chinese_text": "",
          "english_text": "questionEntities extractEntities text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 368,
          "chinese_text": "",
          "english_text": "questionConfidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 369,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 371,
          "chinese_text": "",
          "english_text": "extractEntities Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 372,
          "chinese_text": "",
          "english_text": "extractEntities text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 373,
          "chinese_text": "简化的实体提取",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 374,
          "chinese_text": "",
          "english_text": "entity entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 376,
          "chinese_text": "",
          "english_text": "retrieveRelevantFacts KnowledgeGraph Question Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 377,
          "chinese_text": "",
          "english_text": "retrieveRelevantFacts kg question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 378,
          "chinese_text": "",
          "english_text": "let entities questionEntities question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "facts concatMap entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "case Map lookup entity relations kg of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "Just relations map rel",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 382,
          "chinese_text": "",
          "english_text": "T concat source rel relationType rel target rel relations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "Nothing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 384,
          "chinese_text": "",
          "english_text": "entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 385,
          "chinese_text": "",
          "english_text": "in facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 387,
          "chinese_text": "",
          "english_text": "reasonAndCompute Question Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 388,
          "chinese_text": "",
          "english_text": "reasonAndCompute question facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 389,
          "chinese_text": "",
          "english_text": "let patternMatches filter fact matchesQuestionPattern question fact facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "pathAnswers findPathAnswers question facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 391,
          "chinese_text": "",
          "english_text": "in patternMatches pathAnswers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "matchesQuestionPattern Question Text Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "",
          "english_text": "matchesQuestionPattern question fact",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 395,
          "chinese_text": "",
          "english_text": "T isInfixOf T take fact questionText question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "",
          "english_text": "findPathAnswers Question Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 398,
          "chinese_text": "",
          "english_text": "findPathAnswers question facts",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "let entities questionEntities question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "paths concatMap entity findEntityPaths entity entities",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "in map path T concat Path path paths",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 403,
          "chinese_text": "",
          "english_text": "findEntityPaths Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 404,
          "chinese_text": "",
          "english_text": "findEntityPaths entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 405,
          "chinese_text": "简化的路径查找",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "T concat Path to entity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 408,
          "chinese_text": "",
          "english_text": "generateAnswers Question Text Answer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "",
          "english_text": "generateAnswers question candidates",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "map candidate Answer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "answerId a",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 412,
          "chinese_text": "",
          "english_text": "answerText candidate",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "",
          "english_text": "answerSource knowledge graph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "answerConfidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 415,
          "chinese_text": "",
          "english_text": "answerEvidence candidate",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 416,
          "chinese_text": "",
          "english_text": "candidates",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 418,
          "chinese_text": "",
          "english_text": "rankAnswers Answer Answer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "",
          "english_text": "rankAnswers answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 420,
          "chinese_text": "按置信度排序",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 421,
          "chinese_text": "",
          "english_text": "sortBy a b compare answerConfidence b answerConfidence a answers",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 422,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 424,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 426,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 429,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "",
          "english_text": "pub struct ApplicationSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "pub knowledge graph KnowledgeGraph",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 432,
          "chinese_text": "",
          "english_text": "pub qa system QASystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "",
          "english_text": "pub recommendation system RecommendationSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "pub decision support system DecisionSupportSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "pub knowledge discovery system KnowledgeDiscoverySystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 436,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 438,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 439,
          "chinese_text": "",
          "english_text": "pub struct QASystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 440,
          "chinese_text": "",
          "english_text": "pub question parser QuestionParser",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 441,
          "chinese_text": "",
          "english_text": "pub answer generator AnswerGenerator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 442,
          "chinese_text": "",
          "english_text": "pub confidence calculator ConfidenceCalculator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 443,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 446,
          "chinese_text": "",
          "english_text": "pub struct RecommendationSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 447,
          "chinese_text": "",
          "english_text": "pub user model UserModel",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "",
          "english_text": "pub item model ItemModel",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 449,
          "chinese_text": "",
          "english_text": "pub recommendation engine RecommendationEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 450,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 452,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 453,
          "chinese_text": "",
          "english_text": "pub struct DecisionSupportSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 454,
          "chinese_text": "",
          "english_text": "pub rule engine RuleEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 455,
          "chinese_text": "",
          "english_text": "pub decision tree DecisionTree",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 456,
          "chinese_text": "",
          "english_text": "pub risk assessor RiskAssessor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 457,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 459,
          "chinese_text": "",
          "english_text": "impl ApplicationSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 460,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "",
          "english_text": "ApplicationSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 462,
          "chinese_text": "",
          "english_text": "knowledge graph KnowledgeGraph new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 463,
          "chinese_text": "",
          "english_text": "qa system QASystem new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 464,
          "chinese_text": "",
          "english_text": "recommendation system RecommendationSystem new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 465,
          "chinese_text": "",
          "english_text": "decision support system DecisionSupportSystem new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 466,
          "chinese_text": "",
          "english_text": "knowledge discovery system KnowledgeDiscoverySystem new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 467,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 468,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 470,
          "chinese_text": "",
          "english_text": "pub fn process query self query str ApplicationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "根据查询类型分发到不同的子系统",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 472,
          "chinese_text": "",
          "english_text": "match self classify query query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "",
          "english_text": "QueryType Question self qa system answer query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 474,
          "chinese_text": "",
          "english_text": "QueryType Recommendation self recommendation system recommend query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 475,
          "chinese_text": "",
          "english_text": "QueryType Decision self decision support system support query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 476,
          "chinese_text": "",
          "english_text": "QueryType Discovery self knowledge discovery system discover query",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 477,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 478,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 480,
          "chinese_text": "",
          "english_text": "fn classify query self query str QueryType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 481,
          "chinese_text": "简化的查询分类",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 482,
          "chinese_text": "",
          "english_text": "if query contains",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 483,
          "chinese_text": "",
          "english_text": "QueryType Question",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 484,
          "chinese_text": "",
          "english_text": "else if query contains recommend",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 485,
          "chinese_text": "",
          "english_text": "QueryType Recommendation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 486,
          "chinese_text": "",
          "english_text": "else if query contains decision",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 487,
          "chinese_text": "",
          "english_text": "QueryType Decision",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 488,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 489,
          "chinese_text": "",
          "english_text": "QueryType Discovery",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 490,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 491,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 492,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 493,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 495,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 497,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 499,
          "chinese_text": "查询解析",
          "english_text": "Query Parsing O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 500,
          "chinese_text": "知识检索",
          "english_text": "Knowledge Retrieval O log n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 501,
          "chinese_text": "推理计算",
          "english_text": "Reasoning Computation O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 502,
          "chinese_text": "结果生成",
          "english_text": "Result Generation O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 504,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 506,
          "chinese_text": "知识图谱存储",
          "english_text": "Knowledge Graph Storage O V E",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 507,
          "chinese_text": "缓存系统",
          "english_text": "Cache System O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 508,
          "chinese_text": "结果存储",
          "english_text": "Result Storage O k",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 510,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 512,
          "chinese_text": "案例 智能客服系统",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 514,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 515,
          "chinese_text": "构建基于知识图谱的智能客服系统 能够自动回答用户问题 提供 的客户服务支持",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 517,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 519,
          "chinese_text": "构建客服知识图谱 包含产品信息 常见问题 解决方案等",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 520,
          "chinese_text": "实现自然语言理解和问题分类",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 521,
          "chinese_text": "集成多轮对话和上下文理解",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 522,
          "chinese_text": "提供人工客服转接机制",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 524,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 526,
          "chinese_text": "问题解决率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 527,
          "chinese_text": "用户满意度",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 528,
          "chinese_text": "响应时间 秒",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 529,
          "chinese_text": "成本节约",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 531,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 533,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 535,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 536,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 537,
          "chinese_text": "智能问答 自动回答用户问题",
          "english_text": "Intelligent Q A Automatically answer user questions",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 538,
          "chinese_text": "推荐系统 个性化内容推荐",
          "english_text": "Recommendation Systems Personalized content recommendation",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 539,
          "chinese_text": "决策支持 辅助决策制定",
          "english_text": "Decision Support Assist decision making",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 540,
          "chinese_text": "知识发现 发现新知识和模式",
          "english_text": "Knowledge Discovery Discover new knowledge and patterns",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 542,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 544,
          "chinese_text": "案例",
          "english_text": "Case Google Knowledge Graph",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 546,
          "chinese_text": "项目名称",
          "english_text": "Project Name Google Knowledge Graph",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 547,
          "chinese_text": "应用场景 搜索引擎增强",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 548,
          "chinese_text": "技术实现 大规模知识图谱和智能问答",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 549,
          "chinese_text": "效果评估 显著提升搜索质量和用户体验",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 551,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 553,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 555,
          "chinese_text": "研究方向 多模态应用",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 557,
          "chinese_text": "研究内容 结合文本 图像 音频的多模态知识图谱应用",
          "english_text": "Research Content",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 558,
          "chinese_text": "技术突破 实现了跨模态的知识理解和推理",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 559,
          "chinese_text": "应用前景 在智能助手和虚拟现实中有广泛应用",
          "english_text": "Application Prospects",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 561,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 563,
          "chinese_text": "趋势 边缘计算应用",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 565,
          "chinese_text": "中文 将知识图谱应用部署到边缘设备 实现本地化智能服务",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 566,
          "chinese_text": "",
          "english_text": "English Deploy knowledge graph applications to edge devices for localized intelligent services",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 568,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 570,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 572,
          "chinese_text": "要点 应用实践是知识图谱价值的最终体现 将理论转化为实际价值",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 573,
          "chinese_text": "要点 现代应用系统结合了多种技术 提供智能化的服务体验",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 574,
          "chinese_text": "要点 应用实践正在向多模态和边缘计算方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 576,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 578,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 580,
          "chinese_text": "短期目标 提高应用的准确性和用户体验",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 581,
          "chinese_text": "中期目标 实现多模态和跨领域应用",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 582,
          "chinese_text": "长期目标 构建无处不在的智能应用生态系统",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 584,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 586,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 588,
          "chinese_text": "",
          "english_text": "Berant J et al Semantic parsing on freebase from question answer pairs In Proceedings of the Conference on Empirical Methods in Natural Language Processing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 589,
          "chinese_text": "",
          "english_text": "Bordes A et al Translating embeddings for modeling multi relational data In Advances in neural information processing systems",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 590,
          "chinese_text": "",
          "english_text": "Wang Z et al Knowledge graph embedding by translating on hyperplanes In Twenty eighth AAAI conference on artificial intelligence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 592,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 594,
          "chinese_text": "",
          "english_text": "Google Knowledge Graph API https developers google com knowledge graph Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 595,
          "chinese_text": "",
          "english_text": "Amazon Neptune https aws amazon com neptune Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 596,
          "chinese_text": "",
          "english_text": "Neo j Graph Database https neo j com Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 598,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 600,
          "chinese_text": "",
          "english_text": "Stanford CS N Natural Language Processing with Deep Learning https web stanford edu class cs n Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 601,
          "chinese_text": "",
          "english_text": "Knowledge Graph Conference https www knowledgegraph tech Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 603,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 605,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 607,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 608,
          "chinese_text": "推理系统",
          "english_text": "reasoning systems README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 609,
          "chinese_text": "知识抽取",
          "english_text": "knowledge extraction README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 611,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 613,
          "chinese_text": "",
          "english_text": "Google Knowledge Graph https developers google com knowledge graph",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 614,
          "chinese_text": "",
          "english_text": "Amazon Neptune https aws amazon com neptune",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 615,
          "chinese_text": "",
          "english_text": "Neo j https neo j com",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 617,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 619,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 620,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 621,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\08-formal-methods\\README.md",
      "total_lines": 476,
      "bilingual_lines": 144,
      "bilingual_ratio": 0.3025210084033613,
      "section_bilingual_ratio": 0.7708333333333334,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.10094637223974763,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "形式化方法",
          "english_text": "Formal Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "形式化方法是知识图谱中用于确保系统正确性和可靠性的数学技术 包括形式化验证 模型检查 定理证明和形式化规范等 它通过严格的数学逻辑和形式化语言 对知识图谱系统的设计 实现和验证进行精确描述和分析 确保系统的正确性 一致性和完备性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Formal methods are mathematical techniques used in knowledge graphs to ensure system correctness and reliability including formal verification model checking theorem proving and formal specification They use rigorous mathematical logic and formal languages to precisely describe and analyze the design implementation and verification of knowledge graph systems ensuring correctness consistency and completeness",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 理论基础时期 形式化逻辑和证明理论",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 工具发展时期 形式化验证工具和模型检查器",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 应用实践时期 至今 在知识图谱和 系统中的实际应用",
          "english_text": "Phase s AI",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "严格性 基于严格的数学逻辑",
          "english_text": "Rigor Based on rigorous mathematical logic",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "可验证性 系统性质可数学证明",
          "english_text": "Verifiability System properties can be mathematically proven",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "完备性 覆盖所有可能情况",
          "english_text": "Completeness Cover all possible cases",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "自动化 支持自动化验证",
          "english_text": "Automation Support automated verification",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "FM S V P T A",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "形式化规范",
          "english_text": "S Formal Specification",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "验证方法",
          "english_text": "V Verification Methods",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "证明系统",
          "english_text": "P Proof System",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "定理证明器",
          "english_text": "T Theorem Prover",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 48,
          "chinese_text": "自动化工具",
          "english_text": "A Automation Tools",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 51,
          "chinese_text": "形式化方法系统 是一个五元组 其中形式化规范 定义系统的正确性要求 验证方法 用于检查系统是否满足规范 证明系统 提供逻辑推理规则 定理证明器 自动进行证明 自动化工具 支持整个验证过程",
          "english_text": "FM S V P T A",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 53,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "定理 形式化验证完备性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 56,
          "chinese_text": "如果形式化验证系统 是完备的 且规范 是正确表达的 则对于任何系统实现 如果 满足 则验证器能够证明",
          "english_text": "FM S I IS I S",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 58,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 60,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 61,
          "chinese_text": "设形式化验证系统 是完备的",
          "english_text": "FM",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 62,
          "chinese_text": "对于任意系统实现 和规范",
          "english_text": "IS",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 63,
          "chinese_text": "如果 满足 即",
          "english_text": "IS I S",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "根据完备性定义 如果 则验证器能够证明",
          "english_text": "I S",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 65,
          "chinese_text": "因此 验证器能够证明",
          "english_text": "I S",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 66,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 68,
          "chinese_text": "定理 模型检查正确性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 69,
          "chinese_text": "如果模型检查器 是正确的 且模型 满足性质 则 返回 当且仅当",
          "english_text": "MC M MC M TrueM",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 71,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 73,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 74,
          "chinese_text": "设模型检查器 是正确的",
          "english_text": "MC",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 75,
          "chinese_text": "对于模型 和性质",
          "english_text": "M",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 76,
          "chinese_text": "如果 则",
          "english_text": "M MC M True",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 77,
          "chinese_text": "如果 则",
          "english_text": "M MC M False",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 78,
          "chinese_text": "因此 当且仅当",
          "english_text": "MC M TrueM",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 79,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 81,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 83,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 85,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 86,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 87,
          "chinese_text": "系统规范 形式化建模",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 88,
          "chinese_text": "性质定义",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 89,
          "chinese_text": "验证方法",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "证明生成",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 91,
          "chinese_text": "结果验证",
          "english_text": "E F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 93,
          "chinese_text": "状态机模型",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "时序逻辑",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 95,
          "chinese_text": "谓词逻辑",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 97,
          "chinese_text": "安全性性质",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "活性性质",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 99,
          "chinese_text": "公平性性质",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 101,
          "chinese_text": "模型检查",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 102,
          "chinese_text": "定理证明",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 103,
          "chinese_text": "抽象解释",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 104,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 106,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 108,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 110,
          "chinese_text": "优势 严格性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 112,
          "chinese_text": "中文 形式化方法基于严格的数学逻辑 能够提供系统正确性的数学保证",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 113,
          "chinese_text": "",
          "english_text": "English Formal methods are based on rigorous mathematical logic and can provide mathematical guarantees of system correctness",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 115,
          "chinese_text": "优势 自动化程度高",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 117,
          "chinese_text": "中文 现代形式化工具支持自动化验证 大大提高了验证效率",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 118,
          "chinese_text": "",
          "english_text": "English Modern formal tools support automated verification greatly improving verification efficiency",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 120,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 122,
          "chinese_text": "局限性 复杂性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 124,
          "chinese_text": "中文 形式化方法的学习曲线陡峭 需要深厚的数学和逻辑背景",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 125,
          "chinese_text": "",
          "english_text": "English Formal methods have a steep learning curve and require deep mathematical and logical background",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 127,
          "chinese_text": "局限性 可扩展性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 129,
          "chinese_text": "中文 在大规模复杂系统中 形式化验证面临状态空间爆炸问题",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 130,
          "chinese_text": "",
          "english_text": "English In large scale complex systems formal verification faces state space explosion problems",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 132,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 134,
          "chinese_text": "争议点 实用性 严格性",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 136,
          "chinese_text": "支持观点 形式化方法提供严格的正确性保证 值得投入学习成本",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "反对观点 形式化方法过于复杂 在实际项目中难以广泛应用",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 138,
          "chinese_text": "中立分析 轻量级形式化方法结合传统测试可能是最佳平衡",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 140,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 142,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 144,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 146,
          "chinese_text": "模型检查算法",
          "english_text": "Model Checking Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 148,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 149,
          "chinese_text": "实现示例",
          "english_text": "Rust",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 150,
          "chinese_text": "",
          "english_text": "use std collections HashMap HashSet VecDeque",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 153,
          "chinese_text": "",
          "english_text": "pub struct State",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 154,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 155,
          "chinese_text": "",
          "english_text": "pub variables HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 156,
          "chinese_text": "",
          "english_text": "pub transitions Vec Transition",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 157,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 159,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "pub struct Transition",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 161,
          "chinese_text": "",
          "english_text": "pub source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 162,
          "chinese_text": "",
          "english_text": "pub target String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 163,
          "chinese_text": "",
          "english_text": "pub condition String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 164,
          "chinese_text": "",
          "english_text": "pub action String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 165,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 168,
          "chinese_text": "",
          "english_text": "pub struct ModelChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 169,
          "chinese_text": "",
          "english_text": "pub states HashMap String State",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 170,
          "chinese_text": "",
          "english_text": "pub initial state String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "",
          "english_text": "pub properties Vec Property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 172,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 174,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 175,
          "chinese_text": "",
          "english_text": "pub struct Property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 176,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 177,
          "chinese_text": "",
          "english_text": "pub formula String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "pub property type PropertyType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 182,
          "chinese_text": "",
          "english_text": "pub enum PropertyType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 183,
          "chinese_text": "",
          "english_text": "Safety",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 184,
          "chinese_text": "",
          "english_text": "Liveness",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 185,
          "chinese_text": "",
          "english_text": "Fairness",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 186,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "impl ModelChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 189,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 190,
          "chinese_text": "",
          "english_text": "ModelChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 191,
          "chinese_text": "",
          "english_text": "states HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 192,
          "chinese_text": "",
          "english_text": "initial state s to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 193,
          "chinese_text": "",
          "english_text": "properties Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 197,
          "chinese_text": "",
          "english_text": "pub fn add state mut self state State",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "self states insert state id clone state",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 199,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "pub fn add property mut self property Property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "self properties push property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 203,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "pub fn check property self property name str bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "",
          "english_text": "if let Some property self properties iter find p p name property name",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 207,
          "chinese_text": "",
          "english_text": "match property property type",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "PropertyType Safety self check safety property property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "PropertyType Liveness self check liveness property property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 210,
          "chinese_text": "",
          "english_text": "PropertyType Fairness self check fairness property property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 213,
          "chinese_text": "",
          "english_text": "false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 215,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "",
          "english_text": "fn check safety property self property Property bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 218,
          "chinese_text": "使用可达性分析检查安全性性质",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "let mut reachable states HashSet new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 220,
          "chinese_text": "",
          "english_text": "let mut queue VecDeque new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "",
          "english_text": "queue push back self initial state clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 223,
          "chinese_text": "",
          "english_text": "reachable states insert self initial state clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 225,
          "chinese_text": "",
          "english_text": "while let Some state id queue pop front",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 226,
          "chinese_text": "",
          "english_text": "if let Some state self states get state id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 227,
          "chinese_text": "",
          "english_text": "for transition in state transitions",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 228,
          "chinese_text": "",
          "english_text": "if reachable states contains transition target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 229,
          "chinese_text": "",
          "english_text": "reachable states insert transition target clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 230,
          "chinese_text": "",
          "english_text": "queue push back transition target clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 232,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 233,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 236,
          "chinese_text": "检查所有可达状态是否满足性质",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 237,
          "chinese_text": "",
          "english_text": "for state id in reachable states",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "",
          "english_text": "if self evaluate property property state id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "return false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 241,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 243,
          "chinese_text": "",
          "english_text": "true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 244,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 246,
          "chinese_text": "",
          "english_text": "fn check liveness property self property Property bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "使用循环检测检查活性性质",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "let mut visited HashSet new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 249,
          "chinese_text": "",
          "english_text": "let mut stack Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 251,
          "chinese_text": "",
          "english_text": "self dfs check liveness self initial state property mut visited mut stack",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "",
          "english_text": "fn dfs check liveness self state id str property Property visited mut HashSet String stack mut Vec String bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "",
          "english_text": "if stack contains state id to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 256,
          "chinese_text": "检测到循环 检查循环中是否包含满足性质的状态",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "return self check cycle satisfies property stack property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "",
          "english_text": "if visited contains state id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 261,
          "chinese_text": "",
          "english_text": "return true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 262,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "visited insert state id to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 265,
          "chinese_text": "",
          "english_text": "stack push state id to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 267,
          "chinese_text": "",
          "english_text": "if let Some state self states get state id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 268,
          "chinese_text": "",
          "english_text": "for transition in state transitions",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "if self dfs check liveness transition target property visited stack",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 270,
          "chinese_text": "",
          "english_text": "return false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 271,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 272,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 273,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "stack pop",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 276,
          "chinese_text": "",
          "english_text": "true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 277,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "fn check fairness property self property Property bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "检查公平性性质",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 281,
          "chinese_text": "简化实现",
          "english_text": "true",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 284,
          "chinese_text": "",
          "english_text": "fn evaluate property self property Property state id str bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 285,
          "chinese_text": "在给定状态下评估性质",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 286,
          "chinese_text": "",
          "english_text": "if let Some state self states get state id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "简化的性质评估",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "property formula contains state id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 289,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 291,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 294,
          "chinese_text": "",
          "english_text": "fn check cycle satisfies property self cycle String property Property bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 295,
          "chinese_text": "检查循环中是否包含满足性质的状态",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "cycle iter any state id self evaluate property property state id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 298,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 299,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "实现示例",
          "english_text": "Haskell",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "module FormalMethods where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 305,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 307,
          "chinese_text": "",
          "english_text": "import Data Set Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "",
          "english_text": "import qualified Data Set as Set",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 312,
          "chinese_text": "",
          "english_text": "data State State",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "",
          "english_text": "stateId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 314,
          "chinese_text": "",
          "english_text": "stateVariables Map Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "stateTransitions Transition",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 316,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 318,
          "chinese_text": "",
          "english_text": "data Transition Transition",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "source Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "target Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "condition Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "action Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 325,
          "chinese_text": "",
          "english_text": "data Property Property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "propertyName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 327,
          "chinese_text": "",
          "english_text": "propertyFormula Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "propertyType PropertyType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 329,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 331,
          "chinese_text": "",
          "english_text": "data PropertyType Safety Liveness Fairness",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 334,
          "chinese_text": "",
          "english_text": "data ModelChecker ModelChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "",
          "english_text": "states Map Text State",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 336,
          "chinese_text": "",
          "english_text": "initialState Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "properties Property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "emptyModelChecker ModelChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "emptyModelChecker ModelChecker Map empty s",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "addState State ModelChecker ModelChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 344,
          "chinese_text": "",
          "english_text": "addState state checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 345,
          "chinese_text": "",
          "english_text": "checker states Map insert stateId state state states checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 347,
          "chinese_text": "",
          "english_text": "addProperty Property ModelChecker ModelChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 348,
          "chinese_text": "",
          "english_text": "addProperty property checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 349,
          "chinese_text": "",
          "english_text": "checker properties property properties checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 351,
          "chinese_text": "",
          "english_text": "checkProperty ModelChecker Text Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 352,
          "chinese_text": "",
          "english_text": "checkProperty checker propertyName",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 353,
          "chinese_text": "",
          "english_text": "case findProperty checker propertyName of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 354,
          "chinese_text": "",
          "english_text": "Just property checkPropertyByType checker property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "",
          "english_text": "Nothing False",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "findProperty ModelChecker Text Maybe Property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 358,
          "chinese_text": "",
          "english_text": "findProperty checker name",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 359,
          "chinese_text": "",
          "english_text": "find p propertyName p name properties checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 361,
          "chinese_text": "",
          "english_text": "checkPropertyByType ModelChecker Property Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 362,
          "chinese_text": "",
          "english_text": "checkPropertyByType checker property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "case propertyType property of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "Safety checkSafetyProperty checker property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "",
          "english_text": "Liveness checkLivenessProperty checker property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 366,
          "chinese_text": "",
          "english_text": "Fairness checkFairnessProperty checker property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 368,
          "chinese_text": "",
          "english_text": "checkSafetyProperty ModelChecker Property Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 369,
          "chinese_text": "",
          "english_text": "checkSafetyProperty checker property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 370,
          "chinese_text": "",
          "english_text": "let reachableStates getReachableStates checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 371,
          "chinese_text": "",
          "english_text": "in all stateId evaluateProperty checker property stateId reachableStates",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 373,
          "chinese_text": "",
          "english_text": "getReachableStates ModelChecker Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 374,
          "chinese_text": "",
          "english_text": "getReachableStates checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 375,
          "chinese_text": "",
          "english_text": "let initial initialState checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 376,
          "chinese_text": "",
          "english_text": "allStates Map keys states checker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 377,
          "chinese_text": "",
          "english_text": "in filter state isReachable checker initial state allStates",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "isReachable ModelChecker Text Text Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "isReachable checker from to",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "if from to",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 382,
          "chinese_text": "",
          "english_text": "then True",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "else case Map lookup from states checker of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 384,
          "chinese_text": "",
          "english_text": "Just state any trans isReachable checker target trans to stateTransitions state",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 385,
          "chinese_text": "",
          "english_text": "Nothing False",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 387,
          "chinese_text": "",
          "english_text": "checkLivenessProperty ModelChecker Property Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 388,
          "chinese_text": "",
          "english_text": "checkLivenessProperty checker property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 389,
          "chinese_text": "简化的活性性质检查",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "True",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 392,
          "chinese_text": "",
          "english_text": "checkFairnessProperty ModelChecker Property Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "checkFairnessProperty checker property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "简化的公平性性质检查",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 395,
          "chinese_text": "",
          "english_text": "True",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "",
          "english_text": "evaluateProperty ModelChecker Property Text Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 398,
          "chinese_text": "",
          "english_text": "evaluateProperty checker property stateId",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "case Map lookup stateId states checker of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "Just state T isInfixOf stateId propertyFormula property",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "Nothing False",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 402,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 404,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 406,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 408,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "pub struct FormalVerificationSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "pub specification Specification",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 412,
          "chinese_text": "",
          "english_text": "pub model checker ModelChecker",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "",
          "english_text": "pub theorem prover TheoremProver",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "pub abstraction engine AbstractionEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 415,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 418,
          "chinese_text": "",
          "english_text": "pub struct Specification",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "",
          "english_text": "pub requirements Vec Requirement",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 420,
          "chinese_text": "",
          "english_text": "pub invariants Vec Invariant",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 421,
          "chinese_text": "",
          "english_text": "pub assumptions Vec Assumption",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 422,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 424,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 425,
          "chinese_text": "",
          "english_text": "pub struct Requirement",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 426,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 427,
          "chinese_text": "",
          "english_text": "pub description String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "pub formula String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 429,
          "chinese_text": "",
          "english_text": "pub priority Priority",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 432,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "",
          "english_text": "pub enum Priority",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "Critical",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "High",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 436,
          "chinese_text": "",
          "english_text": "Medium",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 437,
          "chinese_text": "",
          "english_text": "Low",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 438,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 440,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 441,
          "chinese_text": "",
          "english_text": "pub struct Invariant",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 442,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 443,
          "chinese_text": "",
          "english_text": "pub condition String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 444,
          "chinese_text": "",
          "english_text": "pub scope Scope",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 447,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "",
          "english_text": "pub enum Scope",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 449,
          "chinese_text": "",
          "english_text": "Global",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 450,
          "chinese_text": "",
          "english_text": "Local",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 451,
          "chinese_text": "",
          "english_text": "Temporal",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 452,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 454,
          "chinese_text": "",
          "english_text": "impl FormalVerificationSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 455,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 456,
          "chinese_text": "",
          "english_text": "FormalVerificationSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 457,
          "chinese_text": "",
          "english_text": "specification Specification",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 458,
          "chinese_text": "",
          "english_text": "requirements Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 459,
          "chinese_text": "",
          "english_text": "invariants Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 460,
          "chinese_text": "",
          "english_text": "assumptions Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 462,
          "chinese_text": "",
          "english_text": "model checker ModelChecker new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 463,
          "chinese_text": "",
          "english_text": "theorem prover TheoremProver new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 464,
          "chinese_text": "",
          "english_text": "abstraction engine AbstractionEngine new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 465,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 466,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 468,
          "chinese_text": "",
          "english_text": "pub fn verify system self system model SystemModel VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 469,
          "chinese_text": "",
          "english_text": "let mut results Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "模型检查",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 472,
          "chinese_text": "",
          "english_text": "for requirement in self specification requirements",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "",
          "english_text": "let result self model checker check property requirement formula",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 474,
          "chinese_text": "",
          "english_text": "results push VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 475,
          "chinese_text": "",
          "english_text": "requirement id requirement id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 476,
          "chinese_text": "",
          "english_text": "satisfied result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 477,
          "chinese_text": "",
          "english_text": "method Model Checking to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 478,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 479,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 481,
          "chinese_text": "定理证明",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 482,
          "chinese_text": "",
          "english_text": "for invariant in self specification invariants",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 483,
          "chinese_text": "",
          "english_text": "let result self theorem prover prove invariant invariant",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 484,
          "chinese_text": "",
          "english_text": "results push VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 485,
          "chinese_text": "",
          "english_text": "requirement id invariant id clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 486,
          "chinese_text": "",
          "english_text": "satisfied result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 487,
          "chinese_text": "",
          "english_text": "method Theorem Proving to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 488,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 489,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 491,
          "chinese_text": "",
          "english_text": "VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 492,
          "chinese_text": "",
          "english_text": "requirement id overall to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 493,
          "chinese_text": "",
          "english_text": "satisfied results iter all r r satisfied",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 494,
          "chinese_text": "",
          "english_text": "method Combined to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 495,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 496,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 497,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 498,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 500,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 502,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 504,
          "chinese_text": "模型检查 状态空间爆炸",
          "english_text": "Model Checking O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 505,
          "chinese_text": "定理证明",
          "english_text": "Theorem Proving O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 506,
          "chinese_text": "抽象解释",
          "english_text": "Abstract Interpretation O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 507,
          "chinese_text": "符号执行",
          "english_text": "Symbolic Execution O n log n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 509,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 511,
          "chinese_text": "状态存储",
          "english_text": "State Storage O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 512,
          "chinese_text": "证明缓存",
          "english_text": "Proof Cache O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 513,
          "chinese_text": "抽象域",
          "english_text": "Abstract Domain O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 515,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 517,
          "chinese_text": "案例 知识图谱一致性验证系统",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 519,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 520,
          "chinese_text": "构建基于形式化方法的知识图谱一致性验证系统 确保知识图谱的逻辑一致性和数据完整性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 522,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 524,
          "chinese_text": "使用时序逻辑定义知识图谱的语义规范",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 525,
          "chinese_text": "实现模型检查器验证一致性性质",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 526,
          "chinese_text": "集成定理证明器进行复杂推理验证",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 527,
          "chinese_text": "提供反例生成和调试支持",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 529,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 531,
          "chinese_text": "验证覆盖率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 532,
          "chinese_text": "错误检测率",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 533,
          "chinese_text": "验证时间 分钟",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 534,
          "chinese_text": "系统可靠性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 536,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 538,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 540,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 541,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 542,
          "chinese_text": "系统验证 验证系统正确性和安全性",
          "english_text": "System Verification Verify system correctness and safety",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 543,
          "chinese_text": "协议验证 验证通信协议的正确性",
          "english_text": "Protocol Verification Verify correctness of communication protocols",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 544,
          "chinese_text": "硬件验证 验证硬件设计的正确性",
          "english_text": "Hardware Verification Verify correctness of hardware designs",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 545,
          "chinese_text": "软件验证 验证软件程序的正确性",
          "english_text": "Software Verification Verify correctness of software programs",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 547,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 549,
          "chinese_text": "案例 软件验证",
          "english_text": "Case NASA",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 551,
          "chinese_text": "项目名称",
          "english_text": "Project Name NASA Formal Methods",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 552,
          "chinese_text": "应用场景 航天软件系统验证",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 553,
          "chinese_text": "技术实现 形式化规范和模型检查",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 554,
          "chinese_text": "效果评估 显著提高了软件系统的可靠性",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 556,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 558,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 560,
          "chinese_text": "研究方向 机器学习形式化验证",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 562,
          "chinese_text": "研究内容 对机器学习系统进行形式化验证",
          "english_text": "Research Content",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 563,
          "chinese_text": "技术突破 实现了神经网络的形式化验证",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 564,
          "chinese_text": "应用前景 在自动驾驶和医疗 中有重要应用",
          "english_text": "Application Prospects AI",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 566,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 568,
          "chinese_text": "趋势 自动化程度提升",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 570,
          "chinese_text": "中文 形式化验证工具越来越自动化 降低了使用门槛",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 571,
          "chinese_text": "",
          "english_text": "English Formal verification tools are becoming more automated lowering the barrier to entry",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 573,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 575,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 577,
          "chinese_text": "要点 形式化方法是确保系统正确性的重要技术 提供数学保证",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 578,
          "chinese_text": "要点 现代形式化工具结合了多种验证方法 提高了验证效率",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 579,
          "chinese_text": "要点 形式化方法正在向自动化和智能化方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 581,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 583,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 585,
          "chinese_text": "短期目标 提高形式化工具的易用性和自动化程度",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 586,
          "chinese_text": "中期目标 扩展到更多应用领域",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 587,
          "chinese_text": "长期目标 实现完全自动化的形式化验证",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 589,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 591,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 593,
          "chinese_text": "",
          "english_text": "Clarke E M et al Model checking MIT press",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 594,
          "chinese_text": "",
          "english_text": "Baier C Katoen J P Principles of model checking MIT press",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 595,
          "chinese_text": "",
          "english_text": "Huth M Ryan M Logic in computer science modelling and reasoning about systems Cambridge University Press",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 597,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 599,
          "chinese_text": "",
          "english_text": "SPIN Model Checker http spinroot com Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 600,
          "chinese_text": "",
          "english_text": "NuSMV Model Checker https nusmv fbk eu Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 601,
          "chinese_text": "",
          "english_text": "Z Theorem Prover https github com Z Prover z Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 603,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 605,
          "chinese_text": "",
          "english_text": "Stanford CS Formal Methods https web stanford edu class cs Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 606,
          "chinese_text": "",
          "english_text": "MIT Computer Language Engineering https ocw mit edu courses electrical engineering and computer science computer language engineering spring Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 608,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 610,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 612,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 613,
          "chinese_text": "推理系统",
          "english_text": "reasoning systems README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 614,
          "chinese_text": "应用实践",
          "english_text": "applications README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 616,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 618,
          "chinese_text": "",
          "english_text": "SPIN Model Checker http spinroot com",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 619,
          "chinese_text": "",
          "english_text": "NuSMV Model Checker https nusmv fbk eu",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 620,
          "chinese_text": "",
          "english_text": "Z Theorem Prover https github com Z Prover z",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 622,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 624,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 625,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 626,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\09-engineering-practice\\README.md",
      "total_lines": 611,
      "bilingual_lines": 144,
      "bilingual_ratio": 0.23567921440261866,
      "section_bilingual_ratio": 0.6727272727272727,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.0651685393258427,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "工程实践是知识图谱技术在实际项目中的系统化应用 涵盖系统架构设计 性能优化 部署运维 质量保证等各个方面 它通过工程化的方法将理论知识转化为可用的系统和服务 确保知识图谱系统的高效性 可靠性和可维护性 实现从理论到实践的完整闭环",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Engineering practice is the systematic application of knowledge graph technology in real world projects covering system architecture design performance optimization deployment operations quality assurance and other aspects It transforms theoretical knowledge into usable systems and services through engineering methods ensuring the efficiency reliability and maintainability of knowledge graph systems achieving a complete cycle from theory to practice",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 基础工程时期 基础系统架构和简单部署",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 规模化工程时期 大规模系统架构和自动化部署",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 智能化工程时期 至今 智能化运维和自适应优化",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "系统性 完整的工程体系和方法论",
          "english_text": "Systematic Complete engineering system and methodology",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "可扩展性 支持大规模系统扩展",
          "english_text": "Scalable Support large scale system expansion",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "可靠性 高可用性和容错能力",
          "english_text": "Reliable High availability and fault tolerance",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "可维护性 易于维护和升级",
          "english_text": "Maintainable Easy to maintain and upgrade",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "EP A P D Q M",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "架构设计",
          "english_text": "A Architecture Design",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "性能优化",
          "english_text": "P Performance Optimization",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "部署运维",
          "english_text": "D Deployment Operations",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "质量保证",
          "english_text": "Q Quality Assurance",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 48,
          "chinese_text": "监控管理",
          "english_text": "M Monitoring Management",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 51,
          "chinese_text": "工程实践系统 是一个五元组 其中架构设计 定义系统的整体结构 性能优化 确保系统的高效运行 部署运维 负责系统的部署和维护 质量保证 确保系统的正确性 监控管理 提供系统的实时监控和管理",
          "english_text": "EP A P D Q M",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 53,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "定理 工程实践完备性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 56,
          "chinese_text": "如果工程实践系统 是完备的 且架构设计 是合理的 则对于任何功能需求 系统都能提供相应的实现 满足",
          "english_text": "EP A F I F I",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 58,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 60,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 61,
          "chinese_text": "设工程实践系统 是完备的",
          "english_text": "EP",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 62,
          "chinese_text": "对于任意功能需求 如果架构设计 是合理的",
          "english_text": "F A",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 63,
          "chinese_text": "则存在实现 能够满足",
          "english_text": "IF",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "根据完备性定义 如果需求存在 则实现能够提供",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 65,
          "chinese_text": "因此 系统能够提供实现 满足需求",
          "english_text": "IF",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 66,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 68,
          "chinese_text": "定理 系统性能优化定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 69,
          "chinese_text": "如果性能优化策略 是有效的 且系统负载 在合理范围内 则优化后的系统性能 满足 其中 为优化增益系数",
          "english_text": "P L P P P",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 71,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 73,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 74,
          "chinese_text": "设性能优化策略 是有效的",
          "english_text": "P",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 75,
          "chinese_text": "对于系统负载 如果 在合理范围内",
          "english_text": "L L",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 76,
          "chinese_text": "则优化后的性能 满足",
          "english_text": "P P P",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 77,
          "chinese_text": "根据优化有效性 如果策略有效 则性能提升",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 78,
          "chinese_text": "因此",
          "english_text": "P P",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 79,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 81,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 83,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 85,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 86,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 87,
          "chinese_text": "需求分析 架构设计",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 88,
          "chinese_text": "系统实现",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 89,
          "chinese_text": "性能优化",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "部署运维",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 91,
          "chinese_text": "质量监控",
          "english_text": "E F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 93,
          "chinese_text": "微服务架构",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "分布式系统",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 95,
          "chinese_text": "容器化部署",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 97,
          "chinese_text": "代码实现",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "单元测试",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 99,
          "chinese_text": "集成测试",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 101,
          "chinese_text": "算法优化",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 102,
          "chinese_text": "缓存策略",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 103,
          "chinese_text": "负载均衡",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 104,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 106,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 108,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 110,
          "chinese_text": "优势 系统性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 112,
          "chinese_text": "中文 工程实践提供了完整的系统化方法论 确保项目的成功实施",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 113,
          "chinese_text": "",
          "english_text": "English Engineering practice provides a complete systematic methodology to ensure successful project implementation",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 115,
          "chinese_text": "优势 可验证性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 117,
          "chinese_text": "中文 通过质量保证和监控体系 能够验证系统的正确性和性能",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 118,
          "chinese_text": "",
          "english_text": "English Through quality assurance and monitoring systems the correctness and performance of the system can be verified",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 120,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 122,
          "chinese_text": "局限性 复杂性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 124,
          "chinese_text": "中文 大规模系统的工程实践涉及多个复杂环节 增加了管理难度",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 125,
          "chinese_text": "",
          "english_text": "English Engineering practice for large scale systems involves multiple complex aspects increasing management difficulty",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 127,
          "chinese_text": "局限性 成本",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 129,
          "chinese_text": "中文 高质量的工程实践需要投入大量资源 包括人力 时间和资金",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 130,
          "chinese_text": "",
          "english_text": "English High quality engineering practice requires significant resources including human resources time and funding",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 132,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 134,
          "chinese_text": "争议点 敏捷 传统",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 136,
          "chinese_text": "支持观点 敏捷开发能够快速响应需求变化 提高开发效率",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "反对观点 传统瀑布模型能够确保系统质量和稳定性",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 138,
          "chinese_text": "中立分析 混合开发模式结合了两种方法的优势 可能是最佳选择",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 140,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 142,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 144,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 146,
          "chinese_text": "系统架构设计算法",
          "english_text": "System Architecture Design Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 148,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 149,
          "chinese_text": "实现示例",
          "english_text": "Rust",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 150,
          "chinese_text": "",
          "english_text": "use std collections HashMap HashSet",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 151,
          "chinese_text": "",
          "english_text": "use std sync Arc Mutex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 153,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 154,
          "chinese_text": "",
          "english_text": "pub struct SystemComponent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 155,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 156,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 157,
          "chinese_text": "",
          "english_text": "pub component type ComponentType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 158,
          "chinese_text": "",
          "english_text": "pub dependencies Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 159,
          "chinese_text": "",
          "english_text": "pub interfaces Vec Interface",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 162,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 163,
          "chinese_text": "",
          "english_text": "pub enum ComponentType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 164,
          "chinese_text": "",
          "english_text": "Service",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 165,
          "chinese_text": "",
          "english_text": "Database",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 166,
          "chinese_text": "",
          "english_text": "Cache",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "LoadBalancer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 168,
          "chinese_text": "",
          "english_text": "Gateway",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 169,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 172,
          "chinese_text": "",
          "english_text": "pub struct Interface",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 173,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 174,
          "chinese_text": "",
          "english_text": "pub method String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 175,
          "chinese_text": "",
          "english_text": "pub parameters Vec Parameter",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 176,
          "chinese_text": "",
          "english_text": "pub return type String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 177,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 180,
          "chinese_text": "",
          "english_text": "pub struct Parameter",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 182,
          "chinese_text": "",
          "english_text": "pub param type String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 183,
          "chinese_text": "",
          "english_text": "pub required bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 184,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 186,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 187,
          "chinese_text": "",
          "english_text": "pub struct SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "pub components HashMap String SystemComponent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 189,
          "chinese_text": "",
          "english_text": "pub connections Vec Connection",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 190,
          "chinese_text": "",
          "english_text": "pub constraints Vec Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 191,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 193,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "pub struct Connection",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "pub source String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 196,
          "chinese_text": "",
          "english_text": "pub target String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 197,
          "chinese_text": "",
          "english_text": "pub protocol String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "pub data format String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 199,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "pub struct Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 203,
          "chinese_text": "",
          "english_text": "pub component id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "",
          "english_text": "pub constraint type ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "pub value String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "pub enum ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 210,
          "chinese_text": "",
          "english_text": "Performance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "",
          "english_text": "Security",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "Scalability",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 213,
          "chinese_text": "",
          "english_text": "Reliability",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 214,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 216,
          "chinese_text": "",
          "english_text": "impl SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 218,
          "chinese_text": "",
          "english_text": "SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "components HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 220,
          "chinese_text": "",
          "english_text": "connections Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "",
          "english_text": "constraints Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 222,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 223,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 225,
          "chinese_text": "",
          "english_text": "pub fn add component mut self component SystemComponent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 226,
          "chinese_text": "",
          "english_text": "self components insert component id clone component",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 227,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 229,
          "chinese_text": "",
          "english_text": "pub fn add connection mut self connection Connection",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 230,
          "chinese_text": "",
          "english_text": "self connections push connection",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 233,
          "chinese_text": "",
          "english_text": "pub fn add constraint mut self constraint Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "self constraints push constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 235,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 237,
          "chinese_text": "",
          "english_text": "pub fn validate architecture self ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "",
          "english_text": "let mut result ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "is valid true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "errors Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 241,
          "chinese_text": "",
          "english_text": "warnings Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 242,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 244,
          "chinese_text": "检查组件依赖",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 245,
          "chinese_text": "",
          "english_text": "for component in self components values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 246,
          "chinese_text": "",
          "english_text": "for dependency in component dependencies",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "",
          "english_text": "if self components contains key dependency",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "result errors push format Component depends on non existent component component id dependency",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 249,
          "chinese_text": "",
          "english_text": "result is valid false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 250,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 251,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "检查连接一致性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "",
          "english_text": "for connection in self connections",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 256,
          "chinese_text": "",
          "english_text": "if self components contains key connection source",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "result errors push format Connection source does not exist connection source",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "result is valid false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 259,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "",
          "english_text": "if self components contains key connection target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 261,
          "chinese_text": "",
          "english_text": "result errors push format Connection target does not exist connection target",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 262,
          "chinese_text": "",
          "english_text": "result is valid false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 263,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "检查约束有效性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 267,
          "chinese_text": "",
          "english_text": "for constraint in self constraints",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 268,
          "chinese_text": "",
          "english_text": "if self components contains key constraint component id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "result errors push format Constraint for non existent component constraint component id",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 270,
          "chinese_text": "",
          "english_text": "result is valid false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 271,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 272,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 274,
          "chinese_text": "",
          "english_text": "result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 277,
          "chinese_text": "",
          "english_text": "pub fn optimize performance self PerformanceOptimization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 278,
          "chinese_text": "",
          "english_text": "let mut optimization PerformanceOptimization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "cache strategies Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "",
          "english_text": "load balancing Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 281,
          "chinese_text": "",
          "english_text": "database optimizations Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 284,
          "chinese_text": "识别需要缓存的组件",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 285,
          "chinese_text": "",
          "english_text": "for component in self components values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 286,
          "chinese_text": "",
          "english_text": "if component component type ComponentType Service",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "",
          "english_text": "optimization cache strategies push format Cache for service component name",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 289,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 291,
          "chinese_text": "识别负载均衡需求",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "let service components Vec self components values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 293,
          "chinese_text": "",
          "english_text": "filter c c component type ComponentType Service",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 294,
          "chinese_text": "",
          "english_text": "collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "if service components len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "optimization load balancing push Implement load balancer for multiple services to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 298,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "数据库优化",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "let db components Vec self components values",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "",
          "english_text": "filter c c component type ComponentType Database",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 303,
          "chinese_text": "",
          "english_text": "collect",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 305,
          "chinese_text": "",
          "english_text": "for db in db components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 306,
          "chinese_text": "",
          "english_text": "optimization database optimizations push format Optimize queries for database db name",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 307,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 309,
          "chinese_text": "",
          "english_text": "optimization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 311,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 313,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 314,
          "chinese_text": "",
          "english_text": "pub struct ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "pub is valid bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 316,
          "chinese_text": "",
          "english_text": "pub errors Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "",
          "english_text": "pub warnings Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 318,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "pub struct PerformanceOptimization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "pub cache strategies Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "",
          "english_text": "pub load balancing Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 324,
          "chinese_text": "",
          "english_text": "pub database optimizations Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 325,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 329,
          "chinese_text": "实现示例",
          "english_text": "Haskell",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "module EngineeringPractice where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 333,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 334,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 335,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "data ComponentType Service Database Cache LoadBalancer Gateway",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "data SystemComponent SystemComponent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "componentId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 342,
          "chinese_text": "",
          "english_text": "componentName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "componentType ComponentType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 344,
          "chinese_text": "",
          "english_text": "componentDependencies Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 345,
          "chinese_text": "",
          "english_text": "componentInterfaces Interface",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 346,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 348,
          "chinese_text": "",
          "english_text": "data Interface Interface",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 349,
          "chinese_text": "",
          "english_text": "interfaceName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 350,
          "chinese_text": "",
          "english_text": "interfaceMethod Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 351,
          "chinese_text": "",
          "english_text": "interfaceParameters Parameter",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 352,
          "chinese_text": "",
          "english_text": "interfaceReturnType Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 353,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "",
          "english_text": "data Parameter Parameter",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "paramName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "paramType Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 358,
          "chinese_text": "",
          "english_text": "paramRequired Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 359,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 361,
          "chinese_text": "",
          "english_text": "data Connection Connection",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 362,
          "chinese_text": "",
          "english_text": "connectionSource Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "connectionTarget Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "connectionProtocol Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "",
          "english_text": "connectionDataFormat Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 366,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 368,
          "chinese_text": "",
          "english_text": "data Constraint Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 369,
          "chinese_text": "",
          "english_text": "constraintComponentId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 370,
          "chinese_text": "",
          "english_text": "constraintType ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 371,
          "chinese_text": "",
          "english_text": "constraintValue Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 372,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 374,
          "chinese_text": "",
          "english_text": "data ConstraintType Performance Security Scalability Reliability",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 375,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 377,
          "chinese_text": "",
          "english_text": "data SystemArchitecture SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 378,
          "chinese_text": "",
          "english_text": "architectureComponents Map Text SystemComponent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "architectureConnections Connection",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "architectureConstraints Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "emptySystemArchitecture SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 384,
          "chinese_text": "",
          "english_text": "emptySystemArchitecture SystemArchitecture Map empty",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 386,
          "chinese_text": "",
          "english_text": "addComponent SystemComponent SystemArchitecture SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 387,
          "chinese_text": "",
          "english_text": "addComponent component architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 388,
          "chinese_text": "",
          "english_text": "architecture architectureComponents Map insert componentId component component architectureComponents architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "addConnection Connection SystemArchitecture SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 391,
          "chinese_text": "",
          "english_text": "addConnection connection architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 392,
          "chinese_text": "",
          "english_text": "architecture architectureConnections connection architectureConnections architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "",
          "english_text": "addConstraint Constraint SystemArchitecture SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 395,
          "chinese_text": "",
          "english_text": "addConstraint constraint architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 396,
          "chinese_text": "",
          "english_text": "architecture architectureConstraints constraint architectureConstraints architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 398,
          "chinese_text": "",
          "english_text": "validateArchitecture SystemArchitecture ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "validateArchitecture architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "let componentErrors validateComponents architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "connectionErrors validateConnections architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 402,
          "chinese_text": "",
          "english_text": "constraintErrors validateConstraints architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 403,
          "chinese_text": "",
          "english_text": "allErrors componentErrors connectionErrors constraintErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 404,
          "chinese_text": "",
          "english_text": "in ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 405,
          "chinese_text": "",
          "english_text": "validationIsValid null allErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "validationErrors allErrors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 407,
          "chinese_text": "",
          "english_text": "validationWarnings",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 408,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 410,
          "chinese_text": "",
          "english_text": "validateComponents SystemArchitecture Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "validateComponents architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 412,
          "chinese_text": "",
          "english_text": "let components Map elems architectureComponents architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "",
          "english_text": "errors concatMap validateComponentDependencies components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "in errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 416,
          "chinese_text": "",
          "english_text": "validateComponentDependencies SystemComponent Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "validateComponentDependencies component",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 418,
          "chinese_text": "",
          "english_text": "let dependencies componentDependencies component",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "",
          "english_text": "componentMap Map keys architectureComponents architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 420,
          "chinese_text": "",
          "english_text": "missingDeps filter dep not dep elem componentMap dependencies",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 421,
          "chinese_text": "",
          "english_text": "in map dep T concat componentId component depends on non existent component dep missingDeps",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 423,
          "chinese_text": "",
          "english_text": "validateConnections SystemArchitecture Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 424,
          "chinese_text": "",
          "english_text": "validateConnections architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 425,
          "chinese_text": "",
          "english_text": "let connections architectureConnections architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 426,
          "chinese_text": "",
          "english_text": "componentIds Map keys architectureComponents architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 427,
          "chinese_text": "",
          "english_text": "errors concatMap conn validateConnection conn componentIds connections",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "in errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "",
          "english_text": "validateConnection Connection Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "validateConnection connection componentIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 432,
          "chinese_text": "",
          "english_text": "let sourceExists connectionSource connection elem componentIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 433,
          "chinese_text": "",
          "english_text": "targetExists connectionTarget connection elem componentIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "errors if not sourceExists",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 436,
          "chinese_text": "",
          "english_text": "then T concat Connection source connectionSource connection does not exist errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 437,
          "chinese_text": "",
          "english_text": "else errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 438,
          "chinese_text": "",
          "english_text": "errors if not targetExists",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 439,
          "chinese_text": "",
          "english_text": "then T concat Connection target connectionTarget connection does not exist errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 440,
          "chinese_text": "",
          "english_text": "else errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 441,
          "chinese_text": "",
          "english_text": "in errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 443,
          "chinese_text": "",
          "english_text": "validateConstraints SystemArchitecture Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 444,
          "chinese_text": "",
          "english_text": "validateConstraints architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "let constraints architectureConstraints architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 446,
          "chinese_text": "",
          "english_text": "componentIds Map keys architectureComponents architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 447,
          "chinese_text": "",
          "english_text": "errors concatMap constraint validateConstraint constraint componentIds constraints",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "",
          "english_text": "in errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 450,
          "chinese_text": "",
          "english_text": "validateConstraint Constraint Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 451,
          "chinese_text": "",
          "english_text": "validateConstraint constraint componentIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 452,
          "chinese_text": "",
          "english_text": "if constraintComponentId constraint elem componentIds",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 453,
          "chinese_text": "",
          "english_text": "then",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 454,
          "chinese_text": "",
          "english_text": "else T concat Constraint for non existent component constraintComponentId constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 456,
          "chinese_text": "",
          "english_text": "optimizePerformance SystemArchitecture PerformanceOptimization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 457,
          "chinese_text": "",
          "english_text": "optimizePerformance architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 458,
          "chinese_text": "",
          "english_text": "let components Map elems architectureComponents architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 459,
          "chinese_text": "",
          "english_text": "cacheStrategies generateCacheStrategies components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 460,
          "chinese_text": "",
          "english_text": "loadBalancing generateLoadBalancing components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "",
          "english_text": "databaseOptimizations generateDatabaseOptimizations components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 462,
          "chinese_text": "",
          "english_text": "in PerformanceOptimization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 463,
          "chinese_text": "",
          "english_text": "optimizationCacheStrategies cacheStrategies",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 464,
          "chinese_text": "",
          "english_text": "optimizationLoadBalancing loadBalancing",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 465,
          "chinese_text": "",
          "english_text": "optimizationDatabaseOptimizations databaseOptimizations",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 466,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 468,
          "chinese_text": "",
          "english_text": "generateCacheStrategies SystemComponent Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 469,
          "chinese_text": "",
          "english_text": "generateCacheStrategies components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 470,
          "chinese_text": "",
          "english_text": "let serviceComponents filter c componentType c Service components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "",
          "english_text": "in map c T concat Cache for service componentName c serviceComponents",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "",
          "english_text": "generateLoadBalancing SystemComponent Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 474,
          "chinese_text": "",
          "english_text": "generateLoadBalancing components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 475,
          "chinese_text": "",
          "english_text": "let serviceComponents filter c componentType c Service components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 476,
          "chinese_text": "",
          "english_text": "in if length serviceComponents",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 477,
          "chinese_text": "",
          "english_text": "then Implement load balancer for multiple services",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 478,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 480,
          "chinese_text": "",
          "english_text": "generateDatabaseOptimizations SystemComponent Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 481,
          "chinese_text": "",
          "english_text": "generateDatabaseOptimizations components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 482,
          "chinese_text": "",
          "english_text": "let dbComponents filter c componentType c Database components",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 483,
          "chinese_text": "",
          "english_text": "in map c T concat Optimize queries for database componentName c dbComponents",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 485,
          "chinese_text": "",
          "english_text": "data ValidationResult ValidationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 486,
          "chinese_text": "",
          "english_text": "validationIsValid Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 487,
          "chinese_text": "",
          "english_text": "validationErrors Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 488,
          "chinese_text": "",
          "english_text": "validationWarnings Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 489,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 491,
          "chinese_text": "",
          "english_text": "data PerformanceOptimization PerformanceOptimization",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 492,
          "chinese_text": "",
          "english_text": "optimizationCacheStrategies Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 493,
          "chinese_text": "",
          "english_text": "optimizationLoadBalancing Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 494,
          "chinese_text": "",
          "english_text": "optimizationDatabaseOptimizations Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 495,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 496,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 498,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 500,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 502,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 503,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 504,
          "chinese_text": "",
          "english_text": "pub struct EngineeringSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 505,
          "chinese_text": "",
          "english_text": "pub architecture SystemArchitecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 506,
          "chinese_text": "",
          "english_text": "pub performance monitor PerformanceMonitor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 507,
          "chinese_text": "",
          "english_text": "pub deployment manager DeploymentManager",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 508,
          "chinese_text": "",
          "english_text": "pub quality assurance QualityAssurance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 509,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 511,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 512,
          "chinese_text": "",
          "english_text": "pub struct PerformanceMonitor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 513,
          "chinese_text": "",
          "english_text": "pub metrics HashMap String Metric",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 514,
          "chinese_text": "",
          "english_text": "pub alerts Vec Alert",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 515,
          "chinese_text": "",
          "english_text": "pub thresholds HashMap String f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 516,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 518,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 519,
          "chinese_text": "",
          "english_text": "pub struct Metric",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 520,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 521,
          "chinese_text": "",
          "english_text": "pub value f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 522,
          "chinese_text": "",
          "english_text": "pub timestamp u",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 523,
          "chinese_text": "",
          "english_text": "pub unit String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 524,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 526,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 527,
          "chinese_text": "",
          "english_text": "pub struct Alert",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 528,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 529,
          "chinese_text": "",
          "english_text": "pub severity AlertSeverity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 530,
          "chinese_text": "",
          "english_text": "pub message String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 531,
          "chinese_text": "",
          "english_text": "pub timestamp u",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 532,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 534,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 535,
          "chinese_text": "",
          "english_text": "pub enum AlertSeverity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 536,
          "chinese_text": "",
          "english_text": "Info",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 537,
          "chinese_text": "",
          "english_text": "Warning",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 538,
          "chinese_text": "",
          "english_text": "Error",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 539,
          "chinese_text": "",
          "english_text": "Critical",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 540,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 542,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 543,
          "chinese_text": "",
          "english_text": "pub struct DeploymentManager",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 544,
          "chinese_text": "",
          "english_text": "pub environments HashMap String Environment",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 545,
          "chinese_text": "",
          "english_text": "pub deployment strategies Vec DeploymentStrategy",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 546,
          "chinese_text": "",
          "english_text": "pub rollback plans HashMap String RollbackPlan",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 547,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 549,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 550,
          "chinese_text": "",
          "english_text": "pub struct Environment",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 551,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 552,
          "chinese_text": "",
          "english_text": "pub config HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 553,
          "chinese_text": "",
          "english_text": "pub resources ResourceAllocation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 554,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 556,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 557,
          "chinese_text": "",
          "english_text": "pub struct ResourceAllocation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 558,
          "chinese_text": "",
          "english_text": "pub cpu f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 559,
          "chinese_text": "",
          "english_text": "pub memory f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 560,
          "chinese_text": "",
          "english_text": "pub storage f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 561,
          "chinese_text": "",
          "english_text": "pub network f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 562,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 564,
          "chinese_text": "",
          "english_text": "impl EngineeringSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 565,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 566,
          "chinese_text": "",
          "english_text": "EngineeringSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 567,
          "chinese_text": "",
          "english_text": "architecture SystemArchitecture new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 568,
          "chinese_text": "",
          "english_text": "performance monitor PerformanceMonitor",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 569,
          "chinese_text": "",
          "english_text": "metrics HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 570,
          "chinese_text": "",
          "english_text": "alerts Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 571,
          "chinese_text": "",
          "english_text": "thresholds HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 572,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 573,
          "chinese_text": "",
          "english_text": "deployment manager DeploymentManager",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 574,
          "chinese_text": "",
          "english_text": "environments HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 575,
          "chinese_text": "",
          "english_text": "deployment strategies Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 576,
          "chinese_text": "",
          "english_text": "rollback plans HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 577,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 578,
          "chinese_text": "",
          "english_text": "quality assurance QualityAssurance new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 579,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 580,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 582,
          "chinese_text": "",
          "english_text": "pub fn deploy system self environment str DeploymentResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 583,
          "chinese_text": "验证架构",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 584,
          "chinese_text": "",
          "english_text": "let validation self architecture validate architecture",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 585,
          "chinese_text": "",
          "english_text": "if validation is valid",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 586,
          "chinese_text": "",
          "english_text": "return DeploymentResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 587,
          "chinese_text": "",
          "english_text": "success false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 588,
          "chinese_text": "",
          "english_text": "errors validation errors",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 589,
          "chinese_text": "",
          "english_text": "warnings validation warnings",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 590,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 591,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 593,
          "chinese_text": "性能优化",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 594,
          "chinese_text": "",
          "english_text": "let optimization self architecture optimize performance",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 596,
          "chinese_text": "部署到指定环境",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 597,
          "chinese_text": "",
          "english_text": "if let Some env self deployment manager environments get environment",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 598,
          "chinese_text": "执行部署",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 599,
          "chinese_text": "",
          "english_text": "DeploymentResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 600,
          "chinese_text": "",
          "english_text": "success true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 601,
          "chinese_text": "",
          "english_text": "errors Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 602,
          "chinese_text": "",
          "english_text": "warnings Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 603,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 604,
          "chinese_text": "",
          "english_text": "else",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 605,
          "chinese_text": "",
          "english_text": "DeploymentResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 606,
          "chinese_text": "",
          "english_text": "success false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 607,
          "chinese_text": "",
          "english_text": "errors vec format Environment not found environment",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 608,
          "chinese_text": "",
          "english_text": "warnings Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 609,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 610,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 611,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 613,
          "chinese_text": "",
          "english_text": "pub fn monitor performance mut self PerformanceReport",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 614,
          "chinese_text": "",
          "english_text": "let mut report PerformanceReport",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 615,
          "chinese_text": "",
          "english_text": "metrics Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 616,
          "chinese_text": "",
          "english_text": "alerts Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 617,
          "chinese_text": "",
          "english_text": "recommendations Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 618,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 620,
          "chinese_text": "收集性能指标",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 621,
          "chinese_text": "",
          "english_text": "for name metric in self performance monitor metrics",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 622,
          "chinese_text": "",
          "english_text": "report metrics push metric clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 624,
          "chinese_text": "检查阈值",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 625,
          "chinese_text": "",
          "english_text": "if let Some threshold self performance monitor thresholds get name",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 626,
          "chinese_text": "",
          "english_text": "if metric value threshold",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 627,
          "chinese_text": "",
          "english_text": "let alert Alert",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 628,
          "chinese_text": "",
          "english_text": "id format alert name",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 629,
          "chinese_text": "",
          "english_text": "severity AlertSeverity Warning",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 630,
          "chinese_text": "",
          "english_text": "message format Metric exceeds threshold name metric value threshold",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 631,
          "chinese_text": "",
          "english_text": "timestamp metric timestamp",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 632,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 633,
          "chinese_text": "",
          "english_text": "report alerts push alert",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 634,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 635,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 636,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 638,
          "chinese_text": "生成优化建议",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 639,
          "chinese_text": "",
          "english_text": "if report alerts len",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 640,
          "chinese_text": "",
          "english_text": "report recommendations push Consider scaling up resources to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 641,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 643,
          "chinese_text": "",
          "english_text": "report",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 644,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 645,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 646,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 648,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 650,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 652,
          "chinese_text": "架构验证",
          "english_text": "Architecture Validation O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 653,
          "chinese_text": "性能监控",
          "english_text": "Performance Monitoring O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 654,
          "chinese_text": "部署管理",
          "english_text": "Deployment Management O n log n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 655,
          "chinese_text": "质量保证",
          "english_text": "Quality Assurance O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 657,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 659,
          "chinese_text": "系统架构",
          "english_text": "System Architecture O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 660,
          "chinese_text": "性能指标",
          "english_text": "Performance Metrics O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 661,
          "chinese_text": "部署配置",
          "english_text": "Deployment Configuration O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 662,
          "chinese_text": "质量报告",
          "english_text": "Quality Reports O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 664,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 666,
          "chinese_text": "案例 大规模知识图谱系统架构",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 668,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 669,
          "chinese_text": "构建支持千万级实体和亿级关系的大规模知识图谱系统 要求高可用性 高性能和可扩展性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 671,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 673,
          "chinese_text": "采用微服务架构 将系统分解为多个独立服务",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 674,
          "chinese_text": "使用分布式图数据库存储知识图谱数据",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 675,
          "chinese_text": "实现多层缓存策略 提高查询性能",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 676,
          "chinese_text": "采用容器化部署 支持弹性扩缩容",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 677,
          "chinese_text": "建立完善的监控和告警体系",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 679,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 681,
          "chinese_text": "系统可用性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 682,
          "chinese_text": "查询响应时间",
          "english_text": "ms",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 683,
          "chinese_text": "系统吞吐量",
          "english_text": "QPS",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 684,
          "chinese_text": "扩展性 支持水平扩展",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 686,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 688,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 690,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 691,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 692,
          "chinese_text": "系统架构设计 设计可扩展的系统架构",
          "english_text": "System Architecture Design Design scalable system architecture",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 693,
          "chinese_text": "性能优化 优化系统性能和资源利用",
          "english_text": "Performance Optimization Optimize system performance and resource utilization",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 694,
          "chinese_text": "部署运维 自动化部署和运维管理",
          "english_text": "Deployment Operations Automated deployment and operations management",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 695,
          "chinese_text": "质量保证 确保系统质量和可靠性",
          "english_text": "Quality Assurance Ensure system quality and reliability",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 697,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 699,
          "chinese_text": "案例",
          "english_text": "Case Google Knowledge Graph Infrastructure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 701,
          "chinese_text": "项目名称",
          "english_text": "Project Name Google Knowledge Graph Infrastructure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 702,
          "chinese_text": "应用场景 大规模知识图谱基础设施",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 703,
          "chinese_text": "技术实现 分布式架构和自动化运维",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 704,
          "chinese_text": "效果评估 支持全球用户的高性能查询服务",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 706,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 708,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 710,
          "chinese_text": "研究方向 云原生工程实践",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 712,
          "chinese_text": "研究内容 基于云原生技术的知识图谱工程实践",
          "english_text": "Research Content",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 713,
          "chinese_text": "技术突破 实现了自动化的云原生部署和运维",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 714,
          "chinese_text": "应用前景 在云计算环境中广泛应用",
          "english_text": "Application Prospects",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 716,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 718,
          "chinese_text": "趋势 智能化运维",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 720,
          "chinese_text": "中文 通过 技术实现智能化的系统运维和故障预测",
          "english_text": "Chinese AI",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 721,
          "chinese_text": "",
          "english_text": "English Implement intelligent system operations and fault prediction through AI technology",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 723,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 725,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 727,
          "chinese_text": "要点 工程实践是知识图谱技术成功应用的关键 确保系统的可靠性和效率",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 728,
          "chinese_text": "要点 现代工程实践结合了多种技术 提供全面的系统解决方案",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 729,
          "chinese_text": "要点 工程实践正在向自动化和智能化方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 731,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 733,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 735,
          "chinese_text": "短期目标 提高工程实践的自动化和标准化程度",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 736,
          "chinese_text": "中期目标 实现智能化的工程实践",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 737,
          "chinese_text": "长期目标 构建自适应的工程实践生态系统",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 739,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 741,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 743,
          "chinese_text": "",
          "english_text": "Bass L et al Software architecture in practice Addison Wesley",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 744,
          "chinese_text": "",
          "english_text": "Fowler M Patterns of enterprise application architecture Addison Wesley",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 745,
          "chinese_text": "",
          "english_text": "Evans E Domain driven design tackling complexity in the heart of software Addison Wesley",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 747,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 749,
          "chinese_text": "",
          "english_text": "Kubernetes Documentation https kubernetes io docs Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 750,
          "chinese_text": "",
          "english_text": "Docker Documentation https docs docker com Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 751,
          "chinese_text": "",
          "english_text": "Prometheus Monitoring https prometheus io docs Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 753,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 755,
          "chinese_text": "",
          "english_text": "Martin Fowler s Blog https martinfowler com Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 756,
          "chinese_text": "",
          "english_text": "The Twelve Factor App https factor net Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 757,
          "chinese_text": "",
          "english_text": "Site Reliability Engineering https sre google Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 759,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 761,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 763,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 764,
          "chinese_text": "形式化方法",
          "english_text": "formal methods README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 765,
          "chinese_text": "应用实践",
          "english_text": "applications README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 767,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 769,
          "chinese_text": "",
          "english_text": "Kubernetes https kubernetes io",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 770,
          "chinese_text": "",
          "english_text": "Docker https www docker com",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 771,
          "chinese_text": "",
          "english_text": "Prometheus https prometheus io",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 773,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 775,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 776,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 777,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    },
    {
      "file_path": "docs\\10-research-methodology\\README.md",
      "total_lines": 749,
      "bilingual_lines": 144,
      "bilingual_ratio": 0.19225634178905207,
      "section_bilingual_ratio": 0.5606060606060606,
      "table_bilingual_ratio": 0.8333333333333334,
      "code_bilingual_ratio": 0.0,
      "text_bilingual_ratio": 0.05410122164048865,
      "bilingual_lines_detail": [
        {
          "line_number": 1,
          "chinese_text": "研究方法论",
          "english_text": "Research Methodology",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 3,
          "chinese_text": "概述",
          "english_text": "Overview",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 5,
          "chinese_text": "定义与概念",
          "english_text": "Definition and Concepts",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 7,
          "chinese_text": "中文定义",
          "english_text": "Chinese Definition",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 8,
          "chinese_text": "研究方法论是知识图谱领域中用于指导科学研究 实验设计和结果验证的系统化方法论体系 它通过形式化的语言模型和严格的逻辑推理 为知识图谱的研究提供理论基础 实验方法 评估指标和验证机制 确保研究结果的科学性 可靠性和可重现性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 10,
          "chinese_text": "",
          "english_text": "English Definition",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 11,
          "chinese_text": "",
          "english_text": "Research methodology is a systematic methodological framework in the knowledge graph field for guiding scientific research experimental design and result verification It uses formal language models and rigorous logical reasoning to provide theoretical foundations experimental methods evaluation metrics and verification mechanisms for knowledge graph research ensuring the scientificity reliability and reproducibility of research results",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 13,
          "chinese_text": "历史发展",
          "english_text": "Historical Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 15,
          "chinese_text": "发展历程",
          "english_text": "Development Timeline",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 17,
          "chinese_text": "阶段 基础方法论时期 形式化逻辑和证明理论",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 18,
          "chinese_text": "阶段 实验设计时期 科学实验方法和统计验证",
          "english_text": "Phase s s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 19,
          "chinese_text": "阶段 综合方法论时期 至今 多学科交叉和形式化验证",
          "english_text": "Phase s",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 21,
          "chinese_text": "核心特征",
          "english_text": "Core Characteristics",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 23,
          "chinese_text": "特征 中文描述",
          "english_text": "Feature Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 24,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 25,
          "chinese_text": "形式化 基于形式语言模型的严格推理",
          "english_text": "Formal Based on formal language models for rigorous reasoning",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 26,
          "chinese_text": "可验证性 研究结果可数学证明和实验验证",
          "english_text": "Verifiable Research results can be mathematically proven and experimentally verified",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 27,
          "chinese_text": "可重现性 实验过程可重复执行",
          "english_text": "Reproducible Experimental processes can be repeatedly executed",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 28,
          "chinese_text": "系统性 完整的方法论体系",
          "english_text": "Systematic Complete methodological system",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 30,
          "chinese_text": "理论基础",
          "english_text": "Theoretical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 32,
          "chinese_text": "数学基础",
          "english_text": "Mathematical Foundation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 34,
          "chinese_text": "形式化定义",
          "english_text": "Formal Definition",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 36,
          "chinese_text": "数学符号",
          "english_text": "Mathematical Notation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 38,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 39,
          "chinese_text": "",
          "english_text": "RM T E V P M",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 40,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 42,
          "chinese_text": "其中",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 44,
          "chinese_text": "理论框架",
          "english_text": "T Theoretical Framework",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 45,
          "chinese_text": "实验设计",
          "english_text": "E Experimental Design",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 46,
          "chinese_text": "验证机制",
          "english_text": "V Verification Mechanism",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 47,
          "chinese_text": "证明系统",
          "english_text": "P Proof System",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 48,
          "chinese_text": "方法论模型",
          "english_text": "M Methodology Model",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 50,
          "chinese_text": "形式化描述",
          "english_text": "Formal Description",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 51,
          "chinese_text": "研究方法论系统 是一个五元组 其中理论框架 提供研究的基础理论 实验设计 定义具体的实验方法 验证机制 确保结果的正确性 证明系统 提供形式化证明 方法论模型 整合所有要素形成完整的方法论体系",
          "english_text": "RM T E V P M",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 53,
          "chinese_text": "定理与证明",
          "english_text": "Theorems and Proofs",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 55,
          "chinese_text": "定理 研究方法论完备性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 56,
          "chinese_text": "如果研究方法论系统 是完备的 且理论框架 是正确表达的 则对于任何研究问题 如果 在 的范围内 则 能够提供相应的研究方法 满足",
          "english_text": "RM T Q QT RMM Q M",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 58,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 60,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 61,
          "chinese_text": "设研究方法论系统 是完备的",
          "english_text": "RM",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 62,
          "chinese_text": "对于任意研究问题 如果理论框架 是正确表达的",
          "english_text": "Q T",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 63,
          "chinese_text": "且 在 的范围内 即",
          "english_text": "QT Q T",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 64,
          "chinese_text": "根据完备性定义 如果问题存在 则方法能够提供",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 65,
          "chinese_text": "因此 能够提供研究方法 满足",
          "english_text": "RMMQ M",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 66,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 68,
          "chinese_text": "定理 实验验证正确性定理",
          "english_text": "Theorem",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 69,
          "chinese_text": "如果实验设计 是有效的 且验证机制 是可靠的 则对于任何假设 如果 为真 则实验验证结果 返回 当且仅当",
          "english_text": "E V H H V E H TrueH True",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 71,
          "chinese_text": "证明",
          "english_text": "Proof",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 73,
          "chinese_text": "",
          "english_text": "text",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 74,
          "chinese_text": "设实验设计 是有效的 验证机制 是可靠的",
          "english_text": "E V",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 75,
          "chinese_text": "对于假设 如果 为真 即",
          "english_text": "H H H True",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 76,
          "chinese_text": "则实验验证结果",
          "english_text": "V E H True",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 77,
          "chinese_text": "如果 为假 即",
          "english_text": "H H False",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 78,
          "chinese_text": "则实验验证结果",
          "english_text": "V E H False",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 79,
          "chinese_text": "因此 当且仅当",
          "english_text": "V E H TrueH True",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 80,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 82,
          "chinese_text": "逻辑框架",
          "english_text": "Logical Framework",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 84,
          "chinese_text": "逻辑结构",
          "english_text": "Logical Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 86,
          "chinese_text": "",
          "english_text": "mermaid",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 87,
          "chinese_text": "",
          "english_text": "graph TD",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 88,
          "chinese_text": "研究问题 理论分析",
          "english_text": "A B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 89,
          "chinese_text": "假设形成",
          "english_text": "B C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 90,
          "chinese_text": "实验设计",
          "english_text": "C D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 91,
          "chinese_text": "数据收集",
          "english_text": "D E",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 92,
          "chinese_text": "结果验证",
          "english_text": "E F",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 94,
          "chinese_text": "文献综述",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 95,
          "chinese_text": "理论建模",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 96,
          "chinese_text": "形式化定义",
          "english_text": "B B",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 98,
          "chinese_text": "假设陈述",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 99,
          "chinese_text": "变量定义",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 100,
          "chinese_text": "关系建模",
          "english_text": "C C",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 102,
          "chinese_text": "实验方法",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 103,
          "chinese_text": "样本设计",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 104,
          "chinese_text": "控制变量",
          "english_text": "D D",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 105,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 107,
          "chinese_text": "批判性分析",
          "english_text": "Critical Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 109,
          "chinese_text": "优势分析",
          "english_text": "Strengths Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 111,
          "chinese_text": "优势 形式化严格性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 113,
          "chinese_text": "中文 研究方法论基于形式语言模型 提供严格的逻辑推理和数学证明",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 114,
          "chinese_text": "",
          "english_text": "English Research methodology is based on formal language models providing rigorous logical reasoning and mathematical proofs",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 116,
          "chinese_text": "优势 可验证性",
          "english_text": "Strength",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 118,
          "chinese_text": "中文 通过实验设计和验证机制 能够验证研究假设的正确性",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 119,
          "chinese_text": "",
          "english_text": "English Through experimental design and verification mechanisms the correctness of research hypotheses can be verified",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 121,
          "chinese_text": "局限性分析",
          "english_text": "Limitations Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 123,
          "chinese_text": "局限性 复杂性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 125,
          "chinese_text": "中文 形式化研究方法需要深厚的数学和逻辑背景 增加了学习成本",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 126,
          "chinese_text": "",
          "english_text": "English Formal research methods require deep mathematical and logical background increasing learning costs",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 128,
          "chinese_text": "局限性 适用性",
          "english_text": "Limitation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 130,
          "chinese_text": "中文 某些研究问题可能难以完全形式化 限制了方法的适用范围",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 131,
          "chinese_text": "",
          "english_text": "English Some research problems may be difficult to fully formalize limiting the scope of application",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 133,
          "chinese_text": "争议与讨论",
          "english_text": "Controversies and Discussions",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 135,
          "chinese_text": "争议点 形式化 经验主义",
          "english_text": "Controversy vs",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 137,
          "chinese_text": "支持观点 形式化方法提供严格的科学验证 确保研究质量",
          "english_text": "Supporting Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 138,
          "chinese_text": "反对观点 经验主义方法更贴近实际应用 便于理解和实施",
          "english_text": "Opposing Views",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 139,
          "chinese_text": "中立分析 混合研究方法结合了两种方法的优势 可能是最佳选择",
          "english_text": "Neutral Analysis",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 141,
          "chinese_text": "工程实践",
          "english_text": "Engineering Practice",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 143,
          "chinese_text": "实现方法",
          "english_text": "Implementation Methods",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 145,
          "chinese_text": "算法设计",
          "english_text": "Algorithm Design",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 147,
          "chinese_text": "研究方法论算法",
          "english_text": "Research Methodology Algorithm",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 149,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 150,
          "chinese_text": "实现示例",
          "english_text": "Rust",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 151,
          "chinese_text": "",
          "english_text": "use std collections HashMap HashSet",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 152,
          "chinese_text": "",
          "english_text": "use std sync Arc Mutex",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 154,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 155,
          "chinese_text": "",
          "english_text": "pub struct ResearchProblem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 156,
          "chinese_text": "",
          "english_text": "pub id String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 157,
          "chinese_text": "",
          "english_text": "pub description String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 158,
          "chinese_text": "",
          "english_text": "pub domain String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 159,
          "chinese_text": "",
          "english_text": "pub complexity Complexity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 160,
          "chinese_text": "",
          "english_text": "pub constraints Vec Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 161,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 163,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 164,
          "chinese_text": "",
          "english_text": "pub enum Complexity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 165,
          "chinese_text": "",
          "english_text": "Low",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 166,
          "chinese_text": "",
          "english_text": "Medium",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 167,
          "chinese_text": "",
          "english_text": "High",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 168,
          "chinese_text": "",
          "english_text": "VeryHigh",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 169,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 171,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 172,
          "chinese_text": "",
          "english_text": "pub struct Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 173,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 174,
          "chinese_text": "",
          "english_text": "pub constraint type ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 175,
          "chinese_text": "",
          "english_text": "pub value String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 176,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 178,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 179,
          "chinese_text": "",
          "english_text": "pub enum ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 180,
          "chinese_text": "",
          "english_text": "Time",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 181,
          "chinese_text": "",
          "english_text": "Resource",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 182,
          "chinese_text": "",
          "english_text": "Accuracy",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 183,
          "chinese_text": "",
          "english_text": "Scalability",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 184,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 186,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 187,
          "chinese_text": "",
          "english_text": "pub struct ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 188,
          "chinese_text": "",
          "english_text": "pub theoretical framework TheoreticalFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 189,
          "chinese_text": "",
          "english_text": "pub experimental design ExperimentalDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 190,
          "chinese_text": "",
          "english_text": "pub verification mechanism VerificationMechanism",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 191,
          "chinese_text": "",
          "english_text": "pub proof system ProofSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 192,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 194,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 195,
          "chinese_text": "",
          "english_text": "pub struct TheoreticalFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 196,
          "chinese_text": "",
          "english_text": "pub foundations Vec Foundation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 197,
          "chinese_text": "",
          "english_text": "pub axioms Vec Axiom",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 198,
          "chinese_text": "",
          "english_text": "pub theorems Vec Theorem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 199,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 201,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 202,
          "chinese_text": "",
          "english_text": "pub struct Foundation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 203,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 204,
          "chinese_text": "",
          "english_text": "pub description String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 205,
          "chinese_text": "",
          "english_text": "pub formal definition String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 206,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 208,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 209,
          "chinese_text": "",
          "english_text": "pub struct Axiom",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 210,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 211,
          "chinese_text": "",
          "english_text": "pub statement String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 212,
          "chinese_text": "",
          "english_text": "pub proof String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 213,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 215,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 216,
          "chinese_text": "",
          "english_text": "pub struct Theorem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 217,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 218,
          "chinese_text": "",
          "english_text": "pub statement String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 219,
          "chinese_text": "",
          "english_text": "pub proof String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 220,
          "chinese_text": "",
          "english_text": "pub dependencies Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 221,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 223,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 224,
          "chinese_text": "",
          "english_text": "pub struct ExperimentalDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 225,
          "chinese_text": "",
          "english_text": "pub hypothesis Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 226,
          "chinese_text": "",
          "english_text": "pub variables Vec Variable",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 227,
          "chinese_text": "",
          "english_text": "pub methods Vec Method",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 228,
          "chinese_text": "",
          "english_text": "pub controls Vec Control",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 229,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 231,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 232,
          "chinese_text": "",
          "english_text": "pub struct Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 233,
          "chinese_text": "",
          "english_text": "pub statement String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 234,
          "chinese_text": "",
          "english_text": "pub variables Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 235,
          "chinese_text": "",
          "english_text": "pub expected outcome String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 236,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 238,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 239,
          "chinese_text": "",
          "english_text": "pub struct Variable",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 240,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 241,
          "chinese_text": "",
          "english_text": "pub variable type VariableType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 242,
          "chinese_text": "",
          "english_text": "pub measurement String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 243,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 245,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 246,
          "chinese_text": "",
          "english_text": "pub enum VariableType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 247,
          "chinese_text": "",
          "english_text": "Independent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 248,
          "chinese_text": "",
          "english_text": "Dependent",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 249,
          "chinese_text": "",
          "english_text": "Control",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 250,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 252,
          "chinese_text": "",
          "english_text": "impl ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 253,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 254,
          "chinese_text": "",
          "english_text": "ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 255,
          "chinese_text": "",
          "english_text": "theoretical framework TheoreticalFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 256,
          "chinese_text": "",
          "english_text": "foundations Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 257,
          "chinese_text": "",
          "english_text": "axioms Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 258,
          "chinese_text": "",
          "english_text": "theorems Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 259,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 260,
          "chinese_text": "",
          "english_text": "experimental design ExperimentalDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 261,
          "chinese_text": "",
          "english_text": "hypothesis Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 262,
          "chinese_text": "",
          "english_text": "statement String new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 263,
          "chinese_text": "",
          "english_text": "variables Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 264,
          "chinese_text": "",
          "english_text": "expected outcome String new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 265,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 266,
          "chinese_text": "",
          "english_text": "variables Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 267,
          "chinese_text": "",
          "english_text": "methods Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 268,
          "chinese_text": "",
          "english_text": "controls Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 269,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 270,
          "chinese_text": "",
          "english_text": "verification mechanism VerificationMechanism new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 271,
          "chinese_text": "",
          "english_text": "proof system ProofSystem new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 272,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 273,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 275,
          "chinese_text": "",
          "english_text": "pub fn design research self problem ResearchProblem ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 276,
          "chinese_text": "",
          "english_text": "let mut design ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 277,
          "chinese_text": "",
          "english_text": "problem problem clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 278,
          "chinese_text": "",
          "english_text": "methodology self clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 279,
          "chinese_text": "",
          "english_text": "timeline Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 280,
          "chinese_text": "",
          "english_text": "resources Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 281,
          "chinese_text": "",
          "english_text": "expected outcomes Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 282,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 284,
          "chinese_text": "根据问题复杂度选择合适的方法",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 285,
          "chinese_text": "",
          "english_text": "match problem complexity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 286,
          "chinese_text": "",
          "english_text": "Complexity Low design add simple methodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 287,
          "chinese_text": "",
          "english_text": "Complexity Medium design add standard methodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 288,
          "chinese_text": "",
          "english_text": "Complexity High design add complex methodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 289,
          "chinese_text": "",
          "english_text": "Complexity VeryHigh design add advanced methodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 290,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 292,
          "chinese_text": "",
          "english_text": "design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 293,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 295,
          "chinese_text": "",
          "english_text": "pub fn verify hypothesis self hypothesis Hypothesis data ExperimentData VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 296,
          "chinese_text": "",
          "english_text": "let mut result VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 297,
          "chinese_text": "",
          "english_text": "hypothesis hypothesis clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 298,
          "chinese_text": "",
          "english_text": "is supported false",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 299,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 300,
          "chinese_text": "",
          "english_text": "evidence Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 301,
          "chinese_text": "",
          "english_text": "conclusion String new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 302,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 304,
          "chinese_text": "统计分析",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 305,
          "chinese_text": "",
          "english_text": "let statistical result self perform statistical analysis data",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 307,
          "chinese_text": "形式化验证",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 308,
          "chinese_text": "",
          "english_text": "let formal result self perform formal verification hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 310,
          "chinese_text": "综合评估",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 311,
          "chinese_text": "",
          "english_text": "result is supported statistical result is significant formal result is valid",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 312,
          "chinese_text": "",
          "english_text": "result confidence statistical result confidence formal result confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 314,
          "chinese_text": "",
          "english_text": "result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 315,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 317,
          "chinese_text": "",
          "english_text": "fn perform statistical analysis self data ExperimentData StatisticalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 318,
          "chinese_text": "简化的统计分析",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 319,
          "chinese_text": "",
          "english_text": "StatisticalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 320,
          "chinese_text": "",
          "english_text": "is significant true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 321,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 322,
          "chinese_text": "",
          "english_text": "p value",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 323,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 324,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 326,
          "chinese_text": "",
          "english_text": "fn perform formal verification self hypothesis Hypothesis FormalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 327,
          "chinese_text": "简化的形式化验证",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 328,
          "chinese_text": "",
          "english_text": "FormalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 329,
          "chinese_text": "",
          "english_text": "is valid true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 330,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 331,
          "chinese_text": "",
          "english_text": "proof Formal proof completed to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 332,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 333,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 334,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 336,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 337,
          "chinese_text": "",
          "english_text": "pub struct ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 338,
          "chinese_text": "",
          "english_text": "pub problem ResearchProblem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 339,
          "chinese_text": "",
          "english_text": "pub methodology ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 340,
          "chinese_text": "",
          "english_text": "pub timeline Vec TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 341,
          "chinese_text": "",
          "english_text": "pub resources Vec Resource",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 342,
          "chinese_text": "",
          "english_text": "pub expected outcomes Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 343,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 345,
          "chinese_text": "",
          "english_text": "impl ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 346,
          "chinese_text": "",
          "english_text": "pub fn add simple methodology mut self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 347,
          "chinese_text": "",
          "english_text": "self timeline push TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 348,
          "chinese_text": "",
          "english_text": "phase Literature Review to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 349,
          "chinese_text": "",
          "english_text": "duration",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 350,
          "chinese_text": "",
          "english_text": "tasks vec Review existing research to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 351,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 353,
          "chinese_text": "",
          "english_text": "self timeline push TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 354,
          "chinese_text": "",
          "english_text": "phase Experiment Design to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 355,
          "chinese_text": "",
          "english_text": "duration",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 356,
          "chinese_text": "",
          "english_text": "tasks vec Design simple experiment to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 357,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 358,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 360,
          "chinese_text": "",
          "english_text": "pub fn add standard methodology mut self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 361,
          "chinese_text": "",
          "english_text": "self add simple methodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 363,
          "chinese_text": "",
          "english_text": "self timeline push TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 364,
          "chinese_text": "",
          "english_text": "phase Data Collection to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 365,
          "chinese_text": "",
          "english_text": "duration",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 366,
          "chinese_text": "",
          "english_text": "tasks vec Collect experimental data to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 367,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 369,
          "chinese_text": "",
          "english_text": "self timeline push TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 370,
          "chinese_text": "",
          "english_text": "phase Analysis to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 371,
          "chinese_text": "",
          "english_text": "duration",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 372,
          "chinese_text": "",
          "english_text": "tasks vec Analyze results to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 373,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 374,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 376,
          "chinese_text": "",
          "english_text": "pub fn add complex methodology mut self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 377,
          "chinese_text": "",
          "english_text": "self add standard methodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 379,
          "chinese_text": "",
          "english_text": "self timeline push TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 380,
          "chinese_text": "",
          "english_text": "phase Validation to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 381,
          "chinese_text": "",
          "english_text": "duration",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 382,
          "chinese_text": "",
          "english_text": "tasks vec Validate results to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 383,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 384,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 386,
          "chinese_text": "",
          "english_text": "pub fn add advanced methodology mut self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 387,
          "chinese_text": "",
          "english_text": "self add complex methodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 389,
          "chinese_text": "",
          "english_text": "self timeline push TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 390,
          "chinese_text": "",
          "english_text": "phase Formal Proof to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 391,
          "chinese_text": "",
          "english_text": "duration",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 392,
          "chinese_text": "",
          "english_text": "tasks vec Provide formal proofs to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 393,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 394,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 395,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 397,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 398,
          "chinese_text": "",
          "english_text": "pub struct TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 399,
          "chinese_text": "",
          "english_text": "pub phase String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 400,
          "chinese_text": "",
          "english_text": "pub duration u",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 401,
          "chinese_text": "",
          "english_text": "pub tasks Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 402,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 404,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 405,
          "chinese_text": "",
          "english_text": "pub struct Resource",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 406,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 407,
          "chinese_text": "",
          "english_text": "pub resource type ResourceType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 408,
          "chinese_text": "",
          "english_text": "pub quantity u",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 409,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 411,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 412,
          "chinese_text": "",
          "english_text": "pub enum ResourceType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 413,
          "chinese_text": "",
          "english_text": "Human",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 414,
          "chinese_text": "",
          "english_text": "Computational",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 415,
          "chinese_text": "",
          "english_text": "Data",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 416,
          "chinese_text": "",
          "english_text": "Equipment",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 417,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 419,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 420,
          "chinese_text": "",
          "english_text": "pub struct ExperimentData",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 421,
          "chinese_text": "",
          "english_text": "pub variables HashMap String Vec f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 422,
          "chinese_text": "",
          "english_text": "pub metadata HashMap String String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 423,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 425,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 426,
          "chinese_text": "",
          "english_text": "pub struct VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 427,
          "chinese_text": "",
          "english_text": "pub hypothesis Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 428,
          "chinese_text": "",
          "english_text": "pub is supported bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 429,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 430,
          "chinese_text": "",
          "english_text": "pub evidence Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 431,
          "chinese_text": "",
          "english_text": "pub conclusion String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 432,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 434,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 435,
          "chinese_text": "",
          "english_text": "pub struct StatisticalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 436,
          "chinese_text": "",
          "english_text": "pub is significant bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 437,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 438,
          "chinese_text": "",
          "english_text": "pub p value f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 439,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 441,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 442,
          "chinese_text": "",
          "english_text": "pub struct FormalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 443,
          "chinese_text": "",
          "english_text": "pub is valid bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 444,
          "chinese_text": "",
          "english_text": "pub confidence f",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 445,
          "chinese_text": "",
          "english_text": "pub proof String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 446,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 448,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 449,
          "chinese_text": "",
          "english_text": "pub struct VerificationMechanism",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 450,
          "chinese_text": "",
          "english_text": "pub methods Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 451,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 453,
          "chinese_text": "",
          "english_text": "impl VerificationMechanism",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 454,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 455,
          "chinese_text": "",
          "english_text": "VerificationMechanism",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 456,
          "chinese_text": "",
          "english_text": "methods vec Statistical Analysis to string Formal Verification to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 457,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 458,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 459,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 461,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 462,
          "chinese_text": "",
          "english_text": "pub struct ProofSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 463,
          "chinese_text": "",
          "english_text": "pub rules Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 464,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 466,
          "chinese_text": "",
          "english_text": "impl ProofSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 467,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 468,
          "chinese_text": "",
          "english_text": "ProofSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 469,
          "chinese_text": "",
          "english_text": "rules vec Modus Ponens to string Induction to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 470,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 471,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 472,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 473,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 475,
          "chinese_text": "",
          "english_text": "haskell",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 476,
          "chinese_text": "实现示例",
          "english_text": "Haskell",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 477,
          "chinese_text": "",
          "english_text": "module ResearchMethodology where",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 479,
          "chinese_text": "",
          "english_text": "import Data Map Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 480,
          "chinese_text": "",
          "english_text": "import qualified Data Map as Map",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 481,
          "chinese_text": "",
          "english_text": "import Data Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 482,
          "chinese_text": "",
          "english_text": "import qualified Data Text as T",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 484,
          "chinese_text": "",
          "english_text": "data Complexity Low Medium High VeryHigh",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 485,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 487,
          "chinese_text": "",
          "english_text": "data ResearchProblem ResearchProblem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 488,
          "chinese_text": "",
          "english_text": "problemId Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 489,
          "chinese_text": "",
          "english_text": "problemDescription Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 490,
          "chinese_text": "",
          "english_text": "problemDomain Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 491,
          "chinese_text": "",
          "english_text": "problemComplexity Complexity",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 492,
          "chinese_text": "",
          "english_text": "problemConstraints Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 493,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 495,
          "chinese_text": "",
          "english_text": "data Constraint Constraint",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 496,
          "chinese_text": "",
          "english_text": "constraintName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 497,
          "chinese_text": "",
          "english_text": "constraintType ConstraintType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 498,
          "chinese_text": "",
          "english_text": "constraintValue Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 499,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 501,
          "chinese_text": "",
          "english_text": "data ConstraintType Time Resource Accuracy Scalability",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 502,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 504,
          "chinese_text": "",
          "english_text": "data ResearchMethodology ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 505,
          "chinese_text": "",
          "english_text": "methodologyTheoreticalFramework TheoreticalFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 506,
          "chinese_text": "",
          "english_text": "methodologyExperimentalDesign ExperimentalDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 507,
          "chinese_text": "",
          "english_text": "methodologyVerificationMechanism VerificationMechanism",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 508,
          "chinese_text": "",
          "english_text": "methodologyProofSystem ProofSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 509,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 511,
          "chinese_text": "",
          "english_text": "data TheoreticalFramework TheoreticalFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 512,
          "chinese_text": "",
          "english_text": "frameworkFoundations Foundation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 513,
          "chinese_text": "",
          "english_text": "frameworkAxioms Axiom",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 514,
          "chinese_text": "",
          "english_text": "frameworkTheorems Theorem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 515,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 517,
          "chinese_text": "",
          "english_text": "data Foundation Foundation",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 518,
          "chinese_text": "",
          "english_text": "foundationName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 519,
          "chinese_text": "",
          "english_text": "foundationDescription Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 520,
          "chinese_text": "",
          "english_text": "foundationFormalDefinition Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 521,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 523,
          "chinese_text": "",
          "english_text": "data Axiom Axiom",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 524,
          "chinese_text": "",
          "english_text": "axiomName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 525,
          "chinese_text": "",
          "english_text": "axiomStatement Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 526,
          "chinese_text": "",
          "english_text": "axiomProof Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 527,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 529,
          "chinese_text": "",
          "english_text": "data Theorem Theorem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 530,
          "chinese_text": "",
          "english_text": "theoremName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 531,
          "chinese_text": "",
          "english_text": "theoremStatement Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 532,
          "chinese_text": "",
          "english_text": "theoremProof Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 533,
          "chinese_text": "",
          "english_text": "theoremDependencies Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 534,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 536,
          "chinese_text": "",
          "english_text": "data ExperimentalDesign ExperimentalDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 537,
          "chinese_text": "",
          "english_text": "designHypothesis Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 538,
          "chinese_text": "",
          "english_text": "designVariables Variable",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 539,
          "chinese_text": "",
          "english_text": "designMethods Method",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 540,
          "chinese_text": "",
          "english_text": "designControls Control",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 541,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 543,
          "chinese_text": "",
          "english_text": "data Hypothesis Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 544,
          "chinese_text": "",
          "english_text": "hypothesisStatement Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 545,
          "chinese_text": "",
          "english_text": "hypothesisVariables Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 546,
          "chinese_text": "",
          "english_text": "hypothesisExpectedOutcome Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 547,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 549,
          "chinese_text": "",
          "english_text": "data Variable Variable",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 550,
          "chinese_text": "",
          "english_text": "variableName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 551,
          "chinese_text": "",
          "english_text": "variableType VariableType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 552,
          "chinese_text": "",
          "english_text": "variableMeasurement Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 553,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 555,
          "chinese_text": "",
          "english_text": "data VariableType Independent Dependent Control",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 556,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 558,
          "chinese_text": "",
          "english_text": "emptyResearchMethodology ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 559,
          "chinese_text": "",
          "english_text": "emptyResearchMethodology ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 560,
          "chinese_text": "",
          "english_text": "TheoreticalFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 561,
          "chinese_text": "",
          "english_text": "ExperimentalDesign Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 562,
          "chinese_text": "",
          "english_text": "VerificationMechanism",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 563,
          "chinese_text": "",
          "english_text": "ProofSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 565,
          "chinese_text": "",
          "english_text": "designResearch ResearchMethodology ResearchProblem ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 566,
          "chinese_text": "",
          "english_text": "designResearch methodology problem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 567,
          "chinese_text": "",
          "english_text": "let design ResearchDesign problem methodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 568,
          "chinese_text": "",
          "english_text": "design case problemComplexity problem of",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 569,
          "chinese_text": "",
          "english_text": "Low addSimpleMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 570,
          "chinese_text": "",
          "english_text": "Medium addStandardMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 571,
          "chinese_text": "",
          "english_text": "High addComplexMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 572,
          "chinese_text": "",
          "english_text": "VeryHigh addAdvancedMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 573,
          "chinese_text": "",
          "english_text": "in design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 575,
          "chinese_text": "",
          "english_text": "addSimpleMethodology ResearchDesign ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 576,
          "chinese_text": "",
          "english_text": "addSimpleMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 577,
          "chinese_text": "",
          "english_text": "let timeline researchDesignTimeline design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 578,
          "chinese_text": "",
          "english_text": "newTimeline timeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 579,
          "chinese_text": "",
          "english_text": "TimelineItem Literature Review Review existing research",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 580,
          "chinese_text": "",
          "english_text": "TimelineItem Experiment Design Design simple experiment",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 581,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 582,
          "chinese_text": "",
          "english_text": "in design researchDesignTimeline newTimeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 584,
          "chinese_text": "",
          "english_text": "addStandardMethodology ResearchDesign ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 585,
          "chinese_text": "",
          "english_text": "addStandardMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 586,
          "chinese_text": "",
          "english_text": "let design addSimpleMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 587,
          "chinese_text": "",
          "english_text": "timeline researchDesignTimeline design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 588,
          "chinese_text": "",
          "english_text": "newTimeline timeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 589,
          "chinese_text": "",
          "english_text": "TimelineItem Data Collection Collect experimental data",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 590,
          "chinese_text": "",
          "english_text": "TimelineItem Analysis Analyze results",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 591,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 592,
          "chinese_text": "",
          "english_text": "in design researchDesignTimeline newTimeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 594,
          "chinese_text": "",
          "english_text": "addComplexMethodology ResearchDesign ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 595,
          "chinese_text": "",
          "english_text": "addComplexMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 596,
          "chinese_text": "",
          "english_text": "let design addStandardMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 597,
          "chinese_text": "",
          "english_text": "timeline researchDesignTimeline design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 598,
          "chinese_text": "",
          "english_text": "newTimeline timeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 599,
          "chinese_text": "",
          "english_text": "TimelineItem Validation Validate results",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 600,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 601,
          "chinese_text": "",
          "english_text": "in design researchDesignTimeline newTimeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 603,
          "chinese_text": "",
          "english_text": "addAdvancedMethodology ResearchDesign ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 604,
          "chinese_text": "",
          "english_text": "addAdvancedMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 605,
          "chinese_text": "",
          "english_text": "let design addComplexMethodology design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 606,
          "chinese_text": "",
          "english_text": "timeline researchDesignTimeline design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 607,
          "chinese_text": "",
          "english_text": "newTimeline timeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 608,
          "chinese_text": "",
          "english_text": "TimelineItem Formal Proof Provide formal proofs",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 609,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 610,
          "chinese_text": "",
          "english_text": "in design researchDesignTimeline newTimeline",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 612,
          "chinese_text": "",
          "english_text": "verifyHypothesis ResearchMethodology Hypothesis ExperimentData VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 613,
          "chinese_text": "",
          "english_text": "verifyHypothesis methodology hypothesis data",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 614,
          "chinese_text": "",
          "english_text": "let statisticalResult performStatisticalAnalysis data",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 615,
          "chinese_text": "",
          "english_text": "formalResult performFormalVerification hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 616,
          "chinese_text": "",
          "english_text": "isSupported statisticalIsSignificant statisticalResult formalIsValid formalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 617,
          "chinese_text": "",
          "english_text": "confidence statisticalConfidence statisticalResult formalConfidence formalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 618,
          "chinese_text": "",
          "english_text": "in VerificationResult hypothesis isSupported confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 620,
          "chinese_text": "",
          "english_text": "performStatisticalAnalysis ExperimentData StatisticalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 621,
          "chinese_text": "",
          "english_text": "performStatisticalAnalysis data",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 622,
          "chinese_text": "",
          "english_text": "StatisticalResult True",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 624,
          "chinese_text": "",
          "english_text": "performFormalVerification Hypothesis FormalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 625,
          "chinese_text": "",
          "english_text": "performFormalVerification hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 626,
          "chinese_text": "",
          "english_text": "FormalResult True Formal proof completed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 628,
          "chinese_text": "",
          "english_text": "data ResearchDesign ResearchDesign",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 629,
          "chinese_text": "",
          "english_text": "researchDesignProblem ResearchProblem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 630,
          "chinese_text": "",
          "english_text": "researchDesignMethodology ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 631,
          "chinese_text": "",
          "english_text": "researchDesignTimeline TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 632,
          "chinese_text": "",
          "english_text": "researchDesignResources Resource",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 633,
          "chinese_text": "",
          "english_text": "researchDesignExpectedOutcomes Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 634,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 636,
          "chinese_text": "",
          "english_text": "data TimelineItem TimelineItem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 637,
          "chinese_text": "",
          "english_text": "timelinePhase Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 638,
          "chinese_text": "",
          "english_text": "timelineDuration Int",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 639,
          "chinese_text": "",
          "english_text": "timelineTasks Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 640,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 642,
          "chinese_text": "",
          "english_text": "data Resource Resource",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 643,
          "chinese_text": "",
          "english_text": "resourceName Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 644,
          "chinese_text": "",
          "english_text": "resourceType ResourceType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 645,
          "chinese_text": "",
          "english_text": "resourceQuantity Int",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 646,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 648,
          "chinese_text": "",
          "english_text": "data ResourceType Human Computational Data Equipment",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 649,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 651,
          "chinese_text": "",
          "english_text": "data ExperimentData ExperimentData",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 652,
          "chinese_text": "",
          "english_text": "experimentVariables Map Text Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 653,
          "chinese_text": "",
          "english_text": "experimentMetadata Map Text Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 654,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 656,
          "chinese_text": "",
          "english_text": "data VerificationResult VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 657,
          "chinese_text": "",
          "english_text": "verificationHypothesis Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 658,
          "chinese_text": "",
          "english_text": "verificationIsSupported Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 659,
          "chinese_text": "",
          "english_text": "verificationConfidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 660,
          "chinese_text": "",
          "english_text": "verificationEvidence Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 661,
          "chinese_text": "",
          "english_text": "verificationConclusion Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 662,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 664,
          "chinese_text": "",
          "english_text": "data StatisticalResult StatisticalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 665,
          "chinese_text": "",
          "english_text": "statisticalIsSignificant Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 666,
          "chinese_text": "",
          "english_text": "statisticalConfidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 667,
          "chinese_text": "",
          "english_text": "statisticalPValue Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 668,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 670,
          "chinese_text": "",
          "english_text": "data FormalResult FormalResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 671,
          "chinese_text": "",
          "english_text": "formalIsValid Bool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 672,
          "chinese_text": "",
          "english_text": "formalConfidence Double",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 673,
          "chinese_text": "",
          "english_text": "formalProof Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 674,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 676,
          "chinese_text": "",
          "english_text": "data VerificationMechanism VerificationMechanism",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 677,
          "chinese_text": "",
          "english_text": "mechanismMethods Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 678,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 680,
          "chinese_text": "",
          "english_text": "data ProofSystem ProofSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 681,
          "chinese_text": "",
          "english_text": "proofRules Text",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 682,
          "chinese_text": "",
          "english_text": "deriving Show Eq",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 683,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 685,
          "chinese_text": "数据结构",
          "english_text": "Data Structures",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 687,
          "chinese_text": "核心数据结构",
          "english_text": "Core Data Structure",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 689,
          "chinese_text": "",
          "english_text": "rust",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 690,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 691,
          "chinese_text": "",
          "english_text": "pub struct ResearchFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 692,
          "chinese_text": "",
          "english_text": "pub methodology ResearchMethodology",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 693,
          "chinese_text": "",
          "english_text": "pub experimental system ExperimentalSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 694,
          "chinese_text": "",
          "english_text": "pub verification engine VerificationEngine",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 695,
          "chinese_text": "",
          "english_text": "pub proof generator ProofGenerator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 696,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 698,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 699,
          "chinese_text": "",
          "english_text": "pub struct ExperimentalSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 700,
          "chinese_text": "",
          "english_text": "pub design tools Vec DesignTool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 701,
          "chinese_text": "",
          "english_text": "pub data collectors Vec DataCollector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 702,
          "chinese_text": "",
          "english_text": "pub analyzers Vec Analyzer",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 703,
          "chinese_text": "",
          "english_text": "pub validators Vec Validator",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 704,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 706,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 707,
          "chinese_text": "",
          "english_text": "pub struct DesignTool",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 708,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 709,
          "chinese_text": "",
          "english_text": "pub tool type ToolType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 710,
          "chinese_text": "",
          "english_text": "pub capabilities Vec String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 711,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 713,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 714,
          "chinese_text": "",
          "english_text": "pub enum ToolType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 715,
          "chinese_text": "",
          "english_text": "Statistical",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 716,
          "chinese_text": "",
          "english_text": "Formal",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 717,
          "chinese_text": "",
          "english_text": "Hybrid",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 718,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 720,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 721,
          "chinese_text": "",
          "english_text": "pub struct DataCollector",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 722,
          "chinese_text": "",
          "english_text": "pub name String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 723,
          "chinese_text": "",
          "english_text": "pub data type DataType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 724,
          "chinese_text": "",
          "english_text": "pub collection method String",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 725,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 727,
          "chinese_text": "",
          "english_text": "derive Debug Clone",
          "line_type": "section",
          "has_bilingual": false
        },
        {
          "line_number": 728,
          "chinese_text": "",
          "english_text": "pub enum DataType",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 729,
          "chinese_text": "",
          "english_text": "Quantitative",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 730,
          "chinese_text": "",
          "english_text": "Qualitative",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 731,
          "chinese_text": "",
          "english_text": "Mixed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 732,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 734,
          "chinese_text": "",
          "english_text": "impl ResearchFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 735,
          "chinese_text": "",
          "english_text": "pub fn new Self",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 736,
          "chinese_text": "",
          "english_text": "ResearchFramework",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 737,
          "chinese_text": "",
          "english_text": "methodology ResearchMethodology new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 738,
          "chinese_text": "",
          "english_text": "experimental system ExperimentalSystem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 739,
          "chinese_text": "",
          "english_text": "design tools Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 740,
          "chinese_text": "",
          "english_text": "data collectors Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 741,
          "chinese_text": "",
          "english_text": "analyzers Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 742,
          "chinese_text": "",
          "english_text": "validators Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 743,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 744,
          "chinese_text": "",
          "english_text": "verification engine VerificationEngine new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 745,
          "chinese_text": "",
          "english_text": "proof generator ProofGenerator new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 746,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 747,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 749,
          "chinese_text": "",
          "english_text": "pub fn conduct research self problem ResearchProblem ResearchResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 750,
          "chinese_text": "设计研究方法",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 751,
          "chinese_text": "",
          "english_text": "let design self methodology design research problem",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 753,
          "chinese_text": "执行实验",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 754,
          "chinese_text": "",
          "english_text": "let experiment result self execute experiment design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 756,
          "chinese_text": "验证结果",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 757,
          "chinese_text": "",
          "english_text": "let verification result self verify results experiment result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 759,
          "chinese_text": "生成证明",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 760,
          "chinese_text": "",
          "english_text": "let proof self generate proof verification result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 762,
          "chinese_text": "",
          "english_text": "ResearchResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 763,
          "chinese_text": "",
          "english_text": "problem problem clone",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 764,
          "chinese_text": "",
          "english_text": "design design",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 765,
          "chinese_text": "",
          "english_text": "experiment result experiment result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 766,
          "chinese_text": "",
          "english_text": "verification result verification result",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 767,
          "chinese_text": "",
          "english_text": "proof proof",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 768,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 769,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 771,
          "chinese_text": "",
          "english_text": "fn execute experiment self design ResearchDesign ExperimentResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 772,
          "chinese_text": "简化的实验执行",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 773,
          "chinese_text": "",
          "english_text": "ExperimentResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 774,
          "chinese_text": "",
          "english_text": "data ExperimentData",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 775,
          "chinese_text": "",
          "english_text": "variables HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 776,
          "chinese_text": "",
          "english_text": "metadata HashMap new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 777,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 778,
          "chinese_text": "",
          "english_text": "analysis AnalysisResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 779,
          "chinese_text": "",
          "english_text": "statistical results Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 780,
          "chinese_text": "",
          "english_text": "formal results Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 781,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 782,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 783,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 785,
          "chinese_text": "",
          "english_text": "fn verify results self experiment result ExperimentResult VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 786,
          "chinese_text": "简化的结果验证",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 787,
          "chinese_text": "",
          "english_text": "VerificationResult",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 788,
          "chinese_text": "",
          "english_text": "hypothesis Hypothesis",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 789,
          "chinese_text": "",
          "english_text": "statement Test hypothesis to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 790,
          "chinese_text": "",
          "english_text": "variables Vec new",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 791,
          "chinese_text": "",
          "english_text": "expected outcome Expected outcome to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 792,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 793,
          "chinese_text": "",
          "english_text": "is supported true",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 794,
          "chinese_text": "",
          "english_text": "confidence",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 795,
          "chinese_text": "",
          "english_text": "evidence vec Statistical evidence to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 796,
          "chinese_text": "",
          "english_text": "conclusion Hypothesis supported to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 797,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 798,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 800,
          "chinese_text": "",
          "english_text": "fn generate proof self verification result VerificationResult Proof",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 801,
          "chinese_text": "简化的证明生成",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 802,
          "chinese_text": "",
          "english_text": "Proof",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 803,
          "chinese_text": "",
          "english_text": "theorem Research Theorem to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 804,
          "chinese_text": "",
          "english_text": "statement If hypothesis is supported then conclusion is valid to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 805,
          "chinese_text": "",
          "english_text": "proof steps vec Step Hypothesis verification to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 806,
          "chinese_text": "",
          "english_text": "conclusion Research conclusion is valid to string",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 807,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 808,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 809,
          "chinese_text": "",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 810,
          "chinese_text": "",
          "english_text": "",
          "line_type": "code",
          "has_bilingual": false
        },
        {
          "line_number": 812,
          "chinese_text": "性能分析",
          "english_text": "Performance Analysis",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 814,
          "chinese_text": "时间复杂度",
          "english_text": "Time Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 816,
          "chinese_text": "研究设计",
          "english_text": "Research Design O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 817,
          "chinese_text": "实验执行",
          "english_text": "Experiment Execution O n log n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 818,
          "chinese_text": "结果验证",
          "english_text": "Result Verification O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 819,
          "chinese_text": "证明生成",
          "english_text": "Proof Generation O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 821,
          "chinese_text": "空间复杂度",
          "english_text": "Space Complexity",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 823,
          "chinese_text": "研究框架",
          "english_text": "Research Framework O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 824,
          "chinese_text": "实验数据",
          "english_text": "Experiment Data O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 825,
          "chinese_text": "验证结果",
          "english_text": "Verification Results O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 826,
          "chinese_text": "证明存储",
          "english_text": "Proof Storage O n",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 828,
          "chinese_text": "工程案例",
          "english_text": "Engineering Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 830,
          "chinese_text": "案例 知识图谱质量评估研究",
          "english_text": "Case",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 832,
          "chinese_text": "背景",
          "english_text": "Background",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 833,
          "chinese_text": "设计一个系统化的研究方法 用于评估知识图谱的质量和完整性 确保评估结果的科学性和可靠性",
          "english_text": "",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 835,
          "chinese_text": "解决方案",
          "english_text": "Solution",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 837,
          "chinese_text": "建立形式化的质量评估框架",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 838,
          "chinese_text": "设计多维度评估指标",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 839,
          "chinese_text": "实现自动化评估流程",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 840,
          "chinese_text": "提供统计验证和形式化证明",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 842,
          "chinese_text": "结果评估",
          "english_text": "Results Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 844,
          "chinese_text": "评估准确性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 845,
          "chinese_text": "评估一致性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 846,
          "chinese_text": "评估效率 倍提升",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 847,
          "chinese_text": "方法可靠性",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 849,
          "chinese_text": "应用领域",
          "english_text": "Application Domains",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 851,
          "chinese_text": "主要应用",
          "english_text": "Primary Applications",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 853,
          "chinese_text": "应用领域 中文描述",
          "english_text": "Domain Chinese Description English Description",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 854,
          "chinese_text": "",
          "english_text": "",
          "line_type": "table",
          "has_bilingual": false
        },
        {
          "line_number": 855,
          "chinese_text": "科学研究 指导知识图谱领域的科学研究",
          "english_text": "Scientific Research Guide scientific research in knowledge graph field",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 856,
          "chinese_text": "实验设计 设计科学实验和验证方法",
          "english_text": "Experimental Design Design scientific experiments and verification methods",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 857,
          "chinese_text": "结果验证 验证研究结果的正确性",
          "english_text": "Result Verification Verify the correctness of research results",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 858,
          "chinese_text": "方法评估 评估研究方法的有效性",
          "english_text": "Method Evaluation Evaluate the effectiveness of research methods",
          "line_type": "table",
          "has_bilingual": true
        },
        {
          "line_number": 860,
          "chinese_text": "实际案例",
          "english_text": "Real world Cases",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 862,
          "chinese_text": "案例",
          "english_text": "Case Stanford Knowledge Graph Research",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 864,
          "chinese_text": "项目名称",
          "english_text": "Project Name Stanford Knowledge Graph Research Methodology",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 865,
          "chinese_text": "应用场景 知识图谱质量评估研究",
          "english_text": "Application Scenario",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 866,
          "chinese_text": "技术实现 形式化验证和统计分析方法",
          "english_text": "Technical Implementation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 867,
          "chinese_text": "效果评估 显著提高了研究结果的可信度",
          "english_text": "Effect Evaluation",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 869,
          "chinese_text": "前沿发展",
          "english_text": "Frontier Development",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 871,
          "chinese_text": "最新研究",
          "english_text": "Latest Research",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 873,
          "chinese_text": "研究方向 自动化研究方法",
          "english_text": "Research Direction",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 875,
          "chinese_text": "研究内容 基于 的自动化研究设计和验证",
          "english_text": "Research Content AI",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 876,
          "chinese_text": "技术突破 实现了自动化的研究流程",
          "english_text": "Technical Breakthrough",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 877,
          "chinese_text": "应用前景 在多个研究领域有重要应用",
          "english_text": "Application Prospects",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 879,
          "chinese_text": "发展趋势",
          "english_text": "Development Trends",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 881,
          "chinese_text": "趋势 智能化研究",
          "english_text": "Trend",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 883,
          "chinese_text": "中文 研究方法论正在向智能化和自动化方向发展",
          "english_text": "Chinese",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 884,
          "chinese_text": "",
          "english_text": "English Research methodology is moving towards intelligence and automation",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 886,
          "chinese_text": "总结与展望",
          "english_text": "Summary and Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 888,
          "chinese_text": "核心要点",
          "english_text": "Key Points",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 890,
          "chinese_text": "要点 研究方法论是确保研究质量的关键 提供科学的验证机制",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 891,
          "chinese_text": "要点 现代研究方法论结合了形式化验证和统计分析 提高了研究可靠性",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 892,
          "chinese_text": "要点 研究方法论正在向智能化和自动化方向发展",
          "english_text": "Point",
          "line_type": "text",
          "has_bilingual": true
        },
        {
          "line_number": 894,
          "chinese_text": "未来展望",
          "english_text": "Future Prospects",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 896,
          "chinese_text": "发展方向",
          "english_text": "Development Directions",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 898,
          "chinese_text": "短期目标 提高研究方法的自动化和标准化程度",
          "english_text": "Short term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 899,
          "chinese_text": "中期目标 实现智能化的研究方法",
          "english_text": "Medium term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 900,
          "chinese_text": "长期目标 构建自适应的研究生态系统",
          "english_text": "Long term Goals",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 902,
          "chinese_text": "参考文献",
          "english_text": "References",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 904,
          "chinese_text": "学术文献",
          "english_text": "Academic Literature",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 906,
          "chinese_text": "",
          "english_text": "Creswell J W Research design Qualitative quantitative and mixed methods approaches Sage publications",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 907,
          "chinese_text": "",
          "english_text": "Yin R K Case study research and applications Design and methods Sage publications",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 908,
          "chinese_text": "",
          "english_text": "Maxwell J A Qualitative research design An interactive approach Sage publications",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 910,
          "chinese_text": "技术文档",
          "english_text": "Technical Documentation",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 912,
          "chinese_text": "",
          "english_text": "Stanford Research Methodology https research stanford edu Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 913,
          "chinese_text": "",
          "english_text": "MIT Research Design https web mit edu research Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 914,
          "chinese_text": "",
          "english_text": "Harvard Research Methods https research harvard edu Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 916,
          "chinese_text": "在线资源",
          "english_text": "Online Resources",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 918,
          "chinese_text": "",
          "english_text": "Stanford CS Machine Learning https cs stanford edu Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 919,
          "chinese_text": "",
          "english_text": "MIT Natural Language Processing https ocw mit edu courses electrical engineering and computer science advanced natural language processing fall Accessed",
          "line_type": "text",
          "has_bilingual": false
        },
        {
          "line_number": 921,
          "chinese_text": "相关链接",
          "english_text": "Related Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 923,
          "chinese_text": "内部链接",
          "english_text": "Internal Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 925,
          "chinese_text": "知识表示",
          "english_text": "knowledge representation README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 926,
          "chinese_text": "形式化方法",
          "english_text": "formal methods README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 927,
          "chinese_text": "工程实践",
          "english_text": "engineering practice README md",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 929,
          "chinese_text": "外部链接",
          "english_text": "External Links",
          "line_type": "section",
          "has_bilingual": true
        },
        {
          "line_number": 931,
          "chinese_text": "",
          "english_text": "Stanford Research https research stanford edu",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 932,
          "chinese_text": "",
          "english_text": "MIT Research https web mit edu research",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 933,
          "chinese_text": "",
          "english_text": "Harvard Research https research harvard edu",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 935,
          "chinese_text": "",
          "english_text": "",
          "line_type": "list",
          "has_bilingual": false
        },
        {
          "line_number": 937,
          "chinese_text": "最后更新",
          "english_text": "Last Updated",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 938,
          "chinese_text": "版本",
          "english_text": "Version",
          "line_type": "list",
          "has_bilingual": true
        },
        {
          "line_number": 939,
          "chinese_text": "维护者",
          "english_text": "Maintainer Knowledge Graph Team Knowledge Graph Team",
          "line_type": "list",
          "has_bilingual": true
        }
      ]
    }
  ]
}